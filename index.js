// Generated by purs bundle 0.14.4
var PS = {};
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Alt"] = $PS["Control.Alt"] || {};
  var exports = $PS["Control.Alt"];
  var alt = function (dict) {
      return dict.alt;
  };
  exports["alt"] = alt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var semigroupoidFn = {
      compose: function (f) {
          return function (g) {
              return function (x) {
                  return f(g(x));
              };
          };
      }
  };
  var compose = function (dict) {
      return dict.compose;
  };
  exports["compose"] = compose;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = {
      identity: function (x) {
          return x;
      },
      Semigroupoid0: function () {
          return Control_Semigroupoid.semigroupoidFn;
      }
  };
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];                    
  var on = function (f) {
      return function (g) {
          return function (x) {
              return function (y) {
                  return f(g(x))(g(y));
              };
          };
      };
  };
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var applyFlipped = function (x) {
      return function (f) {
          return f(x);
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
  exports["applyFlipped"] = applyFlipped;
  exports["on"] = on;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];       
  var showUnit = {
      show: function (v) {
          return "unit";
      }
  };
  exports["showUnit"] = showUnit;
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];                  
  var map = function (dict) {
      return dict.map;
  };
  var mapFlipped = function (dictFunctor) {
      return function (fa) {
          return function (f) {
              return map(dictFunctor)(f)(fa);
          };
      };
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var voidLeft = function (dictFunctor) {
      return function (f) {
          return function (x) {
              return map(dictFunctor)(Data_Function["const"](x))(f);
          };
      };
  };
  var voidRight = function (dictFunctor) {
      return function (x) {
          return map(dictFunctor)(Data_Function["const"](x));
      };
  };
  var functorFn = {
      map: Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn)
  };
  var functorArray = {
      map: $foreign.arrayMap
  };
  exports["map"] = map;
  exports["mapFlipped"] = mapFlipped;
  exports["void"] = $$void;
  exports["voidRight"] = voidRight;
  exports["voidLeft"] = voidLeft;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var applyFn = {
      apply: function (f) {
          return function (g) {
              return function (x) {
                  return f(x)(g(x));
              };
          };
      },
      Functor0: function () {
          return Data_Functor.functorFn;
      }
  };
  var apply = function (dict) {
      return dict.apply;
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  exports["apply"] = apply;
  exports["applySecond"] = applySecond;
  exports["applyFn"] = applyFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Unit = $PS["Data.Unit"];                  
  var pure = function (dict) {
      return dict.pure;
  };
  var unless = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (!v) {
                  return v1;
              };
              if (v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 66, column 1 - line 66, column 65): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 61, column 1 - line 61, column 63): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  var applicativeFn = {
      pure: function (x) {
          return function (v) {
              return x;
          };
      },
      Apply0: function () {
          return Control_Apply.applyFn;
      }
  };
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["unless"] = unless;
  exports["when"] = when;
  exports["applicativeFn"] = applicativeFn;
})(PS);
(function(exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
      function (c, i) {
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };

  exports.showArrayImpl = function (f) {
    return function (xs) {
      var ss = [];
      for (var i = 0, l = xs.length; i < l; i++) {
        ss[i] = f(xs[i]);
      }
      return "[" + ss.join(",") + "]";
    };
  };

  exports.cons = function (head) {
    return function (tail) {
      return [head].concat(tail);
    };
  };

  exports.join = function (separator) {
    return function (xs) {
      return xs.join(separator);
    };
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Symbol"] = $PS["Data.Symbol"] || {};
  var exports = $PS["Data.Symbol"];
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["reflectSymbol"] = reflectSymbol;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeHas = function (label) {
    return function (rec) {
      return {}.hasOwnProperty.call(rec, label);
    };
  };

  exports.unsafeGet = function (label) {
    return function (rec) {
      return rec[label];
    };
  };

  exports.unsafeSet = function (label) {
    return function (value) {
      return function (rec) {
        var copy = {};
        for (var key in rec) {
          if ({}.hasOwnProperty.call(rec, key)) {
            copy[key] = rec[key];
          }
        }
        copy[label] = value;
        return copy;
      };
    };
  };
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Record.Unsafe"] = $PS["Record.Unsafe"] || {};
  var exports = $PS["Record.Unsafe"];
  var $foreign = $PS["Record.Unsafe"];
  exports["unsafeHas"] = $foreign.unsafeHas;
  exports["unsafeGet"] = $foreign.unsafeGet;
  exports["unsafeSet"] = $foreign.unsafeSet;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Type.Proxy"] = $PS["Type.Proxy"] || {};
  var exports = $PS["Type.Proxy"];
  var $$Proxy = (function () {
      function $$Proxy() {

      };
      $$Proxy.value = new $$Proxy();
      return $$Proxy;
  })();
  exports["Proxy"] = $$Proxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var showString = {
      show: $foreign.showStringImpl
  };
  var showRecordFieldsNil = {
      showRecordFields: function (v) {
          return function (v1) {
              return [  ];
          };
      }
  };
  var showRecordFields = function (dict) {
      return dict.showRecordFields;
  };
  var showRecord = function (dictRowToList) {
      return function (dictShowRecordFields) {
          return {
              show: function (record) {
                  var v = showRecordFields(dictShowRecordFields)(Type_Proxy["Proxy"].value)(record);
                  if (v.length === 0) {
                      return "{}";
                  };
                  return $foreign.join(" ")([ "{", $foreign.join(", ")(v), "}" ]);
              }
          };
      };
  };
  var showNumber = {
      show: $foreign.showNumberImpl
  };
  var showInt = {
      show: $foreign.showIntImpl
  };
  var showBoolean = {
      show: function (v) {
          if (v) {
              return "true";
          };
          if (!v) {
              return "false";
          };
          throw new Error("Failed pattern match at Data.Show (line 20, column 1 - line 22, column 23): " + [ v.constructor.name ]);
      }
  };
  var show = function (dict) {
      return dict.show;
  };
  var showArray = function (dictShow) {
      return {
          show: $foreign.showArrayImpl(show(dictShow))
      };
  };
  var showRecordFieldsCons = function (dictIsSymbol) {
      return function (dictShowRecordFields) {
          return function (dictShow) {
              return {
                  showRecordFields: function (v) {
                      return function (record) {
                          var tail = showRecordFields(dictShowRecordFields)(Type_Proxy["Proxy"].value)(record);
                          var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                          var focus = Record_Unsafe.unsafeGet(key)(record);
                          return $foreign.cons($foreign.join(": ")([ key, show(dictShow)(focus) ]))(tail);
                      };
                  }
              };
          };
      };
  };
  exports["show"] = show;
  exports["showBoolean"] = showBoolean;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;
  exports["showString"] = showString;
  exports["showArray"] = showArray;
  exports["showRecord"] = showRecord;
  exports["showRecordFieldsNil"] = showRecordFieldsNil;
  exports["showRecordFieldsCons"] = showRecordFieldsCons;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Show = $PS["Data.Show"];                
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var showMaybe = function (dictShow) {
      return {
          show: function (v) {
              if (v instanceof Just) {
                  return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
              };
              if (v instanceof Nothing) {
                  return "Nothing";
              };
              throw new Error("Failed pattern match at Data.Maybe (line 216, column 1 - line 218, column 28): " + [ v.constructor.name ]);
          }
      };
  };
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 230, column 1 - line 230, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = {
      map: function (v) {
          return function (v1) {
              if (v1 instanceof Just) {
                  return new Just(v(v1.value0));
              };
              return Nothing.value;
          };
      }
  };
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          if (v instanceof Just) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 281, column 1 - line 281, column 46): " + [ v.constructor.name ]);
      };
  };
  var applyMaybe = {
      apply: function (v) {
          return function (v1) {
              if (v instanceof Just) {
                  return Data_Functor.map(functorMaybe)(v.value0)(v1);
              };
              if (v instanceof Nothing) {
                  return Nothing.value;
              };
              throw new Error("Failed pattern match at Data.Maybe (line 68, column 1 - line 70, column 30): " + [ v.constructor.name, v1.constructor.name ]);
          };
      },
      Functor0: function () {
          return functorMaybe;
      }
  };
  var bindMaybe = {
      bind: function (v) {
          return function (v1) {
              if (v instanceof Just) {
                  return v1(v.value0);
              };
              if (v instanceof Nothing) {
                  return Nothing.value;
              };
              throw new Error("Failed pattern match at Data.Maybe (line 126, column 1 - line 128, column 28): " + [ v.constructor.name, v1.constructor.name ]);
          };
      },
      Apply0: function () {
          return applyMaybe;
      }
  };
  var applicativeMaybe = {
      pure: Just.create,
      Apply0: function () {
          return applyMaybe;
      }
  };
  var altMaybe = {
      alt: function (v) {
          return function (v1) {
              if (v instanceof Nothing) {
                  return v1;
              };
              return v;
          };
      },
      Functor0: function () {
          return functorMaybe;
      }
  };
  var plusMaybe = {
      empty: Nothing.value,
      Alt0: function () {
          return altMaybe;
      }
  };
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromMaybe"] = fromMaybe;
  exports["isJust"] = isJust;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["plusMaybe"] = plusMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["showMaybe"] = showMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = {
      map: function (f) {
          return function (m) {
              if (m instanceof Left) {
                  return new Left(m.value0);
              };
              if (m instanceof Right) {
                  return new Right(f(m.value0));
              };
              throw new Error("Failed pattern match at Data.Either (line 31, column 1 - line 31, column 52): " + [ m.constructor.name ]);
          };
      }
  };
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var hush = either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["hush"] = hush;
  exports["functorEither"] = functorEither;
})(PS);
(function(exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  "use strict";

  var refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqBooleanImpl = refEq;
  exports.eqIntImpl = refEq;
  exports.eqNumberImpl = refEq;
  exports.eqCharImpl = refEq;
  exports.eqStringImpl = refEq;

  exports.eqArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        if (xs.length !== ys.length) return false;
        for (var i = 0; i < xs.length; i++) {
          if (!f(xs[i])(ys[i])) return false;
        }
        return true;
      };
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Proxy = $PS["Type.Proxy"];
  var eqUnit = {
      eq: function (v) {
          return function (v1) {
              return true;
          };
      }
  };
  var eqString = {
      eq: $foreign.eqStringImpl
  };
  var eqRowNil = {
      eqRecord: function (v) {
          return function (v1) {
              return function (v2) {
                  return true;
              };
          };
      }
  };
  var eqRecord = function (dict) {
      return dict.eqRecord;
  };
  var eqRec = function (dictRowToList) {
      return function (dictEqRecord) {
          return {
              eq: eqRecord(dictEqRecord)(Type_Proxy["Proxy"].value)
          };
      };
  };
  var eqNumber = {
      eq: $foreign.eqNumberImpl
  };
  var eqInt = {
      eq: $foreign.eqIntImpl
  };
  var eqChar = {
      eq: $foreign.eqCharImpl
  };
  var eqBoolean = {
      eq: $foreign.eqBooleanImpl
  };
  var eq = function (dict) {
      return dict.eq;
  };
  var eqArray = function (dictEq) {
      return {
          eq: $foreign.eqArrayImpl(eq(dictEq))
      };
  };
  var eqRowCons = function (dictEqRecord) {
      return function (dictCons) {
          return function (dictIsSymbol) {
              return function (dictEq) {
                  return {
                      eqRecord: function (v) {
                          return function (ra) {
                              return function (rb) {
                                  var tail = eqRecord(dictEqRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
                                  var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                                  var get = Record_Unsafe.unsafeGet(key);
                                  return eq(dictEq)(get(ra))(get(rb)) && tail;
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var notEq = function (dictEq) {
      return function (x) {
          return function (y) {
              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
          };
      };
  };
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
  exports["eqNumber"] = eqNumber;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
  exports["eqUnit"] = eqUnit;
  exports["eqArray"] = eqArray;
  exports["eqRec"] = eqRec;
  exports["eqRowNil"] = eqRowNil;
  exports["eqRowCons"] = eqRowCons;
})(PS);
(function(exports) {
  "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.HeytingAlgebra"] = $PS["Data.HeytingAlgebra"] || {};
  var exports = $PS["Data.HeytingAlgebra"];
  var $foreign = $PS["Data.HeytingAlgebra"];
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = {
      ff: false,
      tt: true,
      implies: function (a) {
          return function (b) {
              return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
          };
      },
      conj: $foreign.boolConj,
      disj: $foreign.boolDisj,
      not: $foreign.boolNot
  };
  var conj = function (dict) {
      return dict.conj;
  };
  var heytingAlgebraFunction = function (dictHeytingAlgebra) {
      return {
          ff: function (v) {
              return ff(dictHeytingAlgebra);
          },
          tt: function (v) {
              return tt(dictHeytingAlgebra);
          },
          implies: function (f) {
              return function (g) {
                  return function (a) {
                      return implies(dictHeytingAlgebra)(f(a))(g(a));
                  };
              };
          },
          conj: function (f) {
              return function (g) {
                  return function (a) {
                      return conj(dictHeytingAlgebra)(f(a))(g(a));
                  };
              };
          },
          disj: function (f) {
              return function (g) {
                  return function (a) {
                      return disj(dictHeytingAlgebra)(f(a))(g(a));
                  };
              };
          },
          not: function (f) {
              return function (a) {
                  return not(dictHeytingAlgebra)(f(a));
              };
          }
      };
  };
  exports["ff"] = ff;
  exports["disj"] = disj;
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
  exports["heytingAlgebraFunction"] = heytingAlgebraFunction;
})(PS);
(function(exports) {
  "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];
  var Type_Proxy = $PS["Type.Proxy"];
  var semigroupUnit = {
      append: function (v) {
          return function (v1) {
              return Data_Unit.unit;
          };
      }
  };
  var semigroupString = {
      append: $foreign.concatString
  };
  var semigroupRecordNil = {
      appendRecord: function (v) {
          return function (v1) {
              return function (v2) {
                  return {};
              };
          };
      }
  };
  var semigroupArray = {
      append: $foreign.concatArray
  };
  var appendRecord = function (dict) {
      return dict.appendRecord;
  };
  var semigroupRecord = function (dictRowToList) {
      return function (dictSemigroupRecord) {
          return {
              append: appendRecord(dictSemigroupRecord)(Type_Proxy["Proxy"].value)
          };
      };
  };
  var append = function (dict) {
      return dict.append;
  };
  var semigroupFn = function (dictSemigroup) {
      return {
          append: function (f) {
              return function (g) {
                  return function (x) {
                      return append(dictSemigroup)(f(x))(g(x));
                  };
              };
          }
      };
  };
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupUnit"] = semigroupUnit;
  exports["semigroupFn"] = semigroupFn;
  exports["semigroupArray"] = semigroupArray;
  exports["semigroupRecord"] = semigroupRecord;
  exports["semigroupRecordNil"] = semigroupRecordNil;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var monoidUnit = {
      mempty: Data_Unit.unit,
      Semigroup0: function () {
          return Data_Semigroup.semigroupUnit;
      }
  };
  var monoidString = {
      mempty: "",
      Semigroup0: function () {
          return Data_Semigroup.semigroupString;
      }
  };
  var monoidRecordNil = {
      memptyRecord: function (v) {
          return {};
      },
      SemigroupRecord0: function () {
          return Data_Semigroup.semigroupRecordNil;
      }
  };
  var memptyRecord = function (dict) {
      return dict.memptyRecord;
  };
  var monoidRecord = function (dictRowToList) {
      return function (dictMonoidRecord) {
          return {
              mempty: memptyRecord(dictMonoidRecord)(Type_Proxy["Proxy"].value),
              Semigroup0: function () {
                  return Data_Semigroup.semigroupRecord()(dictMonoidRecord.SemigroupRecord0());
              }
          };
      };
  };
  var mempty = function (dict) {
      return dict.mempty;
  };
  var monoidFn = function (dictMonoid) {
      return {
          mempty: function (v) {
              return mempty(dictMonoid);
          },
          Semigroup0: function () {
              return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
          }
      };
  };
  exports["mempty"] = mempty;
  exports["monoidUnit"] = monoidUnit;
  exports["monoidFn"] = monoidFn;
  exports["monoidString"] = monoidString;
  exports["monoidRecord"] = monoidRecord;
  exports["monoidRecordNil"] = monoidRecordNil;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Monoid.Disj"] = $PS["Data.Monoid.Disj"] || {};
  var exports = $PS["Data.Monoid.Disj"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictHeytingAlgebra) {
      return {
          append: function (v) {
              return function (v1) {
                  return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
              };
          }
      };
  };
  var monoidDisj = function (dictHeytingAlgebra) {
      return {
          mempty: Data_HeytingAlgebra.ff(dictHeytingAlgebra),
          Semigroup0: function () {
              return semigroupDisj(dictHeytingAlgebra);
          }
      };
  };
  exports["Disj"] = Disj;
  exports["monoidDisj"] = monoidDisj;
})(PS);
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Safe.Coerce"] = $PS["Safe.Coerce"] || {};
  var exports = $PS["Safe.Coerce"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var coerce = function (dictCoercible) {
      return Unsafe_Coerce.unsafeCoerce;
  };
  exports["coerce"] = coerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];
  var Safe_Coerce = $PS["Safe.Coerce"];                
  var wrap = function (dictNewtype) {
      return Safe_Coerce.coerce();
  };
  var unwrap = function (dictNewtype) {
      return Safe_Coerce.coerce();
  };
  var over = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (v) {
              return Safe_Coerce.coerce();
          };
      };
  };
  var alaF = function (dictCoercible) {
      return function (dictCoercible1) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      return Safe_Coerce.coerce();
                  };
              };
          };
      };
  };
  exports["wrap"] = wrap;
  exports["unwrap"] = unwrap;
  exports["alaF"] = alaF;
  exports["over"] = over;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];                
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)((function () {
                  var $316 = Control_Apply.applySecond(dictApplicative.Apply0());
                  return function ($317) {
                      return $316(f($317));
                  };
              })())(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var sequence_ = function (dictApplicative) {
      return function (dictFoldable) {
          return traverse_(dictApplicative)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var indexl = function (dictFoldable) {
      return function (idx) {
          var go = function (cursor) {
              return function (a) {
                  if (cursor.elem instanceof Data_Maybe.Just) {
                      return cursor;
                  };
                  var $157 = cursor.pos === idx;
                  if ($157) {
                      return {
                          elem: new Data_Maybe.Just(a),
                          pos: cursor.pos
                      };
                  };
                  return {
                      pos: cursor.pos + 1 | 0,
                      elem: cursor.elem
                  };
              };
          };
          var $318 = foldl(dictFoldable)(go)({
              elem: Data_Maybe.Nothing.value,
              pos: 0
          });
          return function ($319) {
              return (function (v) {
                  return v.elem;
              })($318($319));
          };
      };
  };
  var foldableMaybe = {
      foldr: function (v) {
          return function (z) {
              return function (v1) {
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return z;
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      return v(v1.value0)(z);
                  };
                  throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
              };
          };
      },
      foldl: function (v) {
          return function (z) {
              return function (v1) {
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return z;
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      return v(z)(v1.value0);
                  };
                  throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
              };
          };
      },
      foldMap: function (dictMonoid) {
          return function (v) {
              return function (v1) {
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return Data_Monoid.mempty(dictMonoid);
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      return v(v1.value0);
                  };
                  throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
      }
  };
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = {
      foldr: $foreign.foldrArray,
      foldl: $foreign.foldlArray,
      foldMap: function (dictMonoid) {
          return foldMapDefaultR(foldableArray)(dictMonoid);
      }
  };
  var foldMapDefaultL = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldl(dictFoldable)(function (acc) {
                  return function (x) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(x));
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var any = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF()()()()(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
      };
  };
  var elem = function (dictFoldable) {
      return function (dictEq) {
          var $326 = any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean);
          var $327 = Data_Eq.eq(dictEq);
          return function ($328) {
              return $326($327($328));
          };
      };
  };
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["foldMapDefaultL"] = foldMapDefaultL;
  exports["traverse_"] = traverse_;
  exports["for_"] = for_;
  exports["sequence_"] = sequence_;
  exports["indexl"] = indexl;
  exports["foldableArray"] = foldableArray;
  exports["foldableMaybe"] = foldableMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Plus"] = $PS["Control.Plus"] || {};
  var exports = $PS["Control.Plus"];
  var empty = function (dict) {
      return dict.empty;
  };
  exports["empty"] = empty;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.NonEmpty"] = $PS["Data.NonEmpty"] || {};
  var exports = $PS["Data.NonEmpty"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Semigroup = $PS["Data.Semigroup"];                  
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var singleton = function (dictPlus) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(dictPlus));
      };
  };
  var foldableNonEmpty = function (dictFoldable) {
      return {
          foldMap: function (dictMonoid) {
              return function (f) {
                  return function (v) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
                  };
              };
          },
          foldl: function (f) {
              return function (b) {
                  return function (v) {
                      return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
                  };
              };
          },
          foldr: function (f) {
              return function (b) {
                  return function (v) {
                      return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
                  };
              };
          }
      };
  };
  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
  exports["foldableNonEmpty"] = foldableNonEmpty;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.List.Types"] = $PS["Data.List.Types"] || {};
  var exports = $PS["Data.List.Types"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Semigroup = $PS["Data.Semigroup"];        
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var NonEmptyList = function (x) {
      return x;
  };
  var toList = function (v) {
      return new Cons(v.value0, v.value1);
  };
  var listMap = function (f) {
      var chunkedRevMap = function ($copy_chunksAcc) {
          return function ($copy_v) {
              var $tco_var_chunksAcc = $copy_chunksAcc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(chunksAcc, v) {
                  if (v instanceof Cons && (v.value1 instanceof Cons && v.value1.value1 instanceof Cons)) {
                      $tco_var_chunksAcc = new Cons(v, chunksAcc);
                      $copy_v = v.value1.value1.value1;
                      return;
                  };
                  var unrolledMap = function (v1) {
                      if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil)) {
                          return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
                      };
                      if (v1 instanceof Cons && v1.value1 instanceof Nil) {
                          return new Cons(f(v1.value0), Nil.value);
                      };
                      return Nil.value;
                  };
                  var reverseUnrolledMap = function ($copy_v1) {
                      return function ($copy_acc) {
                          var $tco_var_v1 = $copy_v1;
                          var $tco_done1 = false;
                          var $tco_result;
                          function $tco_loop(v1, acc) {
                              if (v1 instanceof Cons && (v1.value0 instanceof Cons && (v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons))) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                                  return;
                              };
                              $tco_done1 = true;
                              return acc;
                          };
                          while (!$tco_done1) {
                              $tco_result = $tco_loop($tco_var_v1, $copy_acc);
                          };
                          return $tco_result;
                      };
                  };
                  $tco_done = true;
                  return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
              };
              return $tco_result;
          };
      };
      return chunkedRevMap(Nil.value);
  };
  var functorList = {
      map: listMap
  };                                                                   
  var foldableList = {
      foldr: function (f) {
          return function (b) {
              var rev = (function () {
                  var go = function ($copy_acc) {
                      return function ($copy_v) {
                          var $tco_var_acc = $copy_acc;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(acc, v) {
                              if (v instanceof Nil) {
                                  $tco_done = true;
                                  return acc;
                              };
                              if (v instanceof Cons) {
                                  $tco_var_acc = new Cons(v.value0, acc);
                                  $copy_v = v.value1;
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.List.Types (line 108, column 7 - line 108, column 23): " + [ acc.constructor.name, v.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_acc, $copy_v);
                          };
                          return $tco_result;
                      };
                  };
                  return go(Nil.value);
              })();
              var $205 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);
              return function ($206) {
                  return $205(rev($206));
              };
          };
      },
      foldl: function (f) {
          var go = function ($copy_b) {
              return function ($copy_v) {
                  var $tco_var_b = $copy_b;
                  var $tco_done1 = false;
                  var $tco_result;
                  function $tco_loop(b, v) {
                      if (v instanceof Nil) {
                          $tco_done1 = true;
                          return b;
                      };
                      if (v instanceof Cons) {
                          $tco_var_b = f(b)(v.value0);
                          $copy_v = v.value1;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.List.Types (line 112, column 12 - line 114, column 30): " + [ v.constructor.name ]);
                  };
                  while (!$tco_done1) {
                      $tco_result = $tco_loop($tco_var_b, $copy_v);
                  };
                  return $tco_result;
              };
          };
          return go;
      },
      foldMap: function (dictMonoid) {
          return function (f) {
              return Data_Foldable.foldl(foldableList)(function (acc) {
                  var $207 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
                  return function ($208) {
                      return $207(f($208));
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      }
  };
  var semigroupList = {
      append: function (xs) {
          return function (ys) {
              return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
          };
      }
  };
  var semigroupNonEmptyList = {
      append: function (v) {
          return function (as$prime) {
              return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
          };
      }
  };
  var unfoldable1List = {
      unfoldr1: function (f) {
          return function (b) {
              var go = function ($copy_source) {
                  return function ($copy_memo) {
                      var $tco_var_source = $copy_source;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(source, memo) {
                          var v = f(source);
                          if (v.value1 instanceof Data_Maybe.Just) {
                              $tco_var_source = v.value1.value0;
                              $copy_memo = new Cons(v.value0, memo);
                              return;
                          };
                          if (v.value1 instanceof Data_Maybe.Nothing) {
                              $tco_done = true;
                              return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(new Cons(v.value0, memo));
                          };
                          throw new Error("Failed pattern match at Data.List.Types (line 136, column 22 - line 138, column 61): " + [ v.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_source, $copy_memo);
                      };
                      return $tco_result;
                  };
              };
              return go(b)(Nil.value);
          };
      }
  };
  var unfoldableList = {
      unfoldr: function (f) {
          return function (b) {
              var go = function ($copy_source) {
                  return function ($copy_memo) {
                      var $tco_var_source = $copy_source;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(source, memo) {
                          var v = f(source);
                          if (v instanceof Data_Maybe.Nothing) {
                              $tco_done = true;
                              return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
                          };
                          if (v instanceof Data_Maybe.Just) {
                              $tco_var_source = v.value0.value1;
                              $copy_memo = new Cons(v.value0.value0, memo);
                              return;
                          };
                          throw new Error("Failed pattern match at Data.List.Types (line 143, column 22 - line 145, column 52): " + [ v.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_source, $copy_memo);
                      };
                      return $tco_result;
                  };
              };
              return go(b)(Nil.value);
          };
      },
      Unfoldable10: function () {
          return unfoldable1List;
      }
  };
  var applyList = {
      apply: function (v) {
          return function (v1) {
              if (v instanceof Nil) {
                  return Nil.value;
              };
              if (v instanceof Cons) {
                  return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
              };
              throw new Error("Failed pattern match at Data.List.Types (line 158, column 1 - line 160, column 48): " + [ v.constructor.name, v1.constructor.name ]);
          };
      },
      Functor0: function () {
          return functorList;
      }
  };
  var applicativeList = {
      pure: function (a) {
          return new Cons(a, Nil.value);
      },
      Apply0: function () {
          return applyList;
      }
  };
  var altList = {
      alt: Data_Semigroup.append(semigroupList),
      Functor0: function () {
          return functorList;
      }
  };
  var plusList = {
      empty: Nil.value,
      Alt0: function () {
          return altList;
      }
  };
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["unfoldableList"] = unfoldableList;
  exports["applicativeList"] = applicativeList;
  exports["plusList"] = plusList;
  exports["semigroupNonEmptyList"] = semigroupNonEmptyList;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.List.NonEmpty"] = $PS["Data.List.NonEmpty"] || {};
  var exports = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var singleton = (function () {
      var $172 = Data_NonEmpty.singleton(Data_List_Types.plusList);
      return function ($173) {
          return Data_List_Types.NonEmptyList($172($173));
      };
  })();
  var cons = function (y) {
      return function (v) {
          return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));
      };
  };
  exports["singleton"] = singleton;
  exports["cons"] = cons;
})(PS);
(function(exports) {
  "use strict";

  var unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };

  exports.ordBooleanImpl = unsafeCompareImpl;
  exports.ordIntImpl = unsafeCompareImpl;
  exports.ordNumberImpl = unsafeCompareImpl;
  exports.ordStringImpl = unsafeCompareImpl;
  exports.ordCharImpl = unsafeCompareImpl;

  exports.ordArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        var i = 0;
        var xlen = xs.length;
        var ylen = ys.length;
        while (i < xlen && i < ylen) {
          var x = xs[i];
          var y = ys[i];
          var o = f(x)(y);
          if (o !== 0) {
            return o;
          }
          i++;
        }
        if (xlen === ylen) {
          return 0;
        } else if (xlen > ylen) {
          return -1;
        } else {
          return 1;
        }
      };
    };
  };
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Ordering"] = $PS["Data.Ordering"] || {};
  var exports = $PS["Data.Ordering"];
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  var eqOrdering = {
      eq: function (v) {
          return function (v1) {
              if (v instanceof LT && v1 instanceof LT) {
                  return true;
              };
              if (v instanceof GT && v1 instanceof GT) {
                  return true;
              };
              if (v instanceof EQ && v1 instanceof EQ) {
                  return true;
              };
              return false;
          };
      }
  };
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
  exports["eqOrdering"] = eqOrdering;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Ord"] = $PS["Data.Ord"] || {};
  var exports = $PS["Data.Ord"];
  var $foreign = $PS["Data.Ord"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Proxy = $PS["Type.Proxy"];
  var ordUnit = {
      compare: function (v) {
          return function (v1) {
              return Data_Ordering.EQ.value;
          };
      },
      Eq0: function () {
          return Data_Eq.eqUnit;
      }
  };
  var ordString = {
      compare: $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
      Eq0: function () {
          return Data_Eq.eqString;
      }
  };
  var ordRecordNil = {
      compareRecord: function (v) {
          return function (v1) {
              return function (v2) {
                  return Data_Ordering.EQ.value;
              };
          };
      },
      EqRecord0: function () {
          return Data_Eq.eqRowNil;
      }
  };
  var ordNumber = {
      compare: $foreign.ordNumberImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
      Eq0: function () {
          return Data_Eq.eqNumber;
      }
  };
  var ordInt = {
      compare: $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
      Eq0: function () {
          return Data_Eq.eqInt;
      }
  };
  var ordChar = {
      compare: $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
      Eq0: function () {
          return Data_Eq.eqChar;
      }
  };
  var ordBoolean = {
      compare: $foreign.ordBooleanImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
      Eq0: function () {
          return Data_Eq.eqBoolean;
      }
  };
  var compareRecord = function (dict) {
      return dict.compareRecord;
  };
  var ordRecord = function (dictRowToList) {
      return function (dictOrdRecord) {
          return {
              compare: compareRecord(dictOrdRecord)(Type_Proxy["Proxy"].value),
              Eq0: function () {
                  return Data_Eq.eqRec()(dictOrdRecord.EqRecord0());
              }
          };
      };
  };
  var compare = function (dict) {
      return dict.compare;
  };
  var comparing = function (dictOrd) {
      return function (f) {
          return function (x) {
              return function (y) {
                  return compare(dictOrd)(f(x))(f(y));
              };
          };
      };
  };
  var max = function (dictOrd) {
      return function (x) {
          return function (y) {
              var v = compare(dictOrd)(x)(y);
              if (v instanceof Data_Ordering.LT) {
                  return y;
              };
              if (v instanceof Data_Ordering.EQ) {
                  return x;
              };
              if (v instanceof Data_Ordering.GT) {
                  return x;
              };
              throw new Error("Failed pattern match at Data.Ord (line 176, column 3 - line 179, column 12): " + [ v.constructor.name ]);
          };
      };
  };
  var ordArray = function (dictOrd) {
      return {
          compare: (function () {
              var toDelta = function (x) {
                  return function (y) {
                      var v = compare(dictOrd)(x)(y);
                      if (v instanceof Data_Ordering.EQ) {
                          return 0;
                      };
                      if (v instanceof Data_Ordering.LT) {
                          return 1;
                      };
                      if (v instanceof Data_Ordering.GT) {
                          return -1 | 0;
                      };
                      throw new Error("Failed pattern match at Data.Ord (line 74, column 7 - line 77, column 17): " + [ v.constructor.name ]);
                  };
              };
              return function (xs) {
                  return function (ys) {
                      return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
                  };
              };
          })(),
          Eq0: function () {
              return Data_Eq.eqArray(dictOrd.Eq0());
          }
      };
  };
  var ordRecordCons = function (dictOrdRecord) {
      return function (dictCons) {
          return function (dictIsSymbol) {
              return function (dictOrd) {
                  return {
                      compareRecord: function (v) {
                          return function (ra) {
                              return function (rb) {
                                  var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                                  var left = compare(dictOrd)(Record_Unsafe.unsafeGet(key)(ra))(Record_Unsafe.unsafeGet(key)(rb));
                                  var $58 = Data_Eq.notEq(Data_Ordering.eqOrdering)(left)(Data_Ordering.EQ.value);
                                  if ($58) {
                                      return left;
                                  };
                                  return compareRecord(dictOrdRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
                              };
                          };
                      },
                      EqRecord0: function () {
                          return Data_Eq.eqRowCons(dictOrdRecord.EqRecord0())()(dictIsSymbol)(dictOrd.Eq0());
                      }
                  };
              };
          };
      };
  };
  exports["compare"] = compare;
  exports["comparing"] = comparing;
  exports["max"] = max;
  exports["ordBoolean"] = ordBoolean;
  exports["ordInt"] = ordInt;
  exports["ordNumber"] = ordNumber;
  exports["ordString"] = ordString;
  exports["ordChar"] = ordChar;
  exports["ordUnit"] = ordUnit;
  exports["ordArray"] = ordArray;
  exports["ordRecordNil"] = ordRecordNil;
  exports["ordRecordCons"] = ordRecordCons;
  exports["ordRecord"] = ordRecord;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Tuple"] = $PS["Data.Tuple"] || {};
  var exports = $PS["Data.Tuple"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Show = $PS["Data.Show"];                
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var uncurry = function (f) {
      return function (v) {
          return f(v.value0)(v.value1);
      };
  };
  var snd = function (v) {
      return v.value1;
  };
  var showTuple = function (dictShow) {
      return function (dictShow1) {
          return {
              show: function (v) {
                  return "(Tuple " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
              }
          };
      };
  };
  var functorTuple = {
      map: function (f) {
          return function (m) {
              return new Tuple(m.value0, f(m.value1));
          };
      }
  };
  var fst = function (v) {
      return v.value0;
  };
  var eqTuple = function (dictEq) {
      return function (dictEq1) {
          return {
              eq: function (x) {
                  return function (y) {
                      return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
                  };
              }
          };
      };
  };
  var ordTuple = function (dictOrd) {
      return function (dictOrd1) {
          return {
              compare: function (x) {
                  return function (y) {
                      var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                      if (v instanceof Data_Ordering.LT) {
                          return Data_Ordering.LT.value;
                      };
                      if (v instanceof Data_Ordering.GT) {
                          return Data_Ordering.GT.value;
                      };
                      return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
                  };
              },
              Eq0: function () {
                  return eqTuple(dictOrd.Eq0())(dictOrd1.Eq0());
              }
          };
      };
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["uncurry"] = uncurry;
  exports["showTuple"] = showTuple;
  exports["ordTuple"] = ordTuple;
  exports["functorTuple"] = functorTuple;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Applicative.Free"] = $PS["Control.Applicative.Free"] || {};
  var exports = $PS["Control.Applicative.Free"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Either = $PS["Data.Either"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Pure = (function () {
      function Pure(value0) {
          this.value0 = value0;
      };
      Pure.create = function (value0) {
          return new Pure(value0);
      };
      return Pure;
  })();
  var Lift = (function () {
      function Lift(value0) {
          this.value0 = value0;
      };
      Lift.create = function (value0) {
          return new Lift(value0);
      };
      return Lift;
  })();
  var Ap = (function () {
      function Ap(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Ap.create = function (value0) {
          return function (value1) {
              return new Ap(value0, value1);
          };
      };
      return Ap;
  })();
  var mkAp = function (fba) {
      return function (fb) {
          return new Ap(fba, fb);
      };
  };
  var liftFreeAp = Lift.create;
  var goLeft = function ($copy_dictApplicative) {
      return function ($copy_fStack) {
          return function ($copy_valStack) {
              return function ($copy_nat) {
                  return function ($copy_func) {
                      return function ($copy_count) {
                          var $tco_var_dictApplicative = $copy_dictApplicative;
                          var $tco_var_fStack = $copy_fStack;
                          var $tco_var_valStack = $copy_valStack;
                          var $tco_var_nat = $copy_nat;
                          var $tco_var_func = $copy_func;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(dictApplicative, fStack, valStack, nat, func, count) {
                              if (func instanceof Pure) {
                                  $tco_done = true;
                                  return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                      func: Control_Applicative.pure(dictApplicative)(func.value0),
                                      count: count
                                  }, fStack), valStack);
                              };
                              if (func instanceof Lift) {
                                  $tco_done = true;
                                  return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                      func: nat(func.value0),
                                      count: count
                                  }, fStack), valStack);
                              };
                              if (func instanceof Ap) {
                                  $tco_var_dictApplicative = dictApplicative;
                                  $tco_var_fStack = fStack;
                                  $tco_var_valStack = Data_List_NonEmpty.cons(func.value1)(valStack);
                                  $tco_var_nat = nat;
                                  $tco_var_func = func.value0;
                                  $copy_count = count + 1 | 0;
                                  return;
                              };
                              throw new Error("Failed pattern match at Control.Applicative.Free (line 102, column 41 - line 105, column 81): " + [ func.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_valStack, $tco_var_nat, $tco_var_func, $copy_count);
                          };
                          return $tco_result;
                      };
                  };
              };
          };
      };
  };
  var goApply = function ($copy_dictApplicative) {
      return function ($copy_fStack) {
          return function ($copy_vals) {
              return function ($copy_gVal) {
                  var $tco_var_dictApplicative = $copy_dictApplicative;
                  var $tco_var_fStack = $copy_fStack;
                  var $tco_var_vals = $copy_vals;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(dictApplicative, fStack, vals, gVal) {
                      if (fStack instanceof Data_List_Types.Nil) {
                          $tco_done = true;
                          return new Data_Either.Left(gVal);
                      };
                      if (fStack instanceof Data_List_Types.Cons) {
                          var gRes = Control_Apply.apply(dictApplicative.Apply0())(fStack.value0.func)(gVal);
                          var $14 = fStack.value0.count === 1;
                          if ($14) {
                              if (fStack.value1 instanceof Data_List_Types.Nil) {
                                  $tco_done = true;
                                  return new Data_Either.Left(gRes);
                              };
                              $tco_var_dictApplicative = dictApplicative;
                              $tco_var_fStack = fStack.value1;
                              $tco_var_vals = vals;
                              $copy_gVal = gRes;
                              return;
                          };
                          if (vals instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Data_Either.Left(gRes);
                          };
                          if (vals instanceof Data_List_Types.Cons) {
                              $tco_done = true;
                              return Data_Either.Right.create(new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                  func: gRes,
                                  count: fStack.value0.count - 1 | 0
                              }, fStack.value1), new Data_NonEmpty.NonEmpty(vals.value0, vals.value1)));
                          };
                          throw new Error("Failed pattern match at Control.Applicative.Free (line 83, column 11 - line 88, column 50): " + [ vals.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Control.Applicative.Free (line 72, column 3 - line 88, column 50): " + [ fStack.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_vals, $copy_gVal);
                  };
                  return $tco_result;
              };
          };
      };
  };
  var functorFreeAp = {
      map: function (f) {
          return function (x) {
              return mkAp(new Pure(f))(x);
          };
      }
  };
  var foldFreeAp = function (dictApplicative) {
      return function (nat) {
          return function (z) {
              var go = function ($copy_v) {
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(v) {
                      if (v.value1.value0 instanceof Pure) {
                          var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(Control_Applicative.pure(dictApplicative)(v.value1.value0.value0));
                          if (v1 instanceof Data_Either.Left) {
                              $tco_done = true;
                              return v1.value0;
                          };
                          if (v1 instanceof Data_Either.Right) {
                              $copy_v = v1.value0;
                              return;
                          };
                          throw new Error("Failed pattern match at Control.Applicative.Free (line 54, column 17 - line 56, column 24): " + [ v1.constructor.name ]);
                      };
                      if (v.value1.value0 instanceof Lift) {
                          var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(nat(v.value1.value0.value0));
                          if (v1 instanceof Data_Either.Left) {
                              $tco_done = true;
                              return v1.value0;
                          };
                          if (v1 instanceof Data_Either.Right) {
                              $copy_v = v1.value0;
                              return;
                          };
                          throw new Error("Failed pattern match at Control.Applicative.Free (line 57, column 17 - line 59, column 24): " + [ v1.constructor.name ]);
                      };
                      if (v.value1.value0 instanceof Ap) {
                          var nextVals = new Data_NonEmpty.NonEmpty(v.value1.value0.value1, v.value1.value1);
                          $copy_v = goLeft(dictApplicative)(v.value0)(nextVals)(nat)(v.value1.value0.value0)(1);
                          return;
                      };
                      throw new Error("Failed pattern match at Control.Applicative.Free (line 53, column 5 - line 62, column 47): " + [ v.value1.value0.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($copy_v);
                  };
                  return $tco_result;
              };
              return go(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_NonEmpty.singleton(z)));
          };
      };
  };
  var retractFreeAp = function (dictApplicative) {
      return foldFreeAp(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  };
  var applyFreeAp = {
      apply: function (fba) {
          return function (fb) {
              return mkAp(fba)(fb);
          };
      },
      Functor0: function () {
          return functorFreeAp;
      }
  };
  var applicativeFreeAp = {
      pure: Pure.create,
      Apply0: function () {
          return applyFreeAp;
      }
  };
  var hoistFreeAp = function (f) {
      return foldFreeAp(applicativeFreeAp)(function ($37) {
          return liftFreeAp(f($37));
      });
  };
  exports["retractFreeAp"] = retractFreeAp;
  exports["hoistFreeAp"] = hoistFreeAp;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Applicative.Indexed"] = $PS["Control.Applicative.Indexed"] || {};
  var exports = $PS["Control.Applicative.Indexed"];
  var ipure = function (dict) {
      return dict.ipure;
  };
  exports["ipure"] = ipure;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Functor.Indexed"] = $PS["Data.Functor.Indexed"] || {};
  var exports = $PS["Data.Functor.Indexed"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];                
  var imap = function (dict) {
      return dict.imap;
  };
  var ivoid = function (dictIxFunctor) {
      return imap(dictIxFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  exports["imap"] = imap;
  exports["ivoid"] = ivoid;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Apply.Indexed"] = $PS["Control.Apply.Indexed"] || {};
  var exports = $PS["Control.Apply.Indexed"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor_Indexed = $PS["Data.Functor.Indexed"];                
  var iapply = function (dict) {
      return dict.iapply;
  };
  var iapplySecond = function (dictIxApply) {
      return function (a) {
          return function (b) {
              return iapply(dictIxApply)(Data_Functor_Indexed.imap(dictIxApply.IxFunctor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  exports["iapply"] = iapply;
  exports["iapplySecond"] = iapplySecond;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];          
  var discard = function (dict) {
      return dict.discard;
  };
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var composeKleisliFlipped = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bindFlipped(dictBind)(f)(g(a));
              };
          };
      };
  };
  var discardUnit = {
      discard: function (dictBind) {
          return bind(dictBind);
      }
  };
  var join = function (dictBind) {
      return function (m) {
          return bind(dictBind)(m)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["discard"] = discard;
  exports["join"] = join;
  exports["composeKleisliFlipped"] = composeKleisliFlipped;
  exports["discardUnit"] = discardUnit;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Bind.Indexed"] = $PS["Control.Bind.Indexed"] || {};
  var exports = $PS["Control.Bind.Indexed"];               
  var idiscard = function (dict) {
      return dict.idiscard;
  };
  var ibind = function (dict) {
      return dict.ibind;
  };
  var ixDiscardUnit = {
      idiscard: function (dictIxBind) {
          return ibind(dictIxBind);
      }
  };
  exports["idiscard"] = idiscard;
  exports["ixDiscardUnit"] = ixDiscardUnit;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Comonad"] = $PS["Control.Comonad"] || {};
  var exports = $PS["Control.Comonad"];                  
  var extract = function (dict) {
      return dict.extract;
  };
  exports["extract"] = extract;
})(PS);
(function(exports) {
  "use strict";

  exports.defer = function (thunk) {
    var v = null;
    return function() {
      if (thunk === undefined) return v;

      v = thunk();
      thunk = undefined; // eslint-disable-line no-param-reassign
      return v;
    };
  };

  exports.force = function (l) {
    return l();
  };
})(PS["Data.Lazy"] = PS["Data.Lazy"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Lazy"] = $PS["Data.Lazy"] || {};
  var exports = $PS["Data.Lazy"];
  var $foreign = $PS["Data.Lazy"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];                
  var showLazy = function (dictShow) {
      return {
          show: function (x) {
              return "(defer \\_ -> " + (Data_Show.show(dictShow)($foreign.force(x)) + ")");
          }
      };
  };
  var functorLazy = {
      map: function (f) {
          return function (l) {
              return $foreign.defer(function (v) {
                  return f($foreign.force(l));
              });
          };
      }
  };
  var eqLazy = function (dictEq) {
      return {
          eq: function (x) {
              return function (y) {
                  return Data_Eq.eq(dictEq)($foreign.force(x))($foreign.force(y));
              };
          }
      };
  };
  var ordLazy = function (dictOrd) {
      return {
          compare: function (x) {
              return function (y) {
                  return Data_Ord.compare(dictOrd)($foreign.force(x))($foreign.force(y));
              };
          },
          Eq0: function () {
              return eqLazy(dictOrd.Eq0());
          }
      };
  };
  exports["eqLazy"] = eqLazy;
  exports["ordLazy"] = ordLazy;
  exports["functorLazy"] = functorLazy;
  exports["showLazy"] = showLazy;
  exports["defer"] = $foreign.defer;
  exports["force"] = $foreign.force;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Comonad.Cofree"] = $PS["Control.Comonad.Cofree"] || {};
  var exports = $PS["Control.Comonad.Cofree"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lazy = $PS["Data.Lazy"];
  var Data_Tuple = $PS["Data.Tuple"];              
  var Cofree = function (x) {
      return x;
  };
  var tail = function (v) {
      return Data_Tuple.snd(Data_Lazy.force(v));
  };
  var mkCofree = function (a) {
      return function (t) {
          return Data_Lazy.defer(function (v) {
              return new Data_Tuple.Tuple(a, t);
          });
      };
  };
  var head = function (v) {
      return Data_Tuple.fst(Data_Lazy.force(v));
  };
  var functorCofree = function (dictFunctor) {
      return {
          map: function (f) {
              var loop = function (v) {
                  return Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
                      return new Data_Tuple.Tuple(f(v1.value0), Data_Functor.map(dictFunctor)(loop)(v1.value1));
                  })(v);
              };
              return loop;
          }
      };
  };
  var extendCofree = function (dictFunctor) {
      return {
          extend: function (f) {
              var loop = function (v) {
                  return Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
                      return new Data_Tuple.Tuple(f(v), Data_Functor.map(dictFunctor)(loop)(v1.value1));
                  })(v);
              };
              return loop;
          },
          Functor0: function () {
              return functorCofree(dictFunctor);
          }
      };
  };
  var deferCofree = function ($66) {
      return Cofree(Data_Lazy.defer($66));
  };
  var comonadCofree = function (dictFunctor) {
      return {
          extract: head,
          Extend0: function () {
              return extendCofree(dictFunctor);
          }
      };
  };
  exports["deferCofree"] = deferCofree;
  exports["mkCofree"] = mkCofree;
  exports["head"] = head;
  exports["tail"] = tail;
  exports["comonadCofree"] = comonadCofree;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Comonad.Cofree.Class"] = $PS["Control.Comonad.Cofree.Class"] || {};
  var exports = $PS["Control.Comonad.Cofree.Class"];
  var Control_Comonad_Cofree = $PS["Control.Comonad.Cofree"];
  var unwrapCofree = function (dict) {
      return dict.unwrapCofree;
  };
  var comonadCofreeCofree = function (dictFunctor) {
      return {
          unwrapCofree: Control_Comonad_Cofree.tail,
          Functor0: function () {
              return dictFunctor;
          },
          Comonad1: function () {
              return Control_Comonad_Cofree.comonadCofree(dictFunctor);
          }
      };
  };
  exports["unwrapCofree"] = unwrapCofree;
  exports["comonadCofreeCofree"] = comonadCofreeCofree;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var unlessM = function (dictMonad) {
      return function (mb) {
          return function (m) {
              return Control_Bind.bind(dictMonad.Bind1())(mb)(function (b) {
                  return Control_Applicative.unless(dictMonad.Applicative0())(b)(m);
              });
          };
      };
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                  });
              });
          };
      };
  };
  exports["unlessM"] = unlessM;
  exports["ap"] = ap;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Monad.Error.Class"] = $PS["Control.Monad.Error.Class"] || {};
  var exports = $PS["Control.Monad.Error.Class"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];                        
  var throwError = function (dict) {
      return dict.throwError;
  };
  var catchError = function (dict) {
      return dict.catchError;
  };
  var $$try = function (dictMonadError) {
      return function (a) {
          return catchError(dictMonadError)(Data_Functor.map(((((dictMonadError.MonadThrow0()).Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(a))((function () {
              var $21 = Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0());
              return function ($22) {
                  return $21(Data_Either.Left.create($22));
              };
          })());
      };
  };
  exports["throwError"] = throwError;
  exports["try"] = $$try;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Monad.Except.Trans"] = $PS["Control.Monad.Except.Trans"] || {};
  var exports = $PS["Control.Monad.Except.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];            
  var ExceptT = function (x) {
      return x;
  };
  var runExceptT = function (v) {
      return v;
  };
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return {
          map: function (f) {
              return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
          }
      };
  };
  var monadExceptT = function (dictMonad) {
      return {
          Applicative0: function () {
              return applicativeExceptT(dictMonad);
          },
          Bind1: function () {
              return bindExceptT(dictMonad);
          }
      };
  };
  var bindExceptT = function (dictMonad) {
      return {
          bind: function (v) {
              return function (k) {
                  return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either((function () {
                      var $91 = Control_Applicative.pure(dictMonad.Applicative0());
                      return function ($92) {
                          return $91(Data_Either.Left.create($92));
                      };
                  })())(function (a) {
                      var v1 = k(a);
                      return v1;
                  }));
              };
          },
          Apply0: function () {
              return applyExceptT(dictMonad);
          }
      };
  };
  var applyExceptT = function (dictMonad) {
      return {
          apply: Control_Monad.ap(monadExceptT(dictMonad)),
          Functor0: function () {
              return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
          }
      };
  };
  var applicativeExceptT = function (dictMonad) {
      return {
          pure: (function () {
              var $93 = Control_Applicative.pure(dictMonad.Applicative0());
              return function ($94) {
                  return ExceptT($93(Data_Either.Right.create($94)));
              };
          })(),
          Apply0: function () {
              return applyExceptT(dictMonad);
          }
      };
  };
  var monadThrowExceptT = function (dictMonad) {
      return {
          throwError: (function () {
              var $103 = Control_Applicative.pure(dictMonad.Applicative0());
              return function ($104) {
                  return ExceptT($103(Data_Either.Left.create($104)));
              };
          })(),
          Monad0: function () {
              return monadExceptT(dictMonad);
          }
      };
  };
  var altExceptT = function (dictSemigroup) {
      return function (dictMonad) {
          return {
              alt: function (v) {
                  return function (v1) {
                      return Control_Bind.bind(dictMonad.Bind1())(v)(function (rm) {
                          if (rm instanceof Data_Either.Right) {
                              return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(rm.value0));
                          };
                          if (rm instanceof Data_Either.Left) {
                              return Control_Bind.bind(dictMonad.Bind1())(v1)(function (rn) {
                                  if (rn instanceof Data_Either.Right) {
                                      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(rn.value0));
                                  };
                                  if (rn instanceof Data_Either.Left) {
                                      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(rm.value0)(rn.value0)));
                                  };
                                  throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 87, column 9 - line 89, column 49): " + [ rn.constructor.name ]);
                              });
                          };
                          throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 83, column 5 - line 89, column 49): " + [ rm.constructor.name ]);
                      });
                  };
              },
              Functor0: function () {
                  return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
              }
          };
      };
  };
  exports["runExceptT"] = runExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["altExceptT"] = altExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Monad.Except"] = $PS["Control.Monad.Except"] || {};
  var exports = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Newtype = $PS["Data.Newtype"];                                                
  var runExcept = (function () {
      var $0 = Data_Newtype.unwrap();
      return function ($1) {
          return $0(Control_Monad_Except_Trans.runExceptT($1));
      };
  })();
  exports["runExcept"] = runExcept;
})(PS);
(function(exports) {
  /* globals setImmediate, clearImmediate, setTimeout, clearTimeout */
  /* eslint-disable no-unused-vars, no-prototype-builtins, no-use-before-define, no-unused-labels, no-param-reassign */
  "use strict";

  var Aff = function () {
    // A unique value for empty.
    var EMPTY = {};

    /*

  An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.

  data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)

  */  
    var PURE    = "Pure";
    var THROW   = "Throw";
    var CATCH   = "Catch";
    var SYNC    = "Sync";
    var ASYNC   = "Async";
    var BIND    = "Bind";
    var BRACKET = "Bracket";
    var FORK    = "Fork";
    var SEQ     = "Sequential";

    /*

  data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)

  */  
    var MAP   = "Map";
    var APPLY = "Apply";
    var ALT   = "Alt";

    // Various constructors used in interpretation
    var CONS      = "Cons";      // Cons-list, for stacks
    var RESUME    = "Resume";    // Continue indiscriminately
    var RELEASE   = "Release";   // Continue with bracket finalizers
    var FINALIZER = "Finalizer"; // A non-interruptible effect
    var FINALIZED = "Finalized"; // Marker for finalization
    var FORKED    = "Forked";    // Reference to a forked fiber, with resumption stack
    var FIBER     = "Fiber";     // Actual fiber reference
    var THUNK     = "Thunk";     // Primed effect, ready to invoke

    function Aff(tag, _1, _2, _3) {
      this.tag = tag;
      this._1  = _1;
      this._2  = _2;
      this._3  = _3;
    }

    function AffCtr(tag) {
      var fn = function (_1, _2, _3) {
        return new Aff(tag, _1, _2, _3);
      };
      fn.tag = tag;
      return fn;
    }

    function nonCanceler(error) {
      return new Aff(PURE, void 0);
    }

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function runSync(left, right, eff) {
      try {
        return right(eff());
      } catch (error) {
        return left(error);
      }
    }

    function runAsync(left, eff, k) {
      try {
        return eff(k)();
      } catch (error) {
        k(left(error))();
        return nonCanceler;
      }
    }

    var Scheduler = function () {
      var limit    = 1024;
      var size     = 0;
      var ix       = 0;
      var queue    = new Array(limit);
      var draining = false;

      function drain() {
        var thunk;
        draining = true;
        while (size !== 0) {
          size--;
          thunk     = queue[ix];
          queue[ix] = void 0;
          ix        = (ix + 1) % limit;
          thunk();
        }
        draining = false;
      }

      return {
        isDraining: function () {
          return draining;
        },
        enqueue: function (cb) {
          var i, tmp;
          if (size === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }

          queue[(ix + size) % limit] = cb;
          size++;

          if (!draining) {
            drain();
          }
        }
      };
    }();

    function Supervisor(util) {
      var fibers  = {};
      var fiberId = 0;
      var count   = 0;

      return {
        register: function (fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function (result) {
              return function () {
                count--;
                delete fibers[fid];
              };
            }
          })();
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function () {
          return count === 0;
        },
        killAll: function (killError, cb) {
          return function () {
            if (count === 0) {
              return cb();
            }

            var killCount = 0;
            var kills     = {};

            function kill(fid) {
              kills[fid] = fibers[fid].kill(killError, function (result) {
                return function () {
                  delete kills[fid];
                  killCount--;
                  if (util.isLeft(result) && util.fromLeft(result)) {
                    setTimeout(function () {
                      throw util.fromLeft(result);
                    }, 0);
                  }
                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }

            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill(k);
              }
            }

            fibers  = {};
            fiberId = 0;
            count   = 0;

            return function (error) {
              return new Aff(SYNC, function () {
                for (var k in kills) {
                  if (kills.hasOwnProperty(k)) {
                    kills[k]();
                  }
                }
              });
            };
          };
        }
      };
    }

    // Fiber state machine
    var SUSPENDED   = 0; // Suspended, pending a join.
    var CONTINUE    = 1; // Interpret the next instruction.
    var STEP_BIND   = 2; // Apply the next bind.
    var STEP_RESULT = 3; // Handle potential failure from a result.
    var PENDING     = 4; // An async effect is running.
    var RETURN      = 5; // The current stack has returned.
    var COMPLETED   = 6; // The entire fiber has completed.

    function Fiber(util, supervisor, aff) {
      // Monotonically increasing tick, increased on each asynchronous turn.
      var runTick = 0;

      // The current branch of the state machine.
      var status = SUSPENDED;

      // The current point of interest for the state machine branch.
      var step      = aff;  // Successful step
      var fail      = null; // Failure step
      var interrupt = null; // Asynchronous interrupt

      // Stack of continuations for the current fiber.
      var bhead = null;
      var btail = null;

      // Stack of attempts and finalizers for error recovery. Every `Cons` is also
      // tagged with current `interrupt` state. We use this to track which items
      // should be ignored or evaluated as a result of a kill.
      var attempts = null;

      // A special state is needed for Bracket, because it cannot be killed. When
      // we enter a bracket acquisition or finalizer, we increment the counter,
      // and then decrement once complete.
      var bracketCount = 0;

      // Each join gets a new id so they can be revoked.
      var joinId  = 0;
      var joins   = null;
      var rethrow = true;

      // Each invocation of `run` requires a tick. When an asynchronous effect is
      // resolved, we must check that the local tick coincides with the fiber
      // tick before resuming. This prevents multiple async continuations from
      // accidentally resuming the same fiber. A common example may be invoking
      // the provided callback in `makeAff` more than once, but it may also be an
      // async effect resuming after the fiber was already cancelled.
      function run(localRunTick) {
        var tmp, result, attempt;
        while (true) {
          tmp       = null;
          result    = null;
          attempt   = null;

          switch (status) {
          case STEP_BIND:
            status = CONTINUE;
            try {
              step   = bhead(step);
              if (btail === null) {
                bhead = null;
              } else {
                bhead = btail._1;
                btail = btail._2;
              }
            } catch (e) {
              status = RETURN;
              fail   = util.left(e);
              step   = null;
            }
            break;

          case STEP_RESULT:
            if (util.isLeft(step)) {
              status = RETURN;
              fail   = step;
              step   = null;
            } else if (bhead === null) {
              status = RETURN;
            } else {
              status = STEP_BIND;
              step   = util.fromRight(step);
            }
            break;

          case CONTINUE:
            switch (step.tag) {
            case BIND:
              if (bhead) {
                btail = new Aff(CONS, bhead, btail);
              }
              bhead  = step._2;
              status = CONTINUE;
              step   = step._1;
              break;

            case PURE:
              if (bhead === null) {
                status = RETURN;
                step   = util.right(step._1);
              } else {
                status = STEP_BIND;
                step   = step._1;
              }
              break;

            case SYNC:
              status = STEP_RESULT;
              step   = runSync(util.left, util.right, step._1);
              break;

            case ASYNC:
              status = PENDING;
              step   = runAsync(util.left, step._1, function (result) {
                return function () {
                  if (runTick !== localRunTick) {
                    return;
                  }
                  runTick++;
                  Scheduler.enqueue(function () {
                    // It's possible to interrupt the fiber between enqueuing and
                    // resuming, so we need to check that the runTick is still
                    // valid.
                    if (runTick !== localRunTick + 1) {
                      return;
                    }
                    status = STEP_RESULT;
                    step   = result;
                    run(runTick);
                  });
                };
              });
              return;

            case THROW:
              status = RETURN;
              fail   = util.left(step._1);
              step   = null;
              break;

            // Enqueue the Catch so that we can call the error handler later on
            // in case of an exception.
            case CATCH:
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead    = null;
              btail    = null;
              status   = CONTINUE;
              step     = step._1;
              break;

            // Enqueue the Bracket so that we can call the appropriate handlers
            // after resource acquisition.
            case BRACKET:
              bracketCount++;
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead  = null;
              btail  = null;
              status = CONTINUE;
              step   = step._1;
              break;

            case FORK:
              status = STEP_RESULT;
              tmp    = Fiber(util, supervisor, step._2);
              if (supervisor) {
                supervisor.register(tmp);
              }
              if (step._1) {
                tmp.run();
              }
              step = util.right(tmp);
              break;

            case SEQ:
              status = CONTINUE;
              step   = sequential(util, supervisor, step._1);
              break;
            }
            break;

          case RETURN:
            bhead = null;
            btail = null;
            // If the current stack has returned, and we have no other stacks to
            // resume or finalizers to run, the fiber has halted and we can
            // invoke all join callbacks. Otherwise we need to resume.
            if (attempts === null) {
              status = COMPLETED;
              step   = interrupt || fail || step;
            } else {
              // The interrupt status for the enqueued item.
              tmp      = attempts._3;
              attempt  = attempts._1;
              attempts = attempts._2;

              switch (attempt.tag) {
              // We cannot recover from an unmasked interrupt. Otherwise we should
              // continue stepping, or run the exception handler if an exception
              // was raised.
              case CATCH:
                // We should compare the interrupt status as well because we
                // only want it to apply if there has been an interrupt since
                // enqueuing the catch.
                if (interrupt && interrupt !== tmp && bracketCount === 0) {
                  status = RETURN;
                } else if (fail) {
                  status = CONTINUE;
                  step   = attempt._2(util.fromLeft(fail));
                  fail   = null;
                }
                break;

              // We cannot resume from an unmasked interrupt or exception.
              case RESUME:
                // As with Catch, we only want to ignore in the case of an
                // interrupt since enqueing the item.
                if (interrupt && interrupt !== tmp && bracketCount === 0 || fail) {
                  status = RETURN;
                } else {
                  bhead  = attempt._1;
                  btail  = attempt._2;
                  status = STEP_BIND;
                  step   = util.fromRight(step);
                }
                break;

              // If we have a bracket, we should enqueue the handlers,
              // and continue with the success branch only if the fiber has
              // not been interrupted. If the bracket acquisition failed, we
              // should not run either.
              case BRACKET:
                bracketCount--;
                if (fail === null) {
                  result   = util.fromRight(step);
                  // We need to enqueue the Release with the same interrupt
                  // status as the Bracket that is initiating it.
                  attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);
                  // We should only coninue as long as the interrupt status has not changed or
                  // we are currently within a non-interruptable finalizer.
                  if (interrupt === tmp || bracketCount > 0) {
                    status = CONTINUE;
                    step   = attempt._3(result);
                  }
                }
                break;

              // Enqueue the appropriate handler. We increase the bracket count
              // because it should not be cancelled.
              case RELEASE:
                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                status   = CONTINUE;
                // It has only been killed if the interrupt status has changed
                // since we enqueued the item, and the bracket count is 0. If the
                // bracket count is non-zero then we are in a masked state so it's
                // impossible to be killed.
                if (interrupt && interrupt !== tmp && bracketCount === 0) {
                  step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                } else if (fail) {
                  step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                } else {
                  step = attempt._1.completed(util.fromRight(step))(attempt._2);
                }
                fail = null;
                bracketCount++;
                break;

              case FINALIZER:
                bracketCount++;
                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                status   = CONTINUE;
                step     = attempt._1;
                break;

              case FINALIZED:
                bracketCount--;
                status = RETURN;
                step   = attempt._1;
                fail   = attempt._2;
                break;
              }
            }
            break;

          case COMPLETED:
            for (var k in joins) {
              if (joins.hasOwnProperty(k)) {
                rethrow = rethrow && joins[k].rethrow;
                runEff(joins[k].handler(step));
              }
            }
            joins = null;
            // If we have an interrupt and a fail, then the thread threw while
            // running finalizers. This should always rethrow in a fresh stack.
            if (interrupt && fail) {
              setTimeout(function () {
                throw util.fromLeft(fail);
              }, 0);
            // If we have an unhandled exception, and no other fiber has joined
            // then we need to throw the exception in a fresh stack.
            } else if (util.isLeft(step) && rethrow) {
              setTimeout(function () {
                // Guard on reathrow because a completely synchronous fiber can
                // still have an observer which was added after-the-fact.
                if (rethrow) {
                  throw util.fromLeft(step);
                }
              }, 0);
            }
            return;
          case SUSPENDED:
            status = CONTINUE;
            break;
          case PENDING: return;
          }
        }
      }

      function onComplete(join) {
        return function () {
          if (status === COMPLETED) {
            rethrow = rethrow && join.rethrow;
            join.handler(step)();
            return function () {};
          }

          var jid    = joinId++;
          joins      = joins || {};
          joins[jid] = join;

          return function() {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }

      function kill(error, cb) {
        return function () {
          if (status === COMPLETED) {
            cb(util.right(void 0))();
            return function () {};
          }

          var canceler = onComplete({
            rethrow: false,
            handler: function (/* unused */) {
              return cb(util.right(void 0));
            }
          })();

          switch (status) {
          case SUSPENDED:
            interrupt = util.left(error);
            status    = COMPLETED;
            step      = interrupt;
            run(runTick);
            break;
          case PENDING:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              if (status === PENDING) {
                attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
              }
              status   = RETURN;
              step     = null;
              fail     = null;
              run(++runTick);
            }
            break;
          default:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              status = RETURN;
              step   = null;
              fail   = null;
            }
          }

          return canceler;
        };
      }

      function join(cb) {
        return function () {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();
          if (status === SUSPENDED) {
            run(runTick);
          }
          return canceler;
        };
      }

      return {
        kill: kill,
        join: join,
        onComplete: onComplete,
        isSuspended: function () {
          return status === SUSPENDED;
        },
        run: function () {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function () {
                run(runTick);
              });
            } else {
              run(runTick);
            }
          }
        }
      };
    }

    function runPar(util, supervisor, par, cb) {
      // Table of all forked fibers.
      var fiberId   = 0;
      var fibers    = {};

      // Table of currently running cancelers, as a product of `Alt` behavior.
      var killId    = 0;
      var kills     = {};

      // Error used for early cancelation on Alt branches.
      var early     = new Error("[ParAff] Early exit");

      // Error used to kill the entire tree.
      var interrupt = null;

      // The root pointer of the tree.
      var root      = EMPTY;

      // Walks a tree, invoking all the cancelers. Returns the table of pending
      // cancellation fibers.
      function kill(error, par, cb) {
        var step  = par;
        var head  = null;
        var tail  = null;
        var count = 0;
        var kills = {};
        var tmp, kid;

        loop: while (true) {
          tmp = null;

          switch (step.tag) {
          case FORKED:
            if (step._3 === EMPTY) {
              tmp = fibers[step._1];
              kills[count++] = tmp.kill(error, function (result) {
                return function () {
                  count--;
                  if (count === 0) {
                    cb(result)();
                  }
                };
              });
            }
            // Terminal case.
            if (head === null) {
              break loop;
            }
            // Go down the right side of the tree.
            step = head._2;
            if (tail === null) {
              head = null;
            } else {
              head = tail._1;
              tail = tail._2;
            }
            break;
          case MAP:
            step = step._2;
            break;
          case APPLY:
          case ALT:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }
            head = step;
            step = step._1;
            break;
          }
        }

        if (count === 0) {
          cb(util.right(void 0))();
        } else {
          // Run the cancelation effects. We alias `count` because it's mutable.
          kid = 0;
          tmp = count;
          for (; kid < tmp; kid++) {
            kills[kid] = kills[kid]();
          }
        }

        return kills;
      }

      // When a fiber resolves, we need to bubble back up the tree with the
      // result, computing the applicative nodes.
      function join(result, head, tail) {
        var fail, step, lhs, rhs, tmp, kid;

        if (util.isLeft(result)) {
          fail = result;
          step = null;
        } else {
          step = result;
          fail = null;
        }

        loop: while (true) {
          lhs = null;
          rhs = null;
          tmp = null;
          kid = null;

          // We should never continue if the entire tree has been interrupted.
          if (interrupt !== null) {
            return;
          }

          // We've made it all the way to the root of the tree, which means
          // the tree has fully evaluated.
          if (head === null) {
            cb(fail || step)();
            return;
          }

          // The tree has already been computed, so we shouldn't try to do it
          // again. This should never happen.
          // TODO: Remove this?
          if (head._3 !== EMPTY) {
            return;
          }

          switch (head.tag) {
          case MAP:
            if (fail === null) {
              head._3 = util.right(head._1(util.fromRight(step)));
              step    = head._3;
            } else {
              head._3 = fail;
            }
            break;
          case APPLY:
            lhs = head._1._3;
            rhs = head._2._3;
            // If we have a failure we should kill the other side because we
            // can't possible yield a result anymore.
            if (fail) {
              head._3 = fail;
              tmp     = true;
              kid     = killId++;

              kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(fail, null, null);
                  } else {
                    join(fail, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            } else if (lhs === EMPTY || rhs === EMPTY) {
              // We can only proceed if both sides have resolved.
              return;
            } else {
              step    = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
              head._3 = step;
            }
            break;
          case ALT:
            lhs = head._1._3;
            rhs = head._2._3;
            // We can only proceed if both have resolved or we have a success
            if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
              return;
            }
            // If both sides resolve with an error, we should continue with the
            // first error
            if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
              fail    = step === lhs ? rhs : lhs;
              step    = null;
              head._3 = fail;
            } else {
              head._3 = step;
              tmp     = true;
              kid     = killId++;
              // Once a side has resolved, we need to cancel the side that is still
              // pending before we can continue.
              kills[kid] = kill(early, step === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(step, null, null);
                  } else {
                    join(step, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            }
            break;
          }

          if (tail === null) {
            head = null;
          } else {
            head = tail._1;
            tail = tail._2;
          }
        }
      }

      function resolve(fiber) {
        return function (result) {
          return function () {
            delete fibers[fiber._1];
            fiber._3 = result;
            join(result, fiber._2._1, fiber._2._2);
          };
        };
      }

      // Walks the applicative tree, substituting non-applicative nodes with
      // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
      // as a mutable slot for memoization. In an unresolved state, the `_3`
      // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
      // the left side first, because both operations are left-associative. As
      // we `RETURN` from those branches, we then walk the right side.
      function run() {
        var status = CONTINUE;
        var step   = par;
        var head   = null;
        var tail   = null;
        var tmp, fid;

        loop: while (true) {
          tmp = null;
          fid = null;

          switch (status) {
          case CONTINUE:
            switch (step.tag) {
            case MAP:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(MAP, step._1, EMPTY, EMPTY);
              step = step._2;
              break;
            case APPLY:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(APPLY, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            case ALT:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(ALT, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            default:
              // When we hit a leaf value, we suspend the stack in the `FORKED`.
              // When the fiber resolves, it can bubble back up the tree.
              fid    = fiberId++;
              status = RETURN;
              tmp    = step;
              step   = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
              tmp    = Fiber(util, supervisor, tmp);
              tmp.onComplete({
                rethrow: false,
                handler: resolve(step)
              })();
              fibers[fid] = tmp;
              if (supervisor) {
                supervisor.register(tmp);
              }
            }
            break;
          case RETURN:
            // Terminal case, we are back at the root.
            if (head === null) {
              break loop;
            }
            // If we are done with the right side, we need to continue down the
            // left. Otherwise we should continue up the stack.
            if (head._1 === EMPTY) {
              head._1 = step;
              status  = CONTINUE;
              step    = head._2;
              head._2 = EMPTY;
            } else {
              head._2 = step;
              step    = head;
              if (tail === null) {
                head  = null;
              } else {
                head  = tail._1;
                tail  = tail._2;
              }
            }
          }
        }

        // Keep a reference to the tree root so it can be cancelled.
        root = step;

        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      }

      // Cancels the entire tree. If there are already subtrees being canceled,
      // we need to first cancel those joins. We will then add fresh joins for
      // all pending branches including those that were in the process of being
      // canceled.
      function cancel(error, cb) {
        interrupt = util.left(error);
        var innerKills;
        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];
            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }

        kills = null;
        var newKills = kill(error, root, cb);

        return function (killError) {
          return new Aff(ASYNC, function (killCb) {
            return function () {
              for (var kid in newKills) {
                if (newKills.hasOwnProperty(kid)) {
                  newKills[kid]();
                }
              }
              return nonCanceler;
            };
          });
        };
      }

      run();

      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            return cancel(killError, killCb);
          };
        });
      };
    }

    function sequential(util, supervisor, par) {
      return new Aff(ASYNC, function (cb) {
        return function () {
          return runPar(util, supervisor, par, cb);
        };
      });
    }

    Aff.EMPTY       = EMPTY;
    Aff.Pure        = AffCtr(PURE);
    Aff.Throw       = AffCtr(THROW);
    Aff.Catch       = AffCtr(CATCH);
    Aff.Sync        = AffCtr(SYNC);
    Aff.Async       = AffCtr(ASYNC);
    Aff.Bind        = AffCtr(BIND);
    Aff.Bracket     = AffCtr(BRACKET);
    Aff.Fork        = AffCtr(FORK);
    Aff.Seq         = AffCtr(SEQ);
    Aff.ParMap      = AffCtr(MAP);
    Aff.ParApply    = AffCtr(APPLY);
    Aff.ParAlt      = AffCtr(ALT);
    Aff.Fiber       = Fiber;
    Aff.Supervisor  = Supervisor;
    Aff.Scheduler   = Scheduler;
    Aff.nonCanceler = nonCanceler;

    return Aff;
  }();

  exports._pure = Aff.Pure;

  exports._throwError = Aff.Throw;

  exports._catchError = function (aff) {
    return function (k) {
      return Aff.Catch(aff, k);
    };
  };

  exports._map = function (f) {
    return function (aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function (value) {
          return Aff.Pure(f(value));
        });
      }
    };
  };

  exports._bind = function (aff) {
    return function (k) {
      return Aff.Bind(aff, k);
    };
  };

  exports._fork = function (immediate) {
    return function (aff) {
      return Aff.Fork(immediate, aff);
    };
  };

  exports._liftEffect = Aff.Sync;

  exports._parAffMap = function (f) {
    return function (aff) {
      return Aff.ParMap(f, aff);
    };
  };

  exports._parAffApply = function (aff1) {
    return function (aff2) {
      return Aff.ParApply(aff1, aff2);
    };
  };

  exports.makeAff = Aff.Async;

  exports.generalBracket = function (acquire) {
    return function (options) {
      return function (k) {
        return Aff.Bracket(acquire, options, k);
      };
    };
  };

  exports._makeFiber = function (util, aff) {
    return function () {
      return Aff.Fiber(util, null, aff);
    };
  };  

  exports._sequential = Aff.Seq;
})(PS["Effect.Aff"] = PS["Effect.Aff"] || {});
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad = $PS["Control.Monad"];                  
  var monadEffect = {
      Applicative0: function () {
          return applicativeEffect;
      },
      Bind1: function () {
          return bindEffect;
      }
  };
  var bindEffect = {
      bind: $foreign.bindE,
      Apply0: function () {
          return applyEffect;
      }
  };
  var applyEffect = {
      apply: Control_Monad.ap(monadEffect),
      Functor0: function () {
          return functorEffect;
      }
  };
  var applicativeEffect = {
      pure: $foreign.pureE,
      Apply0: function () {
          return applyEffect;
      }
  };
  var functorEffect = {
      map: Control_Applicative.liftA1(applicativeEffect)
  };
  exports["functorEffect"] = functorEffect;
  exports["applyEffect"] = applyEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.modifyImpl = function (f) {
    return function (ref) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.write = function (val) {
    return function (ref) {
      return function () {
        ref.value = val;
      };
    };
  };
})(PS["Effect.Ref"] = PS["Effect.Ref"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Effect.Ref"] = $PS["Effect.Ref"] || {};
  var exports = $PS["Effect.Ref"];
  var $foreign = $PS["Effect.Ref"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];                
  var modify$prime = $foreign.modifyImpl;
  var modify = function (f) {
      return modify$prime(function (s) {
          var s$prime = f(s);
          return {
              state: s$prime,
              value: s$prime
          };
      });
  };
  var modify_ = function (f) {
      return function (s) {
          return Data_Functor["void"](Effect.functorEffect)(modify(f)(s));
      };
  };
  exports["modify'"] = modify$prime;
  exports["modify"] = modify;
  exports["modify_"] = modify_;
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
  exports["write"] = $foreign.write;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Monad.Rec.Class"] = $PS["Control.Monad.Rec.Class"] || {};
  var exports = $PS["Control.Monad.Rec.Class"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];                
  var Loop = (function () {
      function Loop(value0) {
          this.value0 = value0;
      };
      Loop.create = function (value0) {
          return new Loop(value0);
      };
      return Loop;
  })();
  var Done = (function () {
      function Done(value0) {
          this.value0 = value0;
      };
      Done.create = function (value0) {
          return new Done(value0);
      };
      return Done;
  })();
  var tailRecM = function (dict) {
      return dict.tailRecM;
  };
  var monadRecEffect = {
      tailRecM: function (f) {
          return function (a) {
              var fromDone = function (v) {
                  if (v instanceof Done) {
                      return v.value0;
                  };
                  throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 113, column 30 - line 113, column 44): " + [ v.constructor.name ]);
              };
              return function __do() {
                  var r = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(f(a))();
                  (function () {
                      while (!(function __do() {
                          var v = Effect_Ref.read(r)();
                          if (v instanceof Loop) {
                              var e = f(v.value0)();
                              Effect_Ref.write(e)(r)();
                              return false;
                          };
                          if (v instanceof Done) {
                              return true;
                          };
                          throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 104, column 22 - line 109, column 28): " + [ v.constructor.name ]);
                      })()) {

                      };
                      return {};
                  })();
                  return Data_Functor.map(Effect.functorEffect)(fromDone)(Effect_Ref.read(r))();
              };
          };
      },
      Monad0: function () {
          return Effect.monadEffect;
      }
  };
  exports["Loop"] = Loop;
  exports["Done"] = Done;
  exports["tailRecM"] = tailRecM;
  exports["monadRecEffect"] = monadRecEffect;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Parallel.Class"] = $PS["Control.Parallel.Class"] || {};
  var exports = $PS["Control.Parallel.Class"];
  var sequential = function (dict) {
      return dict.sequential;
  };
  var parallel = function (dict) {
      return dict.parallel;
  };
  exports["parallel"] = parallel;
  exports["sequential"] = sequential;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Parallel"] = $PS["Control.Parallel"] || {};
  var exports = $PS["Control.Parallel"];
  var Control_Category = $PS["Control.Category"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Foldable = $PS["Data.Foldable"];                      
  var parTraverse_ = function (dictParallel) {
      return function (dictFoldable) {
          return function (f) {
              var $17 = Control_Parallel_Class.sequential(dictParallel);
              var $18 = Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)((function () {
                  var $20 = Control_Parallel_Class.parallel(dictParallel);
                  return function ($21) {
                      return $20(f($21));
                  };
              })());
              return function ($19) {
                  return $17($18($19));
              };
          };
      };
  };
  var parSequence_ = function (dictParallel) {
      return function (dictFoldable) {
          return parTraverse_(dictParallel)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["parSequence_"] = parSequence_;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Effect.Class"] = $PS["Effect.Class"] || {};
  var exports = $PS["Effect.Class"];
  var Control_Category = $PS["Control.Category"];
  var Effect = $PS["Effect"];                
  var monadEffectEffect = {
      liftEffect: Control_Category.identity(Control_Category.categoryFn),
      Monad0: function () {
          return Effect.monadEffect;
      }
  };
  var liftEffect = function (dict) {
      return dict.liftEffect;
  };
  exports["liftEffect"] = liftEffect;
  exports["monadEffectEffect"] = monadEffectEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafePerformEffect = function (f) {
    return f();
  };
})(PS["Effect.Unsafe"] = PS["Effect.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Effect.Unsafe"] = $PS["Effect.Unsafe"] || {};
  var exports = $PS["Effect.Unsafe"];
  var $foreign = $PS["Effect.Unsafe"];
  exports["unsafePerformEffect"] = $foreign.unsafePerformEffect;
})(PS);
(function(exports) {
  "use strict";

  // module Partial.Unsafe

  exports._unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  "use strict";

  // module Partial

  exports._crashWith = function (msg) {
    throw new Error(msg);
  };
})(PS["Partial"] = PS["Partial"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Partial"] = $PS["Partial"] || {};
  var exports = $PS["Partial"];
  var $foreign = $PS["Partial"];         
  var crashWith = function (dictPartial) {
      return $foreign["_crashWith"];
  };
  exports["crashWith"] = crashWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Partial.Unsafe"] = $PS["Partial.Unsafe"] || {};
  var exports = $PS["Partial.Unsafe"];
  var $foreign = $PS["Partial.Unsafe"];
  var Partial = $PS["Partial"];                
  var unsafePartial = $foreign["_unsafePartial"];
  var unsafeCrashWith = function (msg) {
      return unsafePartial(function (dictPartial) {
          return Partial.crashWith()(msg);
      });
  };
  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Effect.Aff"] = $PS["Effect.Aff"] || {};
  var exports = $PS["Effect.Aff"];
  var $foreign = $PS["Effect.Aff"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Parallel = $PS["Control.Parallel"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Unsafe = $PS["Effect.Unsafe"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Canceler = function (x) {
      return x;
  };
  var suspendAff = $foreign["_fork"](false);
  var functorParAff = {
      map: $foreign["_parAffMap"]
  };
  var functorAff = {
      map: $foreign["_map"]
  };
  var forkAff = $foreign["_fork"](true);
  var ffiUtil = (function () {
      var unsafeFromRight = function (v) {
          if (v instanceof Data_Either.Right) {
              return v.value0;
          };
          if (v instanceof Data_Either.Left) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
          };
          throw new Error("Failed pattern match at Effect.Aff (line 404, column 21 - line 406, column 54): " + [ v.constructor.name ]);
      };
      var unsafeFromLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return v.value0;
          };
          if (v instanceof Data_Either.Right) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
          };
          throw new Error("Failed pattern match at Effect.Aff (line 399, column 20 - line 401, column 54): " + [ v.constructor.name ]);
      };
      var isLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return true;
          };
          if (v instanceof Data_Either.Right) {
              return false;
          };
          throw new Error("Failed pattern match at Effect.Aff (line 394, column 12 - line 396, column 20): " + [ v.constructor.name ]);
      };
      return {
          isLeft: isLeft,
          fromLeft: unsafeFromLeft,
          fromRight: unsafeFromRight,
          left: Data_Either.Left.create,
          right: Data_Either.Right.create
      };
  })();
  var makeFiber = function (aff) {
      return $foreign["_makeFiber"](ffiUtil, aff);
  };
  var launchAff = function (aff) {
      return function __do() {
          var fiber = makeFiber(aff)();
          fiber.run();
          return fiber;
      };
  };
  var launchAff_ = (function () {
      var $40 = Data_Functor["void"](Effect.functorEffect);
      return function ($41) {
          return $40(launchAff($41));
      };
  })();
  var bracket = function (acquire) {
      return function (completed) {
          return $foreign.generalBracket(acquire)({
              killed: Data_Function["const"](completed),
              failed: Data_Function["const"](completed),
              completed: Data_Function["const"](completed)
          });
      };
  };
  var applyParAff = {
      apply: $foreign["_parAffApply"],
      Functor0: function () {
          return functorParAff;
      }
  };
  var monadAff = {
      Applicative0: function () {
          return applicativeAff;
      },
      Bind1: function () {
          return bindAff;
      }
  };
  var bindAff = {
      bind: $foreign["_bind"],
      Apply0: function () {
          return applyAff;
      }
  };
  var applyAff = {
      apply: Control_Monad.ap(monadAff),
      Functor0: function () {
          return functorAff;
      }
  };
  var applicativeAff = {
      pure: $foreign["_pure"],
      Apply0: function () {
          return applyAff;
      }
  };
  var $$finally = function (fin) {
      return function (a) {
          return bracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(Data_Function["const"](fin))(Data_Function["const"](a));
      };
  };
  var monadEffectAff = {
      liftEffect: $foreign["_liftEffect"],
      Monad0: function () {
          return monadAff;
      }
  };
  var effectCanceler = (function () {
      var $42 = Effect_Class.liftEffect(monadEffectAff);
      return function ($43) {
          return Canceler(Data_Function["const"]($42($43)));
      };
  })();
  var joinFiber = function (v) {
      return $foreign.makeAff(function (k) {
          return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.join(k));
      });
  };
  var functorFiber = {
      map: function (f) {
          return function (t) {
              return Effect_Unsafe.unsafePerformEffect(makeFiber(Data_Functor.map(functorAff)(f)(joinFiber(t))));
          };
      }
  };
  var killFiber = function (e) {
      return function (v) {
          return Control_Bind.bind(bindAff)(Effect_Class.liftEffect(monadEffectAff)(v.isSuspended))(function (v1) {
              if (v1) {
                  return Effect_Class.liftEffect(monadEffectAff)(Data_Functor["void"](Effect.functorEffect)(v.kill(e, Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)))));
              };
              return $foreign.makeAff(function (k) {
                  return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.kill(e, k));
              });
          });
      };
  };   
  var monadThrowAff = {
      throwError: $foreign["_throwError"],
      Monad0: function () {
          return monadAff;
      }
  };
  var monadErrorAff = {
      catchError: $foreign["_catchError"],
      MonadThrow0: function () {
          return monadThrowAff;
      }
  };                                                            
  var runAff = function (k) {
      return function (aff) {
          return launchAff(Control_Bind.bindFlipped(bindAff)((function () {
              var $46 = Effect_Class.liftEffect(monadEffectAff);
              return function ($47) {
                  return $46(k($47));
              };
          })())(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
      };
  };
  var runAff_ = function (k) {
      return function (aff) {
          return Data_Functor["void"](Effect.functorEffect)(runAff(k)(aff));
      };
  };
  var parallelAff = {
      parallel: Unsafe_Coerce.unsafeCoerce,
      sequential: $foreign["_sequential"],
      Monad0: function () {
          return monadAff;
      },
      Applicative1: function () {
          return applicativeParAff;
      }
  };
  var applicativeParAff = {
      pure: (function () {
          var $50 = Control_Parallel_Class.parallel(parallelAff);
          var $51 = Control_Applicative.pure(applicativeAff);
          return function ($52) {
              return $50($51($52));
          };
      })(),
      Apply0: function () {
          return applyParAff;
      }
  };
  var semigroupCanceler = {
      append: function (v) {
          return function (v1) {
              return function (err) {
                  return Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray)([ v(err), v1(err) ]);
              };
          };
      }
  };
  var monadRecAff = {
      tailRecM: function (k) {
          var go = function (a) {
              return Control_Bind.bind(bindAff)(k(a))(function (res) {
                  if (res instanceof Control_Monad_Rec_Class.Done) {
                      return Control_Applicative.pure(applicativeAff)(res.value0);
                  };
                  if (res instanceof Control_Monad_Rec_Class.Loop) {
                      return go(res.value0);
                  };
                  throw new Error("Failed pattern match at Effect.Aff (line 102, column 7 - line 104, column 22): " + [ res.constructor.name ]);
              });
          };
          return go;
      },
      Monad0: function () {
          return monadAff;
      }
  };
  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
  var monoidCanceler = {
      mempty: nonCanceler,
      Semigroup0: function () {
          return semigroupCanceler;
      }
  };
  exports["launchAff_"] = launchAff_;
  exports["runAff_"] = runAff_;
  exports["forkAff"] = forkAff;
  exports["suspendAff"] = suspendAff;
  exports["finally"] = $$finally;
  exports["killFiber"] = killFiber;
  exports["joinFiber"] = joinFiber;
  exports["nonCanceler"] = nonCanceler;
  exports["effectCanceler"] = effectCanceler;
  exports["functorAff"] = functorAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadRecAff"] = monadRecAff;
  exports["monadThrowAff"] = monadThrowAff;
  exports["monadEffectAff"] = monadEffectAff;
  exports["applicativeParAff"] = applicativeParAff;
  exports["parallelAff"] = parallelAff;
  exports["functorFiber"] = functorFiber;
  exports["monoidCanceler"] = monoidCanceler;
  exports["makeAff"] = $foreign.makeAff;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Monad.Fork.Class"] = $PS["Control.Monad.Fork.Class"] || {};
  var exports = $PS["Control.Monad.Fork.Class"];
  var Effect_Aff = $PS["Effect.Aff"];
  var monadForkAff = {
      suspend: Effect_Aff.suspendAff,
      fork: Effect_Aff.forkAff,
      join: Effect_Aff.joinFiber,
      Monad0: function () {
          return Effect_Aff.monadAff;
      },
      Functor1: function () {
          return Effect_Aff.functorFiber;
      }
  };
  var fork = function (dict) {
      return dict.fork;
  };
  exports["fork"] = fork;
  exports["monadForkAff"] = monadForkAff;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.List"] = $PS["Data.List"] || {};
  var exports = $PS["Data.List"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List_Types = $PS["Data.List.Types"];
  var singleton = function (a) {
      return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
  };
  var reverse = (function () {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return acc;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List (line 372, column 3 - line 372, column 19): " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var zipWith = function (f) {
      return function (xs) {
          return function (ys) {
              var go = function ($copy_v) {
                  return function ($copy_v1) {
                      return function ($copy_acc) {
                          var $tco_var_v = $copy_v;
                          var $tco_var_v1 = $copy_v1;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v, v1, acc) {
                              if (v instanceof Data_List_Types.Nil) {
                                  $tco_done = true;
                                  return acc;
                              };
                              if (v1 instanceof Data_List_Types.Nil) {
                                  $tco_done = true;
                                  return acc;
                              };
                              if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                                  $tco_var_v = v.value1;
                                  $tco_var_v1 = v1.value1;
                                  $copy_acc = new Data_List_Types.Cons(f(v.value0)(v1.value0), acc);
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.List (line 795, column 3 - line 795, column 21): " + [ v.constructor.name, v1.constructor.name, acc.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_acc);
                          };
                          return $tco_result;
                      };
                  };
              };
              return reverse(go(xs)(ys)(Data_List_Types.Nil.value));
          };
      };
  };
  var range = function (start) {
      return function (end) {
          if (start === end) {
              return singleton(start);
          };
          if (Data_Boolean.otherwise) {
              var go = function ($copy_s) {
                  return function ($copy_e) {
                      return function ($copy_step) {
                          return function ($copy_rest) {
                              var $tco_var_s = $copy_s;
                              var $tco_var_e = $copy_e;
                              var $tco_var_step = $copy_step;
                              var $tco_done = false;
                              var $tco_result;
                              function $tco_loop(s, e, step, rest) {
                                  if (s === e) {
                                      $tco_done = true;
                                      return new Data_List_Types.Cons(s, rest);
                                  };
                                  if (Data_Boolean.otherwise) {
                                      $tco_var_s = s + step | 0;
                                      $tco_var_e = e;
                                      $tco_var_step = step;
                                      $copy_rest = new Data_List_Types.Cons(s, rest);
                                      return;
                                  };
                                  throw new Error("Failed pattern match at Data.List (line 152, column 3 - line 153, column 65): " + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);
                              };
                              while (!$tco_done) {
                                  $tco_result = $tco_loop($tco_var_s, $tco_var_e, $tco_var_step, $copy_rest);
                              };
                              return $tco_result;
                          };
                      };
                  };
              };
              return go(end)(start)((function () {
                  var $226 = start > end;
                  if ($226) {
                      return 1;
                  };
                  return -1 | 0;
              })())(Data_List_Types.Nil.value);
          };
          throw new Error("Failed pattern match at Data.List (line 148, column 1 - line 148, column 32): " + [ start.constructor.name, end.constructor.name ]);
      };
  };
  var $$null = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };
  var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
      return function (v) {
          return acc + 1 | 0;
      };
  })(0);
  var fromFoldable = function (dictFoldable) {
      return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
  };
  var filter = function (p) {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return reverse(acc);
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (p(v.value0)) {
                          $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                          $copy_v = v.value1;
                          return;
                      };
                      if (Data_Boolean.otherwise) {
                          $tco_var_acc = acc;
                          $copy_v = v.value1;
                          return;
                      };
                  };
                  throw new Error("Failed pattern match at Data.List (line 394, column 3 - line 394, column 27): " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  };
  var drop = function ($copy_v) {
      return function ($copy_v1) {
          var $tco_var_v = $copy_v;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v, v1) {
              if (v < 1) {
                  $tco_done = true;
                  return v1;
              };
              if (v1 instanceof Data_List_Types.Nil) {
                  $tco_done = true;
                  return Data_List_Types.Nil.value;
              };
              if (v1 instanceof Data_List_Types.Cons) {
                  $tco_var_v = v - 1 | 0;
                  $copy_v1 = v1.value1;
                  return;
              };
              throw new Error("Failed pattern match at Data.List (line 547, column 1 - line 547, column 42): " + [ v.constructor.name, v1.constructor.name ]);
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v, $copy_v1);
          };
          return $tco_result;
      };
  };
  exports["fromFoldable"] = fromFoldable;
  exports["range"] = range;
  exports["null"] = $$null;
  exports["length"] = length;
  exports["reverse"] = reverse;
  exports["filter"] = filter;
  exports["drop"] = drop;
  exports["zipWith"] = zipWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.CatQueue"] = $PS["Data.CatQueue"] || {};
  var exports = $PS["Data.CatQueue"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var CatQueue = (function () {
      function CatQueue(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatQueue.create = function (value0) {
          return function (value1) {
              return new CatQueue(value0, value1);
          };
      };
      return CatQueue;
  })();
  var uncons = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return Data_Maybe.Nothing.value;
          };
          if (v.value0 instanceof Data_List_Types.Nil) {
              $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);
              return;
          };
          if (v.value0 instanceof Data_List_Types.Cons) {
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
          };
          throw new Error("Failed pattern match at Data.CatQueue (line 83, column 1 - line 83, column 63): " + [ v.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var snoc = function (v) {
      return function (a) {
          return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));
      };
  };
  var $$null = function (v) {
      if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };
  var empty = new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
  exports["empty"] = empty;
  exports["null"] = $$null;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.CatList"] = $PS["Data.CatList"] || {};
  var exports = $PS["Data.CatList"];
  var Data_CatQueue = $PS["Data.CatQueue"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var CatNil = (function () {
      function CatNil() {

      };
      CatNil.value = new CatNil();
      return CatNil;
  })();
  var CatCons = (function () {
      function CatCons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatCons.create = function (value0) {
          return function (value1) {
              return new CatCons(value0, value1);
          };
      };
      return CatCons;
  })();
  var link = function (v) {
      return function (v1) {
          if (v instanceof CatNil) {
              return v1;
          };
          if (v1 instanceof CatNil) {
              return v;
          };
          if (v instanceof CatCons) {
              return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.CatList (line 109, column 1 - line 109, column 54): " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var foldr = function (k) {
      return function (b) {
          return function (q) {
              var foldl = function ($copy_v) {
                  return function ($copy_c) {
                      return function ($copy_v1) {
                          var $tco_var_v = $copy_v;
                          var $tco_var_c = $copy_c;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v, c, v1) {
                              if (v1 instanceof Data_List_Types.Nil) {
                                  $tco_done = true;
                                  return c;
                              };
                              if (v1 instanceof Data_List_Types.Cons) {
                                  $tco_var_v = v;
                                  $tco_var_c = v(c)(v1.value0);
                                  $copy_v1 = v1.value1;
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.CatList (line 125, column 3 - line 125, column 59): " + [ v.constructor.name, c.constructor.name, v1.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v, $tco_var_c, $copy_v1);
                          };
                          return $tco_result;
                      };
                  };
              };
              var go = function ($copy_xs) {
                  return function ($copy_ys) {
                      var $tco_var_xs = $copy_xs;
                      var $tco_done1 = false;
                      var $tco_result;
                      function $tco_loop(xs, ys) {
                          var v = Data_CatQueue.uncons(xs);
                          if (v instanceof Data_Maybe.Nothing) {
                              $tco_done1 = true;
                              return foldl(function (x) {
                                  return function (i) {
                                      return i(x);
                                  };
                              })(b)(ys);
                          };
                          if (v instanceof Data_Maybe.Just) {
                              $tco_var_xs = v.value0.value1;
                              $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);
                              return;
                          };
                          throw new Error("Failed pattern match at Data.CatList (line 121, column 14 - line 123, column 67): " + [ v.constructor.name ]);
                      };
                      while (!$tco_done1) {
                          $tco_result = $tco_loop($tco_var_xs, $copy_ys);
                      };
                      return $tco_result;
                  };
              };
              return go(q)(Data_List_Types.Nil.value);
          };
      };
  };
  var uncons = function (v) {
      if (v instanceof CatNil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof CatCons) {
          return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, (function () {
              var $45 = Data_CatQueue["null"](v.value1);
              if ($45) {
                  return CatNil.value;
              };
              return foldr(link)(CatNil.value)(v.value1);
          })()));
      };
      throw new Error("Failed pattern match at Data.CatList (line 100, column 1 - line 100, column 61): " + [ v.constructor.name ]);
  };
  var empty = CatNil.value;
  var append = link;
  var semigroupCatList = {
      append: append
  };
  var snoc = function (cat) {
      return function (a) {
          return append(cat)(new CatCons(a, Data_CatQueue.empty));
      };
  };
  exports["empty"] = empty;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
  exports["semigroupCatList"] = semigroupCatList;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Monad.Free"] = $PS["Control.Monad.Free"] || {};
  var exports = $PS["Control.Monad.Free"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Data_CatList = $PS["Data.CatList"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Free = (function () {
      function Free(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Free.create = function (value0) {
          return function (value1) {
              return new Free(value0, value1);
          };
      };
      return Free;
  })();
  var Return = (function () {
      function Return(value0) {
          this.value0 = value0;
      };
      Return.create = function (value0) {
          return new Return(value0);
      };
      return Return;
  })();
  var Bind = (function () {
      function Bind(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bind.create = function (value0) {
          return function (value1) {
              return new Bind(value0, value1);
          };
      };
      return Bind;
  })();
  var toView = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          var runExpF = function (v2) {
              return v2;
          };
          var concatF = function (v2) {
              return function (r) {
                  return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
              };
          };
          if (v.value0 instanceof Return) {
              var v2 = Data_CatList.uncons(v.value1);
              if (v2 instanceof Data_Maybe.Nothing) {
                  $tco_done = true;
                  return new Return(v.value0.value0);
              };
              if (v2 instanceof Data_Maybe.Just) {
                  $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
                  return;
              };
              throw new Error("Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): " + [ v2.constructor.name ]);
          };
          if (v.value0 instanceof Bind) {
              $tco_done = true;
              return new Bind(v.value0.value0, function (a) {
                  return concatF(v.value0.value1(a))(v.value1);
              });
          };
          throw new Error("Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): " + [ v.value0.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var fromView = function (f) {
      return new Free(f, Data_CatList.empty);
  };
  var freeMonad = {
      Applicative0: function () {
          return freeApplicative;
      },
      Bind1: function () {
          return freeBind;
      }
  };
  var freeFunctor = {
      map: function (k) {
          return function (f) {
              return Control_Bind.bindFlipped(freeBind)((function () {
                  var $119 = Control_Applicative.pure(freeApplicative);
                  return function ($120) {
                      return $119(k($120));
                  };
              })())(f);
          };
      }
  };
  var freeBind = {
      bind: function (v) {
          return function (k) {
              return new Free(v.value0, Data_CatList.snoc(v.value1)(k));
          };
      },
      Apply0: function () {
          return freeApply;
      }
  };
  var freeApply = {
      apply: Control_Monad.ap(freeMonad),
      Functor0: function () {
          return freeFunctor;
      }
  };
  var freeApplicative = {
      pure: function ($121) {
          return fromView(Return.create($121));
      },
      Apply0: function () {
          return freeApply;
      }
  };
  var liftF = function (f) {
      return fromView(new Bind(f, (function () {
          var $122 = Control_Applicative.pure(freeApplicative);
          return function ($123) {
              return $122($123);
          };
      })()));
  };
  var foldFree = function (dictMonadRec) {
      return function (k) {
          var go = function (f) {
              var v = toView(f);
              if (v instanceof Return) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(v.value0));
              };
              if (v instanceof Bind) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(function ($135) {
                      return Control_Monad_Rec_Class.Loop.create(v.value1($135));
                  })(k(v.value0));
              };
              throw new Error("Failed pattern match at Control.Monad.Free (line 158, column 10 - line 160, column 37): " + [ v.constructor.name ]);
          };
          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
      };
  };
  exports["liftF"] = liftF;
  exports["foldFree"] = foldFree;
  exports["freeFunctor"] = freeFunctor;
  exports["freeBind"] = freeBind;
  exports["freeApplicative"] = freeApplicative;
  exports["freeMonad"] = freeMonad;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Monad.Indexed.Qualified"] = $PS["Control.Monad.Indexed.Qualified"] || {};
  var exports = $PS["Control.Monad.Indexed.Qualified"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var discard = function (dictIxBind) {
      return function (dictIxDiscard) {
          return Control_Bind_Indexed.idiscard(dictIxDiscard)(dictIxBind);
      };
  };
  exports["discard"] = discard;
})(PS);
(function(exports) {
  "use strict";

  exports.map_ = function (f) {
    return function (a) {
      return function () {
        return f(a());
      };
    };
  };

  exports.pure_ = function (a) {
    return function () {
      return a;
    };
  };

  exports.bind_ = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.foreach = function (as) {
    return function (f) {
      return function () {
        for (var i = 0, l = as.length; i < l; i++) {
          f(as[i])();
        }
      };
    };
  };

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.modifyImpl = function (f) {
    return function (ref) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.write = function (a) {
    return function (ref) {
      return function () {
        return ref.value = a; // eslint-disable-line no-return-assign
      };
    };
  };
})(PS["Control.Monad.ST.Internal"] = PS["Control.Monad.ST.Internal"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Monad.ST.Internal"] = $PS["Control.Monad.ST.Internal"] || {};
  var exports = $PS["Control.Monad.ST.Internal"];
  var $foreign = $PS["Control.Monad.ST.Internal"];
  var Control_Monad = $PS["Control.Monad"];        
  var modify$prime = $foreign.modifyImpl;
  var modify = function (f) {
      return modify$prime(function (s) {
          var s$prime = f(s);
          return {
              state: s$prime,
              value: s$prime
          };
      });
  };
  var functorST = {
      map: $foreign.map_
  };
  var monadST = {
      Applicative0: function () {
          return applicativeST;
      },
      Bind1: function () {
          return bindST;
      }
  };
  var bindST = {
      bind: $foreign.bind_,
      Apply0: function () {
          return applyST;
      }
  };
  var applyST = {
      apply: Control_Monad.ap(monadST),
      Functor0: function () {
          return functorST;
      }
  };
  var applicativeST = {
      pure: $foreign.pure_,
      Apply0: function () {
          return applyST;
      }
  };
  exports["modify"] = modify;
  exports["functorST"] = functorST;
  exports["applyST"] = applyST;
  exports["applicativeST"] = applicativeST;
  exports["bindST"] = bindST;
  exports["monadST"] = monadST;
  exports["foreach"] = $foreign.foreach;
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
  exports["write"] = $foreign.write;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Monad.State"] = $PS["Control.Monad.State"] || {};
  var exports = $PS["Control.Monad.State"];
  var evalState = function (v) {
      return function (s) {
          var v1 = v(s);
          return v1.value0;
      };
  };
  exports["evalState"] = evalState;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Monad.State.Class"] = $PS["Control.Monad.State.Class"] || {};
  var exports = $PS["Control.Monad.State.Class"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];                
  var state = function (dict) {
      return dict.state;
  };
  var modify_ = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
          });
      };
  };
  var modify = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              var s$prime = f(s);
              return new Data_Tuple.Tuple(s$prime, s$prime);
          });
      };
  };
  var get = function (dictMonadState) {
      return state(dictMonadState)(function (s) {
          return new Data_Tuple.Tuple(s, s);
      });
  };
  exports["get"] = get;
  exports["modify"] = modify;
  exports["modify_"] = modify_;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Monad.State.Trans"] = $PS["Control.Monad.State.Trans"] || {};
  var exports = $PS["Control.Monad.State.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];                    
  var StateT = function (x) {
      return x;
  };
  var functorStateT = function (dictFunctor) {
      return {
          map: function (f) {
              return function (v) {
                  return function (s) {
                      return Data_Functor.map(dictFunctor)(function (v1) {
                          return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
                      })(v(s));
                  };
              };
          }
      };
  };
  var monadStateT = function (dictMonad) {
      return {
          Applicative0: function () {
              return applicativeStateT(dictMonad);
          },
          Bind1: function () {
              return bindStateT(dictMonad);
          }
      };
  };
  var bindStateT = function (dictMonad) {
      return {
          bind: function (v) {
              return function (f) {
                  return function (s) {
                      return Control_Bind.bind(dictMonad.Bind1())(v(s))(function (v1) {
                          var v3 = f(v1.value0);
                          return v3(v1.value1);
                      });
                  };
              };
          },
          Apply0: function () {
              return applyStateT(dictMonad);
          }
      };
  };
  var applyStateT = function (dictMonad) {
      return {
          apply: Control_Monad.ap(monadStateT(dictMonad)),
          Functor0: function () {
              return functorStateT(((dictMonad.Bind1()).Apply0()).Functor0());
          }
      };
  };
  var applicativeStateT = function (dictMonad) {
      return {
          pure: function (a) {
              return function (s) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, s));
              };
          },
          Apply0: function () {
              return applyStateT(dictMonad);
          }
      };
  };
  var monadStateStateT = function (dictMonad) {
      return {
          state: function (f) {
              return StateT((function () {
                  var $113 = Control_Applicative.pure(dictMonad.Applicative0());
                  return function ($114) {
                      return $113(f($114));
                  };
              })());
          },
          Monad0: function () {
              return monadStateT(dictMonad);
          }
      };
  };
  exports["functorStateT"] = functorStateT;
  exports["applyStateT"] = applyStateT;
  exports["applicativeStateT"] = applicativeStateT;
  exports["monadStateStateT"] = monadStateStateT;
})(PS);
(function(exports) {
    

  exports.thenImpl = function(promise) {
    return function(errCB) {
      return function(succCB) {
        return function() {
          promise.then(succCB, errCB);
        };
      };
    };
  };
})(PS["Control.Promise"] = PS["Control.Promise"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Identity"] = $PS["Data.Identity"] || {};
  var exports = $PS["Data.Identity"];              
  var Identity = function (x) {
      return x;
  };
  var functorIdentity = {
      map: function (f) {
          return function (m) {
              return f(m);
          };
      }
  };
  var applyIdentity = {
      apply: function (v) {
          return function (v1) {
              return v(v1);
          };
      },
      Functor0: function () {
          return functorIdentity;
      }
  };
  var bindIdentity = {
      bind: function (v) {
          return function (f) {
              return f(v);
          };
      },
      Apply0: function () {
          return applyIdentity;
      }
  };
  var applicativeIdentity = {
      pure: Identity,
      Apply0: function () {
          return applyIdentity;
      }
  };
  var monadIdentity = {
      Applicative0: function () {
          return applicativeIdentity;
      },
      Bind1: function () {
          return bindIdentity;
      }
  };
  exports["functorIdentity"] = functorIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS);
(function(exports) {
  "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
})(PS["Effect.Exception"] = PS["Effect.Exception"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Effect.Exception"] = $PS["Effect.Exception"] || {};
  var exports = $PS["Effect.Exception"];
  var $foreign = $PS["Effect.Exception"];
  var $$throw = function ($2) {
      return $foreign.throwException($foreign.error($2));
  };
  exports["throw"] = $$throw;
  exports["error"] = $foreign.error;
  exports["throwException"] = $foreign.throwException;
})(PS);
(function(exports) {
  "use strict";

  exports.typeOf = function (value) {
    return typeof value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };
})(PS["Foreign"] = PS["Foreign"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Foreign"] = $PS["Foreign"] || {};
  var exports = $PS["Foreign"];
  var $foreign = $PS["Foreign"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var unsafeToForeign = Unsafe_Coerce.unsafeCoerce;
  var unsafeFromForeign = Unsafe_Coerce.unsafeCoerce;
  var fail = function (dictMonad) {
      var $118 = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(dictMonad));
      return function ($119) {
          return $118(Data_List_NonEmpty.singleton($119));
      };
  };
  var unsafeReadTagged = function (dictMonad) {
      return function (tag) {
          return function (value) {
              if ($foreign.tagOf(value) === tag) {
                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(unsafeFromForeign(value));
              };
              if (Data_Boolean.otherwise) {
                  return fail(dictMonad)(new TypeMismatch(tag, $foreign.tagOf(value)));
              };
              throw new Error("Failed pattern match at Foreign (line 110, column 1 - line 110, column 71): " + [ tag.constructor.name, value.constructor.name ]);
          };
      };
  };
  var readString = function (dictMonad) {
      return unsafeReadTagged(dictMonad)("String");
  };
  exports["unsafeToForeign"] = unsafeToForeign;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["readString"] = readString;
  exports["typeOf"] = $foreign.typeOf;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Promise"] = $PS["Control.Promise"] || {};
  var exports = $PS["Control.Promise"];
  var $foreign = $PS["Control.Promise"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Foreign = $PS["Foreign"];                
  var toAff$prime = function (customCoerce) {
      return function (p) {
          return Effect_Aff.makeAff(function (cb) {
              return Data_Functor.voidRight(Effect.functorEffect)(Data_Monoid.mempty(Effect_Aff.monoidCanceler))($foreign.thenImpl(p)(function ($1) {
                  return cb(Data_Either.Left.create(customCoerce($1)))();
              })(function ($2) {
                  return cb(Data_Either.Right.create($2))();
              }));
          });
      };
  };
  var coerce = function (fn) {
      return Data_Either.either(function (v) {
          return Effect_Exception.error("Promise failed, couldn't extract JS Error or String");
      })(Control_Category.identity(Control_Category.categoryFn))(Control_Monad_Except.runExcept(Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Foreign.unsafeReadTagged(Data_Identity.monadIdentity)("Error")(fn))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Effect_Exception.error)(Foreign.readString(Data_Identity.monadIdentity)(fn)))));
  };
  var toAff = toAff$prime(coerce);
  var toAffE = function (f) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(f))(toAff);
  };
  exports["toAffE"] = toAffE;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeUnionFn = function(r1, r2) {
    var copy = {};
    for (var k1 in r2) {
      if ({}.hasOwnProperty.call(r2, k1)) {
        copy[k1] = r2[k1];
      }
    }
    for (var k2 in r1) {
      if ({}.hasOwnProperty.call(r1, k2)) {
        copy[k2] = r1[k2];
      }
    }
    return copy;
  };
})(PS["Record.Unsafe.Union"] = PS["Record.Unsafe.Union"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Record.Unsafe.Union"] = $PS["Record.Unsafe.Union"] || {};
  var exports = $PS["Record.Unsafe.Union"];
  var $foreign = $PS["Record.Unsafe.Union"];
  exports["unsafeUnionFn"] = $foreign.unsafeUnionFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Record"] = $PS["Record"] || {};
  var exports = $PS["Record"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Record_Unsafe_Union = $PS["Record.Unsafe.Union"];    
  var union = function (dictUnion) {
      return function (l) {
          return function (r) {
              return Record_Unsafe_Union.unsafeUnionFn(l, r);
          };
      };
  };
  var merge = function (dictUnion) {
      return function (dictNub) {
          return function (l) {
              return function (r) {
                  return Record_Unsafe_Union.unsafeUnionFn(l, r);
              };
          };
      };
  };
  var insert = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return function (l) {
                  return function (a) {
                      return function (r) {
                          return Record_Unsafe.unsafeSet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r);
                      };
                  };
              };
          };
      };
  };
  var get = function (dictIsSymbol) {
      return function (dictCons) {
          return function (l) {
              return function (r) {
                  return Record_Unsafe.unsafeGet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
              };
          };
      };
  };
  exports["get"] = get;
  exports["insert"] = insert;
  exports["merge"] = merge;
  exports["union"] = union;
})(PS);
(function(exports) {
  "use strict";

  exports.copyRecord = function(rec) {
    var copy = {};
    for (var key in rec) {
      if ({}.hasOwnProperty.call(rec, key)) {
        copy[key] = rec[key];
      }
    }
    return copy;
  };

  exports.unsafeInsert = function(l) {
    return function(a) {
      return function(rec) {
        rec[l] = a;
        return rec;
      };
    };
  };

  exports.unsafeModify = function(l) {
    return function (f) {
      return function(rec) {
        rec[l] = f(rec[l]);
        return rec;
      };
    };
  };
})(PS["Record.Builder"] = PS["Record.Builder"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Record.Builder"] = $PS["Record.Builder"] || {};
  var exports = $PS["Record.Builder"];
  var $foreign = $PS["Record.Builder"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Function = $PS["Data.Function"];
  var Data_Symbol = $PS["Data.Symbol"];
  var semigroupoidBuilder = Control_Semigroupoid.semigroupoidFn;
  var modify = function (dictCons) {
      return function (dictCons1) {
          return function (dictIsSymbol) {
              return function (l) {
                  return function (f) {
                      return function (r1) {
                          return $foreign.unsafeModify(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(f)(r1);
                      };
                  };
              };
          };
      };
  };
  var insert = function (dictCons) {
      return function (dictLacks) {
          return function (dictIsSymbol) {
              return function (l) {
                  return function (a) {
                      return function (r1) {
                          return $foreign.unsafeInsert(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r1);
                      };
                  };
              };
          };
      };
  };
  var categoryBuilder = Control_Category.categoryFn;
  var build = function (v) {
      return function (r1) {
          return v($foreign.copyRecord(r1));
      };
  };
  var buildFromScratch = Data_Function.flip(build)({});
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return build(f(a))(b);
          };
      };
  };
  exports["build"] = build;
  exports["buildFromScratch"] = buildFromScratch;
  exports["insert"] = insert;
  exports["modify"] = modify;
  exports["semigroupoidBuilder"] = semigroupoidBuilder;
  exports["categoryBuilder"] = categoryBuilder;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["ConvertableOptions"] = $PS["ConvertableOptions"] || {};
  var exports = $PS["ConvertableOptions"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Function = $PS["Data.Function"];
  var Record = $PS["Record"];
  var Record_Builder = $PS["Record.Builder"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var defaultsRecord = function (dictUnion) {
      return function (dictNub) {
          return {
              defaults: Data_Function.flip(Record.merge()())
          };
      };
  };
  var defaults = function (dict) {
      return dict.defaults;
  };
  var convertRecordOptionsNil = {
      convertRecordOptions: function (v) {
          return function (v1) {
              return function (v2) {
                  return Control_Category.identity(Record_Builder.categoryBuilder);
              };
          };
      }
  };
  var convertRecordOptions = function (dict) {
      return dict.convertRecordOptions;
  };
  var convertOptionsWithDefaults = function (dict) {
      return dict.convertOptionsWithDefaults;
  };
  var convertOptionsRecord = function (dictRowToList) {
      return function (dictConvertRecordOptions) {
          return {
              convertOptions: function (t) {
                  return function (i) {
                      return Record_Builder.buildFromScratch(convertRecordOptions(dictConvertRecordOptions)(t)(Type_Proxy["Proxy"].value)(i));
                  };
              }
          };
      };
  };
  var convertOptions = function (dict) {
      return dict.convertOptions;
  };
  var convertOptionsWithDefaultsRecord = function (dictConvertOptions) {
      return function (dictDefaults) {
          return {
              convertOptionsWithDefaults: function (t) {
                  return function (def) {
                      var $21 = defaults(dictDefaults)(def);
                      var $22 = convertOptions(dictConvertOptions)(t);
                      return function ($23) {
                          return $21($22($23));
                      };
                  };
              }
          };
      };
  };
  var convertOption = function (dict) {
      return dict.convertOption;
  };
  var convertRecordOptionsCons = function (dictConvertRecordOptions) {
      return function (dictConvertOption) {
          return function (dictCons) {
              return function (dictCons1) {
                  return function (dictLacks) {
                      return function (dictIsSymbol) {
                          return {
                              convertRecordOptions: function (t) {
                                  return function (v) {
                                      return function (r) {
                                          return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()()(dictIsSymbol)(Type_Proxy["Proxy"].value)(convertOption(dictConvertOption)(t)(Type_Proxy["Proxy"].value)(Record.get(dictIsSymbol)()(Type_Proxy["Proxy"].value)(r))))(convertRecordOptions(dictConvertRecordOptions)(t)(Type_Proxy["Proxy"].value)(r));
                                      };
                                  };
                              }
                          };
                      };
                  };
              };
          };
      };
  };
  exports["convertOptionsWithDefaults"] = convertOptionsWithDefaults;
  exports["convertOptionsWithDefaultsRecord"] = convertOptionsWithDefaultsRecord;
  exports["convertRecordOptionsNil"] = convertRecordOptionsNil;
  exports["convertRecordOptionsCons"] = convertRecordOptionsCons;
  exports["convertOptionsRecord"] = convertOptionsRecord;
  exports["defaultsRecord"] = defaultsRecord;
})(PS);
(function(exports) {
  "use strict";

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = new Array(step * (end - start) + 1);
      var i = start, n = 0;
      while (i !== end) {
        result[n++] = i;
        i += step;
      }
      result[n] = i;
      return result;
    };
  };                                                                                                 

  exports.fromFoldableImpl = (function () {
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.unconsImpl = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.findIndexImpl = function (just) {
    return function (nothing) {
      return function (f) {
        return function (xs) {
          for (var i = 0, l = xs.length; i < l; i++) {
            if (f(xs[i])) return just(i);
          }
          return nothing;
        };
      };
    };
  };

  exports._deleteAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 1);
          return just(l1);
        };
      };
    };
  };

  //------------------------------------------------------------------------------
  // Sorting ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.sortByImpl = (function () {
    function mergeFromTo(compare, fromOrdering, xs1, xs2, from, to) {
      var mid;
      var i;
      var j;
      var k;
      var x;
      var y;
      var c;

      mid = from + ((to - from) >> 1);
      if (mid - from > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, from, mid);
      if (to - mid > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, mid, to);

      i = from;
      j = mid;
      k = from;
      while (i < mid && j < to) {
        x = xs2[i];
        y = xs2[j];
        c = fromOrdering(compare(x)(y));
        if (c > 0) {
          xs1[k++] = y;
          ++j;
        }
        else {
          xs1[k++] = x;
          ++i;
        }
      }
      while (i < mid) {
        xs1[k++] = xs2[i++];
      }
      while (j < to) {
        xs1[k++] = xs2[j++];
      }
    }

    return function (compare) {
      return function (fromOrdering) {
        return function (xs) {
          var out;

          if (xs.length < 2) return xs;

          out = xs.slice(0);
          mergeFromTo(compare, fromOrdering, out, xs.slice(0), 0, xs.length);

          return out;
        };
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Partial ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.unsafeIndexImpl = function (xs) {
    return function (n) {
      return xs[n];
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  "use strict";

  exports.unfoldr1ArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var tuple = f(value);
                result.push(fst(tuple));
                var maybe = snd(tuple);
                if (isNothing(maybe)) return result;
                value = fromJust(maybe);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Unfoldable1"] = $PS["Data.Unfoldable1"] || {};
  var exports = $PS["Data.Unfoldable1"];
  var $foreign = $PS["Data.Unfoldable1"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var unfoldable1Array = {
      unfoldr1: $foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd)
  };
  exports["unfoldable1Array"] = unfoldable1Array;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Unfoldable"] = $PS["Data.Unfoldable"] || {};
  var exports = $PS["Data.Unfoldable"];
  var $foreign = $PS["Data.Unfoldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];  
  var unfoldr = function (dict) {
      return dict.unfoldr;
  };
  var unfoldableArray = {
      unfoldr: $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd),
      Unfoldable10: function () {
          return Data_Unfoldable1.unfoldable1Array;
      }
  };
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];                                          
  var unsafeIndex = function (dictPartial) {
      return $foreign.unsafeIndexImpl;
  }; 
  var toUnfoldable = function (dictUnfoldable) {
      return function (xs) {
          var len = $foreign.length(xs);
          var f = function (i) {
              if (i < len) {
                  return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex()(xs)(i), i + 1 | 0));
              };
              if (Data_Boolean.otherwise) {
                  return Data_Maybe.Nothing.value;
              };
              throw new Error("Failed pattern match at Data.Array (line 158, column 3 - line 160, column 26): " + [ i.constructor.name ]);
          };
          return Data_Unfoldable.unfoldr(dictUnfoldable)(f)(0);
      };
  };
  var tail = $foreign.unconsImpl(Data_Function["const"](Data_Maybe.Nothing.value))(function (v) {
      return function (xs) {
          return new Data_Maybe.Just(xs);
      };
  });
  var sortBy = function (comp) {
      return $foreign.sortByImpl(comp)(function (v) {
          if (v instanceof Data_Ordering.GT) {
              return 1;
          };
          if (v instanceof Data_Ordering.EQ) {
              return 0;
          };
          if (v instanceof Data_Ordering.LT) {
              return -1 | 0;
          };
          throw new Error("Failed pattern match at Data.Array (line 831, column 31 - line 834, column 11): " + [ v.constructor.name ]);
      });
  };
  var sortWith = function (dictOrd) {
      return function (f) {
          return sortBy(Data_Ord.comparing(dictOrd)(f));
      };
  };
  var singleton = function (a) {
      return [ a ];
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var head = function (xs) {
      return index(xs)(0);
  };
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  var foldr = Data_Foldable.foldr(Data_Foldable.foldableArray);
  var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteAt = $foreign["_deleteAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteBy = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2.length === 0) {
                  return [  ];
              };
              return Data_Maybe.maybe(v2)(function (i) {
                  return Data_Maybe.fromJust()(deleteAt(i)(v2));
              })(findIndex(v(v1))(v2));
          };
      };
  };
  var cons = function (x) {
      return function (xs) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ x ])(xs);
      };
  };
  exports["fromFoldable"] = fromFoldable;
  exports["toUnfoldable"] = toUnfoldable;
  exports["singleton"] = singleton;
  exports["cons"] = cons;
  exports["head"] = head;
  exports["tail"] = tail;
  exports["index"] = index;
  exports["sortWith"] = sortWith;
  exports["deleteBy"] = deleteBy;
  exports["range"] = $foreign.range;
  exports["length"] = $foreign.length;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Array.NonEmpty.Internal"] = $PS["Data.Array.NonEmpty.Internal"] || {};
  var exports = $PS["Data.Array.NonEmpty.Internal"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];                              
  var NonEmptyArray = function (x) {
      return x;
  };                                                               
  var showNonEmptyArray = function (dictShow) {
      return {
          show: function (v) {
              return "(NonEmptyArray " + (Data_Show.show(Data_Show.showArray(dictShow))(v) + ")");
          }
      };
  };                                                         
  var ordNonEmptyArray = function (dictOrd) {
      return Data_Ord.ordArray(dictOrd);
  };
  var eqNonEmptyArray = function (dictEq) {
      return Data_Eq.eqArray(dictEq);
  };
  exports["NonEmptyArray"] = NonEmptyArray;
  exports["showNonEmptyArray"] = showNonEmptyArray;
  exports["eqNonEmptyArray"] = eqNonEmptyArray;
  exports["ordNonEmptyArray"] = ordNonEmptyArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Array.NonEmpty"] = $PS["Data.Array.NonEmpty"] || {};
  var exports = $PS["Data.Array.NonEmpty"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty_Internal = $PS["Data.Array.NonEmpty.Internal"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Maybe = $PS["Data.Maybe"];               
  var unsafeFromArray = Data_Array_NonEmpty_Internal.NonEmptyArray;
  var toArray = function (v) {
      return v;
  };
  var fromArray = function (xs) {
      if (Data_Array.length(xs) > 0) {
          return new Data_Maybe.Just(unsafeFromArray(xs));
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Array.NonEmpty (line 159, column 1 - line 159, column 58): " + [ xs.constructor.name ]);
  };
  var cons$prime = function (x) {
      return function (xs) {
          return unsafeFromArray(Data_Array.cons(x)(xs));
      };
  };
  var fromNonEmpty = function (v) {
      return cons$prime(v.value0)(v.value1);
  };                                         
  var adaptAny = function (f) {
      return function ($78) {
          return f(toArray($78));
      };
  };                                     
  var length = adaptAny(Data_Array.length);
  var unsafeAdapt = function (f) {
      var $79 = adaptAny(f);
      return function ($80) {
          return unsafeFromArray($79($80));
      };
  };
  var cons = function (x) {
      return unsafeAdapt(Data_Array.cons(x));
  };
  exports["fromArray"] = fromArray;
  exports["fromNonEmpty"] = fromNonEmpty;
})(PS);
(function(exports) {
  "use strict";

  exports["new"] = function () {
    return [];
  };

  exports.pushAll = function (as) {
    return function (xs) {
      return function () {
        return xs.push.apply(xs, as);
      };
    };
  };

  exports.unsafeFreeze = function (xs) {
    return function () {
      return xs;
    };
  };
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Array.ST"] = $PS["Data.Array.ST"] || {};
  var exports = $PS["Data.Array.ST"];
  var $foreign = $PS["Data.Array.ST"];
  var push = function (a) {
      return $foreign.pushAll([ a ]);
  };
  exports["push"] = push;
  exports["new"] = $foreign["new"];
  exports["unsafeFreeze"] = $foreign.unsafeFreeze;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Array.ST.Iterator"] = $PS["Data.Array.ST.Iterator"] || {};
  var exports = $PS["Data.Array.ST.Iterator"];
  var Control_Monad_ST_Internal = $PS["Control.Monad.ST.Internal"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var Iterator = (function () {
      function Iterator(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Iterator.create = function (value0) {
          return function (value1) {
              return new Iterator(value0, value1);
          };
      };
      return Iterator;
  })();
  var next = function (v) {
      return function __do() {
          var i = Control_Monad_ST_Internal.read(v.value1)();
          Control_Monad_ST_Internal.modify(function (v1) {
              return v1 + 1 | 0;
          })(v.value1)();
          return v.value0(i);
      };
  };                                                    
  var iterator = function (f) {
      return Data_Functor.map(Control_Monad_ST_Internal.functorST)(Iterator.create(f))(Control_Monad_ST_Internal["new"](0));
  };
  var iterate = function (iter) {
      return function (f) {
          return function __do() {
              var $$break = Control_Monad_ST_Internal["new"](false)();
              while (Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST_Internal.read($$break))()) {
                  (function __do() {
                      var mx = next(iter)();
                      if (mx instanceof Data_Maybe.Just) {
                          return f(mx.value0)();
                      };
                      if (mx instanceof Data_Maybe.Nothing) {
                          return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Control_Monad_ST_Internal.write(true)($$break))();
                      };
                      throw new Error("Failed pattern match at Data.Array.ST.Iterator (line 42, column 5 - line 44, column 47): " + [ mx.constructor.name ]);
                  })();
              };
              return {};
          };
      };
  };
  exports["iterator"] = iterator;
  exports["iterate"] = iterate;
})(PS);
(function(exports) {
  "use strict";


  // Typed Arrays


  function newArray (f) {
    return function newArray_ (a,mb,mc) {
      if (mb === null)
        return new f(a);
      var l = a.byteLength;
      var eb = f.BYTES_PER_ELEMENT;
      var off = Math.min(l, mb>>>0);
      if (mc === null)
        return new f(a,off);
      var len = Math.min((l - off) / eb, mc);
      return new f(a,off,len);
    };
  }                                              
  exports.newUint8Array = newArray(Uint8Array);

  exports.toArrayImpl = function(a) {
      var l = a.length;
      var ret = new Array(l);
      for (var i = 0; i < l; i++)
          ret[i] = a[i];
      return ret;
  }
})(PS["Data.ArrayBuffer.Typed"] = PS["Data.ArrayBuffer.Typed"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.ArrayBuffer.Typed"] = $PS["Data.ArrayBuffer.Typed"] || {};
  var exports = $PS["Data.ArrayBuffer.Typed"];
  var $foreign = $PS["Data.ArrayBuffer.Typed"];
  var typedArrayUint8 = {
      create: $foreign.newUint8Array,
      BinaryValue0: function () {
          return undefined;
      }
  };
  var toArray = function (dictTypedArray) {
      return function (a) {
          return function () {
              return $foreign.toArrayImpl(a);
          };
      };
  };
  exports["toArray"] = toArray;
  exports["typedArrayUint8"] = typedArrayUint8;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Bifunctor"] = $PS["Data.Bifunctor"] || {};
  var exports = $PS["Data.Bifunctor"];               
  var bimap = function (dict) {
      return dict.bimap;
  };
  exports["bimap"] = bimap;
})(PS);
(function(exports) {
  "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;

  exports.topChar = String.fromCharCode(65535);
  exports.bottomChar = String.fromCharCode(0);
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Bounded"] = $PS["Data.Bounded"] || {};
  var exports = $PS["Data.Bounded"];
  var $foreign = $PS["Data.Bounded"];
  var Data_Ord = $PS["Data.Ord"];
  var top = function (dict) {
      return dict.top;
  };
  var boundedInt = {
      top: $foreign.topInt,
      bottom: $foreign.bottomInt,
      Ord0: function () {
          return Data_Ord.ordInt;
      }
  };
  var boundedChar = {
      top: $foreign.topChar,
      bottom: $foreign.bottomChar,
      Ord0: function () {
          return Data_Ord.ordChar;
      }
  };
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
  exports["boundedChar"] = boundedChar;
})(PS);
(function(exports) {
  "use strict";

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };

  exports.numSub = function (n1) {
    return function (n2) {
      return n1 - n2;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
  "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };

  exports.numAdd = function (n1) {
    return function (n2) {
      return n1 + n2;
    };
  };

  exports.numMul = function (n1) {
    return function (n2) {
      return n1 * n2;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Semiring"] = $PS["Data.Semiring"] || {};
  var exports = $PS["Data.Semiring"];
  var $foreign = $PS["Data.Semiring"];
  var zero = function (dict) {
      return dict.zero;
  };
  var semiringNumber = {
      add: $foreign.numAdd,
      zero: 0.0,
      mul: $foreign.numMul,
      one: 1.0
  };
  var semiringInt = {
      add: $foreign.intAdd,
      zero: 0,
      mul: $foreign.intMul,
      one: 1
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var add = function (dict) {
      return dict.add;
  };
  exports["add"] = add;
  exports["zero"] = zero;
  exports["mul"] = mul;
  exports["semiringInt"] = semiringInt;
  exports["semiringNumber"] = semiringNumber;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Ring"] = $PS["Data.Ring"] || {};
  var exports = $PS["Data.Ring"];
  var $foreign = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var sub = function (dict) {
      return dict.sub;
  };
  var ringNumber = {
      sub: $foreign.numSub,
      Semiring0: function () {
          return Data_Semiring.semiringNumber;
      }
  };
  var ringInt = {
      sub: $foreign.intSub,
      Semiring0: function () {
          return Data_Semiring.semiringInt;
      }
  };
  exports["sub"] = sub;
  exports["ringInt"] = ringInt;
  exports["ringNumber"] = ringNumber;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.CommutativeRing"] = $PS["Data.CommutativeRing"] || {};
  var exports = $PS["Data.CommutativeRing"];
  var Data_Ring = $PS["Data.Ring"];
  var commutativeRingInt = {
      Ring0: function () {
          return Data_Ring.ringInt;
      }
  };
  exports["commutativeRingInt"] = commutativeRingInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Compactable"] = $PS["Data.Compactable"] || {};
  var exports = $PS["Data.Compactable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Monad_ST_Internal = $PS["Control.Monad.ST.Internal"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_ST = $PS["Data.Array.ST"];
  var Data_Array_ST_Iterator = $PS["Data.Array.ST.Iterator"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var compactableArray = {
      compact: function (xs) {
          return (function __do() {
              var result = Data_Array_ST["new"]();
              var iter = Data_Array_ST_Iterator.iterator(function (v) {
                  return Data_Array.index(xs)(v);
              })();
              Data_Array_ST_Iterator.iterate(iter)((function () {
                  var $79 = Data_Functor["void"](Control_Monad_ST_Internal.functorST);
                  return function ($80) {
                      return $79((function (v) {
                          if (v instanceof Data_Maybe.Nothing) {
                              return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)(0);
                          };
                          if (v instanceof Data_Maybe.Just) {
                              return Data_Array_ST.push(v.value0)(result);
                          };
                          throw new Error("Failed pattern match at Data.Compactable (line 111, column 34 - line 113, column 35): " + [ v.constructor.name ]);
                      })($80));
                  };
              })())();
              return Data_Array_ST.unsafeFreeze(result)();
          })();
      },
      separate: function (xs) {
          return (function __do() {
              var ls = Data_Array_ST["new"]();
              var rs = Data_Array_ST["new"]();
              var iter = Data_Array_ST_Iterator.iterator(function (v) {
                  return Data_Array.index(xs)(v);
              })();
              Data_Array_ST_Iterator.iterate(iter)((function () {
                  var $81 = Data_Functor["void"](Control_Monad_ST_Internal.functorST);
                  return function ($82) {
                      return $81((function (v) {
                          if (v instanceof Data_Either.Left) {
                              return Data_Array_ST.push(v.value0)(ls);
                          };
                          if (v instanceof Data_Either.Right) {
                              return Data_Array_ST.push(v.value0)(rs);
                          };
                          throw new Error("Failed pattern match at Data.Compactable (line 122, column 34 - line 124, column 31): " + [ v.constructor.name ]);
                      })($82));
                  };
              })())();
              return Control_Apply.apply(Control_Monad_ST_Internal.applyST)(Data_Functor.map(Control_Monad_ST_Internal.functorST)(function (v) {
                  return function (v1) {
                      return {
                          left: v,
                          right: v1
                      };
                  };
              })(Data_Array_ST.unsafeFreeze(ls)))(Data_Array_ST.unsafeFreeze(rs))();
          })();
      }
  };
  var compact = function (dict) {
      return dict.compact;
  };
  exports["compact"] = compact;
  exports["compactableArray"] = compactableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Exists"] = $PS["Data.Exists"] || {};
  var exports = $PS["Data.Exists"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var runExists = Unsafe_Coerce.unsafeCoerce;
  var mkExists = Unsafe_Coerce.unsafeCoerce;
  exports["mkExists"] = mkExists;
  exports["runExists"] = runExists;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Coyoneda"] = $PS["Data.Coyoneda"] || {};
  var exports = $PS["Data.Coyoneda"];
  var Control_Category = $PS["Control.Category"];
  var Data_Exists = $PS["Data.Exists"];                          
  var CoyonedaF = (function () {
      function CoyonedaF(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CoyonedaF.create = function (value0) {
          return function (value1) {
              return new CoyonedaF(value0, value1);
          };
      };
      return CoyonedaF;
  })();
  var Coyoneda = function (x) {
      return x;
  };
  var unCoyoneda = function (f) {
      return function (v) {
          return Data_Exists.runExists(function (v1) {
              return f(v1.value0)(v1.value1);
          })(v);
      };
  };
  var coyoneda = function (k) {
      return function (fi) {
          return Coyoneda(Data_Exists.mkExists(new CoyonedaF(k, fi)));
      };
  };
  var functorCoyoneda = {
      map: function (f) {
          return function (v) {
              return Data_Exists.runExists(function (v1) {
                  return coyoneda(function ($84) {
                      return f(v1.value0($84));
                  })(v1.value1);
              })(v);
          };
      }
  };
  var liftCoyoneda = coyoneda(Control_Category.identity(Control_Category.categoryFn));
  exports["unCoyoneda"] = unCoyoneda;
  exports["liftCoyoneda"] = liftCoyoneda;
  exports["functorCoyoneda"] = functorCoyoneda;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.DateTime.Instant"] = $PS["Data.DateTime.Instant"] || {};
  var exports = $PS["Data.DateTime.Instant"];
  var unInstant = function (v) {
      return v;
  };
  exports["unInstant"] = unInstant;
})(PS);
(function(exports) {
  "use strict";

  exports.toCharCode = function (c) {
    return c.charCodeAt(0);
  };

  exports.fromCharCode = function (c) {
    return String.fromCharCode(c);
  };
})(PS["Data.Enum"] = PS["Data.Enum"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Enum"] = $PS["Data.Enum"] || {};
  var exports = $PS["Data.Enum"];
  var $foreign = $PS["Data.Enum"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var toEnum = function (dict) {
      return dict.toEnum;
  };
  var fromEnum = function (dict) {
      return dict.fromEnum;
  };
  var toEnumWithDefaults = function (dictBoundedEnum) {
      return function (low) {
          return function (high) {
              return function (x) {
                  var v = toEnum(dictBoundedEnum)(x);
                  if (v instanceof Data_Maybe.Just) {
                      return v.value0;
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      var $55 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                      if ($55) {
                          return low;
                      };
                      return high;
                  };
                  throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var defaultSucc = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) + 1 | 0);
          };
      };
  };
  var defaultPred = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) - 1 | 0);
          };
      };
  };
  var charToEnum = function (v) {
      if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
          return new Data_Maybe.Just($foreign.fromCharCode(v));
      };
      return Data_Maybe.Nothing.value;
  };
  var enumChar = {
      succ: defaultSucc(charToEnum)($foreign.toCharCode),
      pred: defaultPred(charToEnum)($foreign.toCharCode),
      Ord0: function () {
          return Data_Ord.ordChar;
      }
  };
  var boundedEnumChar = {
      cardinality: $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0,
      toEnum: charToEnum,
      fromEnum: $foreign.toCharCode,
      Bounded0: function () {
          return Data_Bounded.boundedChar;
      },
      Enum1: function () {
          return enumChar;
      }
  };
  exports["fromEnum"] = fromEnum;
  exports["toEnumWithDefaults"] = toEnumWithDefaults;
  exports["boundedEnumChar"] = boundedEnumChar;
})(PS);
(function(exports) {
  "use strict";

  exports.intDegree = function (x) {
    return Math.min(Math.abs(x), 2147483647);
  };

  // See the Euclidean definition in
  // https://en.m.wikipedia.org/wiki/Modulo_operation.
  exports.intDiv = function (x) {
    return function (y) {
      if (y === 0) return 0;
      return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
  };

  exports.intMod = function (x) {
    return function (y) {
      if (y === 0) return 0;
      var yy = Math.abs(y);
      return ((x % yy) + yy) % yy;
    };
  };
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.EuclideanRing"] = $PS["Data.EuclideanRing"] || {};
  var exports = $PS["Data.EuclideanRing"];
  var $foreign = $PS["Data.EuclideanRing"];
  var Data_CommutativeRing = $PS["Data.CommutativeRing"];  
  var mod = function (dict) {
      return dict.mod;
  };
  var euclideanRingInt = {
      degree: $foreign.intDegree,
      div: $foreign.intDiv,
      mod: $foreign.intMod,
      CommutativeRing0: function () {
          return Data_CommutativeRing.commutativeRingInt;
      }
  };
  var div = function (dict) {
      return dict.div;
  };
  exports["div"] = div;
  exports["mod"] = mod;
  exports["euclideanRingInt"] = euclideanRingInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Filterable"] = $PS["Data.Filterable"] || {};
  var exports = $PS["Data.Filterable"];
  var filterMap = function (dict) {
      return dict.filterMap;
  };
  exports["filterMap"] = filterMap;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.FoldableWithIndex"] = $PS["Data.FoldableWithIndex"] || {};
  var exports = $PS["Data.FoldableWithIndex"];     
  var foldrWithIndex = function (dict) {
      return dict.foldrWithIndex;
  };
  exports["foldrWithIndex"] = foldrWithIndex;
})(PS);
(function(exports) {
  "use strict";

  exports.runFn3 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return fn(a, b, c);
        };
      };
    };
  };

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Function.Uncurried"] = $PS["Data.Function.Uncurried"] || {};
  var exports = $PS["Data.Function.Uncurried"];
  var $foreign = $PS["Data.Function.Uncurried"];
  exports["runFn3"] = $foreign.runFn3;
  exports["runFn4"] = $foreign.runFn4;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Generic.Rep"] = $PS["Data.Generic.Rep"] || {};
  var exports = $PS["Data.Generic.Rep"];
  var from = function (dict) {
      return dict.from;
  };
  exports["from"] = from;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Hashable"] = $PS["Data.Hashable"] || {};
  var exports = $PS["Data.Hashable"];
  var Data_Eq = $PS["Data.Eq"];
  var hashableInt = {
      hash: function (n) {
          return n;
      },
      Eq0: function () {
          return Data_Eq.eqInt;
      }
  };
  var hash = function (dict) {
      return dict.hash;
  };
  exports["hash"] = hash;
  exports["hashableInt"] = hashableInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Homogeneous.Row.Options"] = $PS["Data.Homogeneous.Row.Options"] || {};
  var exports = $PS["Data.Homogeneous.Row.Options"];   
  var objFromHomogeneous = function (dictToHomogeneousRow) {
      return function (v) {
          return v;
      };
  };
  var homogeneous = function (dictHomogeneousRowLabels) {
      return function (r) {
          return r;
      };
  };
  exports["homogeneous"] = homogeneous;
  exports["objFromHomogeneous"] = objFromHomogeneous;
})(PS);
(function(exports) {
  "use strict";

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* globals exports */
  "use strict";               

  exports.isFinite = isFinite;
})(PS["Data.Number"] = PS["Data.Number"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Number"] = $PS["Data.Number"] || {};
  var exports = $PS["Data.Number"];
  var $foreign = $PS["Data.Number"];
  exports["isFinite"] = $foreign["isFinite"];
})(PS);
(function(exports) {
  "use strict";

  // module Math

  exports.abs = Math.abs;  

  exports.cos = Math.cos;

  exports.floor = Math.floor;

  exports.pow = function (n) {
    return function (p) {
      return Math.pow(n, p);
    };
  };

  exports.remainder = function (n) {
    return function (m) {
      return n % m;
    };
  };                         

  exports.sin = Math.sin;      

  exports.pi = Math.PI;
})(PS["Math"] = PS["Math"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Math"] = $PS["Math"] || {};
  var exports = $PS["Math"];
  var $foreign = $PS["Math"];
  exports["abs"] = $foreign.abs;
  exports["cos"] = $foreign.cos;
  exports["floor"] = $foreign.floor;
  exports["pow"] = $foreign.pow;
  exports["sin"] = $foreign.sin;
  exports["remainder"] = $foreign.remainder;
  exports["pi"] = $foreign.pi;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Int"] = $PS["Data.Int"] || {};
  var exports = $PS["Data.Int"];
  var $foreign = $PS["Data.Int"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Number = $PS["Data.Number"];
  var $$Math = $PS["Math"];         
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (!Data_Number["isFinite"](x)) {
          return 0;
      };
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.fromMaybe(0)(fromNumber(x));
      };
      throw new Error("Failed pattern match at Data.Int (line 66, column 1 - line 66, column 29): " + [ x.constructor.name ]);
  };
  var floor = function ($24) {
      return unsafeClamp($$Math.floor($24));
  };
  exports["floor"] = floor;
  exports["toNumber"] = $foreign.toNumber;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Lens.Getter"] = $PS["Data.Lens.Getter"] || {};
  var exports = $PS["Data.Lens.Getter"];
  var Control_Category = $PS["Control.Category"];
  var Data_Newtype = $PS["Data.Newtype"];                                    
  var view = function (l) {
      return Data_Newtype.unwrap()(l(Control_Category.identity(Control_Category.categoryFn)));
  };
  exports["view"] = view;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Lens.Internal.Forget"] = $PS["Data.Lens.Internal.Forget"] || {};
  var exports = $PS["Data.Lens.Internal.Forget"];
  var Data_Tuple = $PS["Data.Tuple"];
  var profunctorForget = {
      dimap: function (f) {
          return function (v) {
              return function (v1) {
                  return function ($24) {
                      return v1(f($24));
                  };
              };
          };
      }
  };
  var strongForget = {
      first: function (v) {
          return function ($25) {
              return v(Data_Tuple.fst($25));
          };
      },
      second: function (v) {
          return function ($26) {
              return v(Data_Tuple.snd($26));
          };
      },
      Profunctor0: function () {
          return profunctorForget;
      }
  };
  exports["strongForget"] = strongForget;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Profunctor"] = $PS["Data.Profunctor"] || {};
  var exports = $PS["Data.Profunctor"];                  
  var profunctorFn = {
      dimap: function (a2b) {
          return function (c2d) {
              return function (b2c) {
                  return function ($10) {
                      return c2d(b2c(a2b($10)));
                  };
              };
          };
      }
  };
  var dimap = function (dict) {
      return dict.dimap;
  };
  exports["dimap"] = dimap;
  exports["profunctorFn"] = profunctorFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Profunctor.Strong"] = $PS["Data.Profunctor.Strong"] || {};
  var exports = $PS["Data.Profunctor.Strong"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var strongFn = {
      first: function (a2b) {
          return function (v) {
              return new Data_Tuple.Tuple(a2b(v.value0), v.value1);
          };
      },
      second: Data_Functor.map(Data_Tuple.functorTuple),
      Profunctor0: function () {
          return Data_Profunctor.profunctorFn;
      }
  };
  var first = function (dict) {
      return dict.first;
  };
  exports["first"] = first;
  exports["strongFn"] = strongFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Lens.Lens"] = $PS["Data.Lens.Lens"] || {};
  var exports = $PS["Data.Lens.Lens"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Tuple = $PS["Data.Tuple"];
  var lens$prime = function (to) {
      return function (dictStrong) {
          return function (pab) {
              return Data_Profunctor.dimap(dictStrong.Profunctor0())(to)(function (v) {
                  return v.value1(v.value0);
              })(Data_Profunctor_Strong.first(dictStrong)(pab));
          };
      };
  };
  var lens = function (get) {
      return function (set) {
          return function (dictStrong) {
              return lens$prime(function (s) {
                  return new Data_Tuple.Tuple(get(s), function (b) {
                      return set(s)(b);
                  });
              })(dictStrong);
          };
      };
  };
  exports["lens"] = lens;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Lens.Lens.Tuple"] = $PS["Data.Lens.Lens.Tuple"] || {};
  var exports = $PS["Data.Lens.Lens.Tuple"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var _1 = function (dictStrong) {
      return Data_Profunctor_Strong.first(dictStrong);
  };
  exports["_1"] = _1;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Lens.Setter"] = $PS["Data.Lens.Setter"] || {};
  var exports = $PS["Data.Lens.Setter"];
  var Data_Function = $PS["Data.Function"];          
  var over = function (l) {
      return l;
  };
  var set = function (l) {
      return function (b) {
          return over(l)(Data_Function["const"](b));
      };
  };
  exports["over"] = over;
  exports["set"] = set;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Traversable"] = $PS["Data.Traversable"] || {};
  var exports = $PS["Data.Traversable"];             
  var traverse = function (dict) {
      return dict.traverse;
  };
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["traverse"] = traverse;
  exports["sequence"] = sequence;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Map.Internal"] = $PS["Data.Map.Internal"] || {};
  var exports = $PS["Data.Map.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FoldableWithIndex = $PS["Data.FoldableWithIndex"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];                
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var values = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map.Internal (line 626, column 1 - line 626, column 40): " + [ v.constructor.name ]);
  };
  var singleton = function (k) {
      return function (v) {
          return new Two(Leaf.value, k, v, Leaf.value);
      };
  };
  var toUnfoldable = function (dictUnfoldable) {
      return function (m) {
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof Leaf) {
                          $copy_v = v.value1;
                          return;
                      };
                      if (v.value0 instanceof Two && (v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf)) {
                          $tco_done = true;
                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), v.value1));
                      };
                      if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
                          $tco_done = true;
                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                      };
                      if (v.value0 instanceof Two) {
                          $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                          return;
                      };
                      if (v.value0 instanceof Three) {
                          $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value6, v.value1)))));
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 591, column 18 - line 600, column 71): " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 590, column 3 - line 590, column 19): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
      };
  };
  var lookup = function (dictOrd) {
      return function (k) {
          var comp = Data_Ord.compare(dictOrd);
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Leaf) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Two) {
                      var v2 = comp(k)(v.value1);
                      if (v2 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      if (v2 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  if (v instanceof Three) {
                      var v3 = comp(k)(v.value1);
                      if (v3 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      var v4 = comp(k)(v.value4);
                      if (v4 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value5);
                      };
                      if (v3 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      if (v4 instanceof Data_Ordering.GT) {
                          $copy_v = v.value6;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 211, column 5 - line 211, column 22): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return go;
      };
  };
  var member = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.isJust(lookup(dictOrd)(k)(m));
          };
      };
  };
  var keys = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(keys(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value4))(keys(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map.Internal (line 620, column 1 - line 620, column 38): " + [ v.constructor.name ]);
  };
  var functorMap = {
      map: function (v) {
          return function (v1) {
              if (v1 instanceof Leaf) {
                  return Leaf.value;
              };
              if (v1 instanceof Two) {
                  return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));
              };
              if (v1 instanceof Three) {
                  return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));
              };
              throw new Error("Failed pattern match at Data.Map.Internal (line 101, column 1 - line 104, column 110): " + [ v.constructor.name, v1.constructor.name ]);
          };
      }
  };
  var fromZipper = function ($copy_dictOrd) {
      return function ($copy_v) {
          return function ($copy_tree) {
              var $tco_var_dictOrd = $copy_dictOrd;
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictOrd, v, tree) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          return;
                      };
                      if (v.value0 instanceof TwoRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          return;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 432, column 3 - line 437, column 88): " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 429, column 1 - line 429, column 80): " + [ v.constructor.name, tree.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
              };
              return $tco_result;
          };
      };
  };
  var insert = function (dictOrd) {
      return function (k) {
          return function (v) {
              var up = function ($copy_v1) {
                  return function ($copy_v2) {
                      var $tco_var_v1 = $copy_v1;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(v1, v2) {
                          if (v1 instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                          };
                          if (v1 instanceof Data_List_Types.Cons) {
                              if (v1.value0 instanceof TwoLeft) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                              };
                              if (v1.value0 instanceof TwoRight) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                              };
                              if (v1.value0 instanceof ThreeLeft) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeMiddle) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeRight) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.Map.Internal (line 468, column 5 - line 473, column 108): " + [ v1.value0.constructor.name, v2.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 465, column 3 - line 465, column 56): " + [ v1.constructor.name, v2.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                      };
                      return $tco_result;
                  };
              };
              var comp = Data_Ord.compare(dictOrd);
              var down = function ($copy_ctx) {
                  return function ($copy_v1) {
                      var $tco_var_ctx = $copy_ctx;
                      var $tco_done1 = false;
                      var $tco_result;
                      function $tco_loop(ctx, v1) {
                          if (v1 instanceof Leaf) {
                              $tco_done1 = true;
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var v2 = comp(k)(v1.value1);
                              if (v2 instanceof Data_Ordering.EQ) {
                                  $tco_done1 = true;
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if (v2 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              $copy_v1 = v1.value3;
                              return;
                          };
                          if (v1 instanceof Three) {
                              var v3 = comp(k)(v1.value1);
                              if (v3 instanceof Data_Ordering.EQ) {
                                  $tco_done1 = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var v4 = comp(k)(v1.value4);
                              if (v4 instanceof Data_Ordering.EQ) {
                                  $tco_done1 = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if (v3 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value3;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              $copy_v1 = v1.value6;
                              return;
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 448, column 3 - line 448, column 55): " + [ ctx.constructor.name, v1.constructor.name ]);
                      };
                      while (!$tco_done1) {
                          $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                      };
                      return $tco_result;
                  };
              };
              return down(Data_List_Types.Nil.value);
          };
      };
  };
  var pop = function (dictOrd) {
      return function (k) {
          var up = function ($copy_ctxs) {
              return function ($copy_tree) {
                  var $tco_var_ctxs = $copy_ctxs;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctxs, tree) {
                      if (ctxs instanceof Data_List_Types.Nil) {
                          $tco_done = true;
                          return tree;
                      };
                      if (ctxs instanceof Data_List_Types.Cons) {
                          if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                              $tco_var_ctxs = ctxs.value1;
                              $copy_tree = new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
                              return;
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                              $tco_var_ctxs = ctxs.value1;
                              $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);
                              return;
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 525, column 9 - line 542, column 136): " + [ ctxs.value0.constructor.name, tree.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 522, column 5 - line 542, column 136): " + [ ctxs.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
                  };
                  return $tco_result;
              };
          };
          var removeMaxNode = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done1 = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
                          $tco_done1 = true;
                          return up(ctx)(Leaf.value);
                      };
                      if (m instanceof Two) {
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
                          $tco_done1 = true;
                          return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
                      };
                      if (m instanceof Three) {
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 554, column 5 - line 558, column 107): " + [ m.constructor.name ]);
                  };
                  while (!$tco_done1) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          var maxNode = function ($copy_m) {
              var $tco_done2 = false;
              var $tco_result;
              function $tco_loop(m) {
                  if (m instanceof Two && m.value3 instanceof Leaf) {
                      $tco_done2 = true;
                      return {
                          key: m.value1,
                          value: m.value2
                      };
                  };
                  if (m instanceof Two) {
                      $copy_m = m.value3;
                      return;
                  };
                  if (m instanceof Three && m.value6 instanceof Leaf) {
                      $tco_done2 = true;
                      return {
                          key: m.value4,
                          value: m.value5
                      };
                  };
                  if (m instanceof Three) {
                      $copy_m = m.value6;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 545, column 33 - line 549, column 45): " + [ m.constructor.name ]);
              };
              while (!$tco_done2) {
                  $tco_result = $tco_loop($copy_m);
              };
              return $tco_result;
          };
          var comp = Data_Ord.compare(dictOrd);
          var down = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done3 = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Leaf) {
                          $tco_done3 = true;
                          return Data_Maybe.Nothing.value;
                      };
                      if (m instanceof Two) {
                          var v = comp(k)(m.value1);
                          if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three) {
                          var leaves = (function () {
                              if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                                  return true;
                              };
                              return false;
                          })();
                          var v = comp(k)(m.value4);
                          var v3 = comp(k)(m.value1);
                          if (leaves && v3 instanceof Data_Ordering.EQ) {
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
                          };
                          if (leaves && v instanceof Data_Ordering.EQ) {
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
                          };
                          if (v3 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value3);
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
                          };
                          if (v3 instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value3;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 495, column 34 - line 518, column 80): " + [ m.constructor.name ]);
                  };
                  while (!$tco_done3) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          return down(Data_List_Types.Nil.value);
      };
  };
  var foldableMap = {
      foldl: function (f) {
          return function (z) {
              return function (m) {
                  return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(values(m));
              };
          };
      },
      foldr: function (f) {
          return function (z) {
              return function (m) {
                  return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(values(m));
              };
          };
      },
      foldMap: function (dictMonoid) {
          return function (f) {
              return function (m) {
                  return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(values(m));
              };
          };
      }
  };
  var traversableMap = {
      traverse: function (dictApplicative) {
          return function (v) {
              return function (v1) {
                  if (v1 instanceof Leaf) {
                      return Control_Applicative.pure(dictApplicative)(Leaf.value);
                  };
                  if (v1 instanceof Two) {
                      return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Two.create)(Data_Traversable.traverse(traversableMap)(dictApplicative)(v)(v1.value0)))(Control_Applicative.pure(dictApplicative)(v1.value1)))(v(v1.value2)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(v)(v1.value3));
                  };
                  if (v1 instanceof Three) {
                      return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Three.create)(Data_Traversable.traverse(traversableMap)(dictApplicative)(v)(v1.value0)))(Control_Applicative.pure(dictApplicative)(v1.value1)))(v(v1.value2)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(v)(v1.value3)))(Control_Applicative.pure(dictApplicative)(v1.value4)))(v(v1.value5)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(v)(v1.value6));
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 127, column 1 - line 142, column 31): " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
      },
      sequence: function (dictApplicative) {
          return Data_Traversable.traverse(traversableMap)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
      },
      Functor0: function () {
          return functorMap;
      },
      Foldable1: function () {
          return foldableMap;
      }
  };
  var empty = Leaf.value;
  var fromFoldable = function (dictOrd) {
      return function (dictFoldable) {
          return Data_Foldable.foldl(dictFoldable)(function (m) {
              return function (v) {
                  return insert(dictOrd)(v.value0)(v.value1)(m);
              };
          })(empty);
      };
  };
  var $$delete = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
          };
      };
  };
  var asList = Control_Category.identity(Control_Category.categoryFn);
  var foldableWithIndexMap = {
      foldlWithIndex: function (f) {
          return function (z) {
              return function (m) {
                  return Data_Foldable.foldl(Data_List_Types.foldableList)((function () {
                      var $769 = Data_Function.flip(f);
                      return function ($770) {
                          return Data_Tuple.uncurry($769($770));
                      };
                  })())(z)(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
              };
          };
      },
      foldrWithIndex: function (f) {
          return function (z) {
              return function (m) {
                  return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_Tuple.uncurry(f))(z)(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
              };
          };
      },
      foldMapWithIndex: function (dictMonoid) {
          return function (f) {
              return function (m) {
                  return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(Data_Tuple.uncurry(f))(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
              };
          };
      },
      Foldable0: function () {
          return foldableMap;
      }
  };
  var mapMaybeWithKey = function (dictOrd) {
      return function (f) {
          return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexMap)(function (k) {
              return function (a) {
                  return function (acc) {
                      return Data_Maybe.maybe(acc)(function (b) {
                          return insert(dictOrd)(k)(b)(acc);
                      })(f(k)(a));
                  };
              };
          })(empty);
      };
  };
  var alter = function (dictOrd) {
      return function (f) {
          return function (k) {
              return function (m) {
                  var v = f(lookup(dictOrd)(k)(m));
                  if (v instanceof Data_Maybe.Nothing) {
                      return $$delete(dictOrd)(k)(m);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return insert(dictOrd)(k)(v.value0)(m);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 563, column 15 - line 565, column 25): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var unionWith = function (dictOrd) {
      return function (f) {
          return function (m1) {
              return function (m2) {
                  var go = function (m) {
                      return function (v) {
                          return alter(dictOrd)((function () {
                              var $777 = Data_Maybe.maybe(v.value1)(f(v.value1));
                              return function ($778) {
                                  return Data_Maybe.Just.create($777($778));
                              };
                          })())(v.value0)(m);
                      };
                  };
                  return Data_Foldable.foldl(Data_List_Types.foldableList)(go)(m2)(toUnfoldable(Data_List_Types.unfoldableList)(m1));
              };
          };
      };
  };
  var union = function (dictOrd) {
      return unionWith(dictOrd)(Data_Function["const"]);
  };
  exports["empty"] = empty;
  exports["singleton"] = singleton;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["fromFoldable"] = fromFoldable;
  exports["toUnfoldable"] = toUnfoldable;
  exports["delete"] = $$delete;
  exports["pop"] = pop;
  exports["member"] = member;
  exports["alter"] = alter;
  exports["keys"] = keys;
  exports["union"] = union;
  exports["mapMaybeWithKey"] = mapMaybeWithKey;
  exports["foldableMap"] = foldableMap;
  exports["traversableMap"] = traversableMap;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.MediaType.Common"] = $PS["Data.MediaType.Common"] || {};
  var exports = $PS["Data.MediaType.Common"];             
  var applicationJavascript = "application/javascript";
  exports["applicationJavascript"] = applicationJavascript;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Monoid.Additive"] = $PS["Data.Monoid.Additive"] || {};
  var exports = $PS["Data.Monoid.Additive"];
  var Data_Semiring = $PS["Data.Semiring"];        
  var Additive = function (x) {
      return x;
  };
  var semigroupAdditive = function (dictSemiring) {
      return {
          append: function (v) {
              return function (v1) {
                  return Data_Semiring.add(dictSemiring)(v)(v1);
              };
          }
      };
  };
  var monoidAdditive = function (dictSemiring) {
      return {
          mempty: Data_Semiring.zero(dictSemiring),
          Semigroup0: function () {
              return semigroupAdditive(dictSemiring);
          }
      };
  };
  var functorAdditive = {
      map: function (f) {
          return function (m) {
              return f(m);
          };
      }
  };
  var applyAdditive = {
      apply: function (v) {
          return function (v1) {
              return v(v1);
          };
      },
      Functor0: function () {
          return functorAdditive;
      }
  };
  var applicativeAdditive = {
      pure: Additive,
      Apply0: function () {
          return applyAdditive;
      }
  };
  exports["applicativeAdditive"] = applicativeAdditive;
  exports["semigroupAdditive"] = semigroupAdditive;
  exports["monoidAdditive"] = monoidAdditive;
})(PS);
(function(exports) {
  /* eslint-disable no-eq-null, eqeqeq */

  "use strict";

  exports["null"] = null;

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
  exports["toNullable"] = toNullable;
  exports["null"] = $foreign["null"];
})(PS);
(function(exports) {
    

  exports.unsafeMegamap = function (r1) {
	  return function (r2) {
		  var copy = {};
		  for (var key in r1) {
			  if (Object.hasOwnProperty.call(r1, key)) {
				  copy[key] = r2[key](r1[key]);
			  }
		  }
		  return copy;
	  };
  };
})(PS["Data.Row.Options"] = PS["Data.Row.Options"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Row.Options"] = $PS["Data.Row.Options"] || {};
  var exports = $PS["Data.Row.Options"];
  var $foreign = $PS["Data.Row.Options"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var options = function (dictUnion) {
      return Unsafe_Coerce.unsafeCoerce;
  };
  var megamap = function (dictRowToList) {
      return function (dictMegamapRowOptions) {
          return $foreign.unsafeMegamap;
      };
  };
  var asOptions = Unsafe_Coerce.unsafeCoerce;
  exports["options"] = options;
  exports["megamap"] = megamap;
  exports["asOptions"] = asOptions;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Set"] = $PS["Data.Set"] || {};
  var exports = $PS["Data.Set"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Unit = $PS["Data.Unit"];
  var union = function (dictOrd) {
      return function (v) {
          return function (v1) {
              return Data_Map_Internal.union(dictOrd)(v)(v1);
          };
      };
  };
  var toList = function (v) {
      return Data_Map_Internal.keys(v);
  };
  var singleton = function (a) {
      return Data_Map_Internal.singleton(a)(Data_Unit.unit);
  };
  var semigroupSet = function (dictOrd) {
      return {
          append: union(dictOrd)
      };
  };
  var member = function (dictOrd) {
      return function (a) {
          return function (v) {
              return Data_Map_Internal.member(dictOrd)(a)(v);
          };
      };
  };
  var insert = function (dictOrd) {
      return function (a) {
          return function (v) {
              return Data_Map_Internal.insert(dictOrd)(a)(Data_Unit.unit)(v);
          };
      };
  };                  
  var foldableSet = {
      foldMap: function (dictMonoid) {
          return function (f) {
              var $68 = Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f);
              return function ($69) {
                  return $68(toList($69));
              };
          };
      },
      foldl: function (f) {
          return function (x) {
              var $70 = Data_Foldable.foldl(Data_List_Types.foldableList)(f)(x);
              return function ($71) {
                  return $70(toList($71));
              };
          };
      },
      foldr: function (f) {
          return function (x) {
              var $72 = Data_Foldable.foldr(Data_List_Types.foldableList)(f)(x);
              return function ($73) {
                  return $72(toList($73));
              };
          };
      }
  };
  var empty = Data_Map_Internal.empty;
  var fromFoldable = function (dictFoldable) {
      return function (dictOrd) {
          return Data_Foldable.foldl(dictFoldable)(function (m) {
              return function (a) {
                  return insert(dictOrd)(a)(m);
              };
          })(empty);
      };
  };
  var monoidSet = function (dictOrd) {
      return {
          mempty: empty,
          Semigroup0: function () {
              return semigroupSet(dictOrd);
          }
      };
  };
  var $$delete = function (dictOrd) {
      return function (a) {
          return function (v) {
              return Data_Map_Internal["delete"](dictOrd)(a)(v);
          };
      };
  };
  exports["fromFoldable"] = fromFoldable;
  exports["empty"] = empty;
  exports["singleton"] = singleton;
  exports["insert"] = insert;
  exports["member"] = member;
  exports["delete"] = $$delete;
  exports["union"] = union;
  exports["monoidSet"] = monoidSet;
  exports["semigroupSet"] = semigroupSet;
  exports["foldableSet"] = foldableSet;
})(PS);
(function(exports) {
  "use strict";

  exports.intercalate = function (separator) {
    return function (xs) {
      var len = xs.length;
      if (len === 0) return "";

      var res = xs[0];
      for (var i = 1; i < len; i++) {
        res = res + separator + xs[i];
      }
      return res;
    };
  };
})(PS["Data.Show.Generic"] = PS["Data.Show.Generic"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Show.Generic"] = $PS["Data.Show.Generic"] || {};
  var exports = $PS["Data.Show.Generic"];
  var $foreign = $PS["Data.Show.Generic"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Type_Proxy = $PS["Type.Proxy"];
  var genericShowArgsArgument = function (dictShow) {
      return {
          genericShowArgs: function (v) {
              return [ Data_Show.show(dictShow)(v) ];
          }
      };
  };
  var genericShowArgs = function (dict) {
      return dict.genericShowArgs;
  };
  var genericShowConstructor = function (dictGenericShowArgs) {
      return function (dictIsSymbol) {
          return {
              "genericShow'": function (v) {
                  var ctor = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                  var v1 = genericShowArgs(dictGenericShowArgs)(v);
                  if (v1.length === 0) {
                      return ctor;
                  };
                  return "(" + ($foreign.intercalate(" ")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ ctor ])(v1)) + ")");
              }
          };
      };
  };
  var genericShow$prime = function (dict) {
      return dict["genericShow'"];
  };
  var genericShow = function (dictGeneric) {
      return function (dictGenericShow) {
          return function (x) {
              return genericShow$prime(dictGenericShow)(Data_Generic_Rep.from(dictGeneric)(x));
          };
      };
  };
  exports["genericShow"] = genericShow;
  exports["genericShowConstructor"] = genericShowConstructor;
  exports["genericShowArgsArgument"] = genericShowArgsArgument;
})(PS);
(function(exports) {
  "use strict";
  /* global Symbol */

  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator =
    typeof Symbol !== "undefined" &&
    Symbol != null &&
    typeof Symbol.iterator !== "undefined" &&
    typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";

  exports._unsafeCodePointAt0 = function (fallback) {
    return hasCodePointAt
      ? function (str) { return str.codePointAt(0); }
      : fallback;
  };

  exports._singleton = function (fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };

  exports._take = function (fallback) {
    return function (n) {
      if (hasStringIterator) {
        return function (str) {
          var accum = "";
          var iter = str[Symbol.iterator]();
          for (var i = 0; i < n; ++i) {
            var o = iter.next();
            if (o.done) return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };

  exports._toCodePointArray = function (fallback) {
    return function (unsafeCodePointAt0) {
      if (hasArrayFrom) {
        return function (str) {
          return Array.from(str, unsafeCodePointAt0);
        };
      }
      return fallback;
    };
  };
})(PS["Data.String.CodePoints"] = PS["Data.String.CodePoints"] || {});
(function(exports) {
  "use strict";

  exports.singleton = function (c) {
    return c;
  };

  exports.length = function (s) {
    return s.length;
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.take = function (n) {
    return function (s) {
      return s.substr(0, n);
    };
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };

  exports.splitAt = function (i) {
    return function (s) {
      return { before: s.substring(0, i), after: s.substring(i) };
    };
  };
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.String.CodeUnits"] = $PS["Data.String.CodeUnits"] || {};
  var exports = $PS["Data.String.CodeUnits"];
  var $foreign = $PS["Data.String.CodeUnits"];
  var Data_Maybe = $PS["Data.Maybe"];
  var stripPrefix = function (v) {
      return function (str) {
          var v1 = $foreign.splitAt($foreign.length(v))(str);
          var $15 = v1.before === v;
          if ($15) {
              return new Data_Maybe.Just(v1.after);
          };
          return Data_Maybe.Nothing.value;
      };
  };                                                                                                   
  var indexOf = $foreign["_indexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["stripPrefix"] = stripPrefix;
  exports["indexOf"] = indexOf;
  exports["singleton"] = $foreign.singleton;
  exports["length"] = $foreign.length;
  exports["take"] = $foreign.take;
  exports["drop"] = $foreign.drop;
})(PS);
(function(exports) {
  "use strict";

  exports.charAt = function (i) {
    return function (s) {
      if (i >= 0 && i < s.length) return s.charAt(i);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.String.Unsafe"] = $PS["Data.String.Unsafe"] || {};
  var exports = $PS["Data.String.Unsafe"];
  var $foreign = $PS["Data.String.Unsafe"];
  exports["charAt"] = $foreign.charAt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.String.CodePoints"] = $PS["Data.String.CodePoints"] || {};
  var exports = $PS["Data.String.CodePoints"];
  var $foreign = $PS["Data.String.CodePoints"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Unsafe = $PS["Data.String.Unsafe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var unsurrogate = function (lead) {
      return function (trail) {
          return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
      };
  };
  var isTrail = function (cu) {
      return 56320 <= cu && cu <= 57343;
  };
  var isLead = function (cu) {
      return 55296 <= cu && cu <= 56319;
  };
  var uncons = function (s) {
      var v = Data_String_CodeUnits.length(s);
      if (v === 0) {
          return Data_Maybe.Nothing.value;
      };
      if (v === 1) {
          return new Data_Maybe.Just({
              head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
              tail: ""
          });
      };
      var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $21 = isLead(cu0) && isTrail(cu1);
      if ($21) {
          return new Data_Maybe.Just({
              head: unsurrogate(cu0)(cu1),
              tail: Data_String_CodeUnits.drop(2)(s)
          });
      };
      return new Data_Maybe.Just({
          head: cu0,
          tail: Data_String_CodeUnits.drop(1)(s)
      });
  };
  var unconsButWithTuple = function (s) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return new Data_Tuple.Tuple(v.head, v.tail);
      })(uncons(s));
  };
  var toCodePointArrayFallback = function (s) {
      return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
  };
  var unsafeCodePointAt0Fallback = function (s) {
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $25 = isLead(cu0) && Data_String_CodeUnits.length(s) > 1;
      if ($25) {
          var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
          var $26 = isTrail(cu1);
          if ($26) {
              return unsurrogate(cu0)(cu1);
          };
          return cu0;
      };
      return cu0;
  };
  var unsafeCodePointAt0 = $foreign["_unsafeCodePointAt0"](unsafeCodePointAt0Fallback);
  var toCodePointArray = $foreign["_toCodePointArray"](toCodePointArrayFallback)(unsafeCodePointAt0);
  var length = function ($52) {
      return Data_Array.length(toCodePointArray($52));
  };
  var indexOf = function (p) {
      return function (s) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (i) {
              return length(Data_String_CodeUnits.take(i)(s));
          })(Data_String_CodeUnits.indexOf(p)(s));
      };
  };
  var fromCharCode = (function () {
      var $53 = Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar));
      return function ($54) {
          return Data_String_CodeUnits.singleton($53($54));
      };
  })();
  var singletonFallback = function (v) {
      if (v <= 65535) {
          return fromCharCode(v);
      };
      var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
      var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
      return fromCharCode(lead) + fromCharCode(trail);
  };                                                                          
  var singleton = $foreign["_singleton"](singletonFallback);
  var takeFallback = function (n) {
      return function (v) {
          if (n < 1) {
              return "";
          };
          var v1 = uncons(v);
          if (v1 instanceof Data_Maybe.Just) {
              return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
          };
          return v;
      };
  };
  var take = $foreign["_take"](takeFallback);
  var splitAt = function (i) {
      return function (s) {
          var before = take(i)(s);
          return {
              before: before,
              after: Data_String_CodeUnits.drop(Data_String_CodeUnits.length(before))(s)
          };
      };
  };
  var drop = function (n) {
      return function (s) {
          return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
      };
  };
  exports["indexOf"] = indexOf;
  exports["drop"] = drop;
  exports["splitAt"] = splitAt;
})(PS);
(function(exports) {
  "use strict";

  function unsafeRepeatImpl (n, str) {
    try {
      return str.repeat(n);
    }
    catch (error) {
      throw new Error("Data.String.Utils.unsafeRepeat: Invalid count");
    }
  }                                                               
  exports.unsafeRepeatImpl           = unsafeRepeatImpl;
})(PS["Data.String.Utils"] = PS["Data.String.Utils"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.String.Utils"] = $PS["Data.String.Utils"] || {};
  var exports = $PS["Data.String.Utils"];
  var $foreign = $PS["Data.String.Utils"];
  var unsafeRepeat = function (n) {
      return function (s) {
          return $foreign.unsafeRepeatImpl(n, s);
      };
  };
  exports["unsafeRepeat"] = unsafeRepeat;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Typelevel.Undefined"] = $PS["Data.Typelevel.Undefined"] || {};
  var exports = $PS["Data.Typelevel.Undefined"];
  var Data_Unit = $PS["Data.Unit"];                
  var $$undefined = Data_Unit.unit;
  exports["undefined"] = $$undefined;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Typelevel.Num.Sets"] = $PS["Data.Typelevel.Num.Sets"] || {};
  var exports = $PS["Data.Typelevel.Num.Sets"];
  var Data_Typelevel_Undefined = $PS["Data.Typelevel.Undefined"];
  var toInt = function (dict) {
      return dict.toInt;
  };
  var toInt$prime = function (dictNat) {
      return function (v) {
          return toInt(dictNat)(Data_Typelevel_Undefined["undefined"]);
      };
  };
  var natD5 = {
      toInt: function (v) {
          return 5;
      }
  };
  var posD5 = {
      Nat0: function () {
          return natD5;
      }
  };
  var natD4 = {
      toInt: function (v) {
          return 4;
      }
  };
  var posD4 = {
      Nat0: function () {
          return natD4;
      }
  };
  var natD3 = {
      toInt: function (v) {
          return 3;
      }
  };
  var posD3 = {
      Nat0: function () {
          return natD3;
      }
  };
  var natD2 = {
      toInt: function (v) {
          return 2;
      }
  };
  var posD2 = {
      Nat0: function () {
          return natD2;
      }
  };
  var natD1 = {
      toInt: function (v) {
          return 1;
      }
  };
  var posD1 = {
      Nat0: function () {
          return natD1;
      }
  };
  var natD0 = {
      toInt: function (v) {
          return 0;
      }
  };
  exports["toInt'"] = toInt$prime;
  exports["natD0"] = natD0;
  exports["natD1"] = natD1;
  exports["natD2"] = natD2;
  exports["natD3"] = natD3;
  exports["natD4"] = natD4;
  exports["natD5"] = natD5;
  exports["posD1"] = posD1;
  exports["posD2"] = posD2;
  exports["posD3"] = posD3;
  exports["posD4"] = posD4;
  exports["posD5"] = posD5;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Typelevel.Num.Ops"] = $PS["Data.Typelevel.Num.Ops"] || {};
  var exports = $PS["Data.Typelevel.Num.Ops"];
  var Data_Typelevel_Num_Sets = $PS["Data.Typelevel.Num.Sets"];                  
  var typelevelSucc = function (dictPos) {
      return function (dictIsZero) {
          return function (dictDivMod10) {
              return function (dictSuccP) {
                  return function (dictDivMod101) {
                      return {
                          Nat0: dictDivMod10.Nat1,
                          Pos1: function () {
                              return dictPos;
                          }
                      };
                  };
              };
          };
      };
  };
  var divMod10D5D0 = {
      Nat0: function () {
          return Data_Typelevel_Num_Sets.natD0;
      },
      Nat1: function () {
          return Data_Typelevel_Num_Sets.natD5;
      }
  };
  var divMod10D4D0 = {
      Nat0: function () {
          return Data_Typelevel_Num_Sets.natD0;
      },
      Nat1: function () {
          return Data_Typelevel_Num_Sets.natD4;
      }
  };
  var divMod10D3D0 = {
      Nat0: function () {
          return Data_Typelevel_Num_Sets.natD0;
      },
      Nat1: function () {
          return Data_Typelevel_Num_Sets.natD3;
      }
  };
  var divMod10D2D0 = {
      Nat0: function () {
          return Data_Typelevel_Num_Sets.natD0;
      },
      Nat1: function () {
          return Data_Typelevel_Num_Sets.natD2;
      }
  };
  var divMod10D1D0 = {
      Nat0: function () {
          return Data_Typelevel_Num_Sets.natD0;
      },
      Nat1: function () {
          return Data_Typelevel_Num_Sets.natD1;
      }
  };
  var divMod10D0D0 = {
      Nat0: function () {
          return Data_Typelevel_Num_Sets.natD0;
      },
      Nat1: function () {
          return Data_Typelevel_Num_Sets.natD0;
      }
  };
  exports["typelevelSucc"] = typelevelSucc;
  exports["divMod10D0D0"] = divMod10D0D0;
  exports["divMod10D1D0"] = divMod10D1D0;
  exports["divMod10D2D0"] = divMod10D2D0;
  exports["divMod10D3D0"] = divMod10D3D0;
  exports["divMod10D4D0"] = divMod10D4D0;
  exports["divMod10D5D0"] = divMod10D5D0;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Typelevel.Num.Reps"] = $PS["Data.Typelevel.Num.Reps"] || {};
  var exports = $PS["Data.Typelevel.Num.Reps"];
  var Data_Typelevel_Undefined = $PS["Data.Typelevel.Undefined"];
  var d1 = Data_Typelevel_Undefined["undefined"];
  var d0 = Data_Typelevel_Undefined["undefined"];
  exports["d0"] = d0;
  exports["d1"] = d1;
})(PS);
(function(exports) {
  "use strict";

  exports.toInt = function (uval) {
      return uval | 0;
  };
})(PS["Data.UInt"] = PS["Data.UInt"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.UInt"] = $PS["Data.UInt"] || {};
  var exports = $PS["Data.UInt"];
  var $foreign = $PS["Data.UInt"];
  exports["toInt"] = $foreign.toInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Variant.Internal"] = $PS["Data.Variant.Internal"] || {};
  var exports = $PS["Data.Variant.Internal"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var Type_Proxy = $PS["Type.Proxy"];
  var variantTagsNil = {
      variantTags: function (v) {
          return Data_List_Types.Nil.value;
      }
  };
  var variantTags = function (dict) {
      return dict.variantTags;
  };
  var variantTagsCons = function (dictVariantTags) {
      return function (dictIsSymbol) {
          return {
              variantTags: function (v) {
                  return new Data_List_Types.Cons(Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value), variantTags(dictVariantTags)(Type_Proxy["Proxy"].value));
              }
          };
      };
  };   
  var impossible = function (str) {
      return Partial_Unsafe.unsafeCrashWith("Data.Variant: impossible `" + (str + "`"));
  };
  var lookup = function (name) {
      return function (tag) {
          var go = function ($copy_v) {
              return function ($copy_v1) {
                  var $tco_var_v = $copy_v;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(v, v1) {
                      if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                          if (v.value0 === tag) {
                              $tco_done = true;
                              return v1.value0;
                          };
                          if (Data_Boolean.otherwise) {
                              $tco_var_v = v.value1;
                              $copy_v1 = v1.value1;
                              return;
                          };
                      };
                      $tco_done = true;
                      return impossible(name);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_v, $copy_v1);
                  };
                  return $tco_result;
              };
          };
          return go;
      };
  };
  var lookupEq = function (tags) {
      return function (eqs) {
          return function (v) {
              return function (v1) {
                  if (v.type === v1.type) {
                      return lookup("eq")(v.type)(tags)(eqs)(v.value)(v1.value);
                  };
                  if (Data_Boolean.otherwise) {
                      return false;
                  };
                  throw new Error("Failed pattern match at Data.Variant.Internal (line 96, column 1 - line 101, column 12): " + [ tags.constructor.name, eqs.constructor.name, v.constructor.name, v1.constructor.name ]);
              };
          };
      };
  };
  var lookupOrd = function (tags) {
      return function (ords) {
          return function (v) {
              return function (v1) {
                  var v3 = Data_Ord.compare(Data_Ord.ordString)(v.type)(v1.type);
                  if (v3 instanceof Data_Ordering.EQ) {
                      return lookup("compare")(v.type)(tags)(ords)(v.value)(v1.value);
                  };
                  return v3;
              };
          };
      };
  };
  exports["variantTags"] = variantTags;
  exports["lookup"] = lookup;
  exports["lookupEq"] = lookupEq;
  exports["lookupOrd"] = lookupOrd;
  exports["variantTagsNil"] = variantTagsNil;
  exports["variantTagsCons"] = variantTagsCons;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Variant"] = $PS["Data.Variant"] || {};
  var exports = $PS["Data.Variant"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Variant_Internal = $PS["Data.Variant.Internal"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Proxy = $PS["Type.Proxy"];
  var variantShows = function (dict) {
      return dict.variantShows;
  };
  var variantOrds = function (dict) {
      return dict.variantOrds;
  };
  var variantEqs = function (dict) {
      return dict.variantEqs;
  };
  var showVariantNil = {
      variantShows: function (v) {
          return Data_List_Types.Nil.value;
      }
  };
  var showVariantCons = function (dictVariantShows) {
      return function (dictShow) {
          return {
              variantShows: function (v) {
                  return new Data_List_Types.Cons(Data_Show.show(dictShow), variantShows(dictVariantShows)(Type_Proxy["Proxy"].value));
              }
          };
      };
  };
  var showVariant = function (dictRowToList) {
      return function (dictVariantTags) {
          return function (dictVariantShows) {
              return {
                  show: function (v1) {
                      var tags = Data_Variant_Internal.variantTags(dictVariantTags)(Type_Proxy["Proxy"].value);
                      var shows = variantShows(dictVariantShows)(Type_Proxy["Proxy"].value);
                      var body = Data_Variant_Internal.lookup("show")(v1.type)(tags)(shows)(v1.value);
                      return "(inj @" + (Data_Show.show(Data_Show.showString)(v1.type) + (" " + (body + ")")));
                  }
              };
          };
      };
  };
  var ordVariantNil = {
      variantOrds: function (v) {
          return Data_List_Types.Nil.value;
      }
  };
  var ordVariantCons = function (dictVariantOrds) {
      return function (dictOrd) {
          return {
              variantOrds: function (v) {
                  return new Data_List_Types.Cons(Data_Ord.compare(dictOrd), variantOrds(dictVariantOrds)(Type_Proxy["Proxy"].value));
              }
          };
      };
  };
  var onMatch = function (dictRowToList) {
      return function (dictVariantMatchCases) {
          return function (dictUnion) {
              return function (r) {
                  return function (k) {
                      return function (v) {
                          if (Record_Unsafe.unsafeHas(v.type)(r)) {
                              return Record_Unsafe.unsafeGet(v.type)(r)(v.value);
                          };
                          return k(v);
                      };
                  };
              };
          };
      };
  };
  var on = function (dictCons) {
      return function (dictIsSymbol) {
          return function (p) {
              return function (f) {
                  return function (g) {
                      return function (r) {
                          if (r.type === Data_Symbol.reflectSymbol(dictIsSymbol)(p)) {
                              return f(r.value);
                          };
                          return g(r);
                      };
                  };
              };
          };
      };
  };
  var inj = function (dictCons) {
      return function (dictIsSymbol) {
          return function (p) {
              return function (value) {
                  return {
                      type: Data_Symbol.reflectSymbol(dictIsSymbol)(p),
                      value: value
                  };
              };
          };
      };
  };
  var eqVariantNil = {
      variantEqs: function (v) {
          return Data_List_Types.Nil.value;
      }
  };
  var eqVariantCons = function (dictVariantEqs) {
      return function (dictEq) {
          return {
              variantEqs: function (v) {
                  return new Data_List_Types.Cons(Data_Eq.eq(dictEq), variantEqs(dictVariantEqs)(Type_Proxy["Proxy"].value));
              }
          };
      };
  };
  var eqVariant = function (dictRowToList) {
      return function (dictVariantTags) {
          return function (dictVariantEqs) {
              return {
                  eq: function (v1) {
                      return function (v2) {
                          var tags = Data_Variant_Internal.variantTags(dictVariantTags)(Type_Proxy["Proxy"].value);
                          var eqs = variantEqs(dictVariantEqs)(Type_Proxy["Proxy"].value);
                          return Data_Variant_Internal.lookupEq(tags)(eqs)(v1)(v2);
                      };
                  }
              };
          };
      };
  };
  var ordVariant = function (dictRowToList) {
      return function (dictVariantTags) {
          return function (dictVariantEqs) {
              return function (dictVariantOrds) {
                  return {
                      compare: function (v1) {
                          return function (v2) {
                              var tags = Data_Variant_Internal.variantTags(dictVariantTags)(Type_Proxy["Proxy"].value);
                              var ords = variantOrds(dictVariantOrds)(Type_Proxy["Proxy"].value);
                              return Data_Variant_Internal.lookupOrd(tags)(ords)(v1)(v2);
                          };
                      },
                      Eq0: function () {
                          return eqVariant()(dictVariantTags)(dictVariantEqs);
                      }
                  };
              };
          };
      };
  };
  var $$default = function (a) {
      return function (v) {
          return a;
      };
  };
  var case_ = function (r) {
      return Partial_Unsafe.unsafeCrashWith("Data.Variant: pattern match failure [" + (r.type + "]"));
  };
  var match = function (dictRowToList) {
      return function (dictVariantMatchCases) {
          return function (dictUnion) {
              return function (r) {
                  return onMatch()()()(r)(case_);
              };
          };
      };
  };
  exports["inj"] = inj;
  exports["on"] = on;
  exports["match"] = match;
  exports["default"] = $$default;
  exports["eqVariantNil"] = eqVariantNil;
  exports["eqVariantCons"] = eqVariantCons;
  exports["eqVariant"] = eqVariant;
  exports["ordVariantNil"] = ordVariantNil;
  exports["ordVariantCons"] = ordVariantCons;
  exports["ordVariant"] = ordVariant;
  exports["showVariantNil"] = showVariantNil;
  exports["showVariantCons"] = showVariantCons;
  exports["showVariant"] = showVariant;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Variant.Maybe"] = $PS["Data.Variant.Maybe"] || {};
  var exports = $PS["Data.Variant.Maybe"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Variant = $PS["Data.Variant"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var Maybe = function (x) {
      return x;
  };
  var onJust = Data_Variant.on()({
      reflectSymbol: function () {
          return "just";
      }
  })(Type_Proxy["Proxy"].value);
  var nothing = Maybe(Data_Variant.inj()({
      reflectSymbol: function () {
          return "nothing";
      }
  })(Type_Proxy["Proxy"].value)(Data_Unit.unit));
  var maybe = function (b) {
      return function (f) {
          return function (v) {
              return onJust(f)(Data_Variant["default"](b))(v);
          };
      };
  };
  var just = (function () {
      var $96 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "just";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($97) {
          return Maybe($96($97));
      };
  })();
  var functorMaybe = {
      map: function (f) {
          return function (v) {
              return Data_Variant.match()()()({
                  just: function (a) {
                      return just(f(a));
                  },
                  nothing: function (v2) {
                      return nothing;
                  }
              })(v);
          };
      }
  };
  var applyMaybe = {
      apply: function (v) {
          return function (v1) {
              return Data_Variant.match()()()({
                  just: function (fa$prime) {
                      return Data_Variant.match()()()({
                          just: function (a$prime) {
                              return just(fa$prime(a$prime));
                          },
                          nothing: Data_Function["const"](nothing)
                      })(v1);
                  },
                  nothing: Data_Function["const"](nothing)
              })(v);
          };
      },
      Functor0: function () {
          return functorMaybe;
      }
  };
  var applicativeMaybe = {
      pure: just,
      Apply0: function () {
          return applyMaybe;
      }
  };
  exports["just"] = just;
  exports["maybe"] = maybe;
  exports["functorMaybe"] = functorMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Vec"] = $PS["Data.Vec"] || {};
  var exports = $PS["Data.Vec"];
  var Data_Array = $PS["Data.Array"];
  var toArray = function (v) {
      return v;
  };
  var empty = [  ];
  var cons = function (dictSucc) {
      return function (x) {
          return function (v) {
              return Data_Array.cons(x)(v);
          };
      };
  };
  exports["empty"] = empty;
  exports["cons"] = cons;
  exports["toArray"] = toArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Void"] = $PS["Data.Void"] || {};
  var exports = $PS["Data.Void"];
  var absurd = function (a) {
      var spin = function ($copy_v) {
          var $tco_result;
          function $tco_loop(v) {
              $copy_v = v;
              return;
          };
          while (!false) {
              $tco_result = $tco_loop($copy_v);
          };
          return $tco_result;
      };
      return spin(a);
  };
  exports["absurd"] = absurd;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Effect.Aff.Class"] = $PS["Effect.Aff.Class"] || {};
  var exports = $PS["Effect.Aff.Class"];
  var Control_Category = $PS["Control.Category"];
  var Effect_Aff = $PS["Effect.Aff"];                
  var monadAffAff = {
      liftAff: Control_Category.identity(Control_Category.categoryFn),
      MonadEffect0: function () {
          return Effect_Aff.monadEffectAff;
      }
  };
  var liftAff = function (dict) {
      return dict.liftAff;
  };
  exports["liftAff"] = liftAff;
  exports["monadAffAff"] = monadAffAff;
})(PS);
(function(exports) {
  "use strict";

  exports.warn = function (s) {
    return function () {
      console.warn(s);
    };
  };

  exports.info = function (s) {
    return function () {
      console.info(s);
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Effect.Console"] = $PS["Effect.Console"] || {};
  var exports = $PS["Effect.Console"];
  var $foreign = $PS["Effect.Console"];
  exports["warn"] = $foreign.warn;
  exports["info"] = $foreign.info;
})(PS);
(function(exports) {
  "use strict";

  exports.now = function () {
    return Date.now();
  };
})(PS["Effect.Now"] = PS["Effect.Now"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Effect.Now"] = $PS["Effect.Now"] || {};
  var exports = $PS["Effect.Now"];
  var $foreign = $PS["Effect.Now"];
  exports["now"] = $foreign.now;
})(PS);
(function(exports) {
  /* no-redeclare global exports */
  "use strict";

  exports.setTimeout = function (ms) {
    return function (fn) {
      return function () {
        return setTimeout(fn, ms);
      };
    };
  };

  exports.clearTimeout = function (id) {
    return function () {
      clearTimeout(id);
    };
  };

  exports.setInterval = function (ms) {
    return function (fn) {
      return function () {
        return setInterval(fn, ms);
      };
    };
  };

  exports.clearInterval = function (id) {
    return function () {
      clearInterval(id);
    };
  };
})(PS["Effect.Timer"] = PS["Effect.Timer"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Effect.Timer"] = $PS["Effect.Timer"] || {};
  var exports = $PS["Effect.Timer"];
  var $foreign = $PS["Effect.Timer"];
  var Data_Ord = $PS["Data.Ord"];
  var eqTimeoutId = {
      eq: function (x) {
          return function (y) {
              return x === y;
          };
      }
  };
  var ordTimeoutId = {
      compare: function (x) {
          return function (y) {
              return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
          };
      },
      Eq0: function () {
          return eqTimeoutId;
      }
  };
  exports["ordTimeoutId"] = ordTimeoutId;
  exports["setTimeout"] = $foreign.setTimeout;
  exports["clearTimeout"] = $foreign.clearTimeout;
  exports["setInterval"] = $foreign.setInterval;
  exports["clearInterval"] = $foreign.clearInterval;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["FRP.Behavior"] = $PS["FRP.Behavior"] || {};
  var exports = $PS["FRP.Behavior"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];                      
  var ABehavior = function (x) {
      return x;
  };
  var sample = function (v) {
      return function (e) {
          return v(e);
      };
  };
  var functorABehavior = function (dictFunctor) {
      return {
          map: function (f) {
              return function (v) {
                  return function (e) {
                      return v(Data_Functor.map(dictFunctor)(function (v1) {
                          return function ($66) {
                              return v1(f($66));
                          };
                      })(e));
                  };
              };
          }
      };
  };
  var sampleBy = function (dictIsEvent) {
      return function (f) {
          return function (b) {
              return function (e) {
                  return sample(Data_Functor.map(functorABehavior((dictIsEvent.Filterable1()).Functor1()))(f)(b))(Data_Functor.map((dictIsEvent.Filterable1()).Functor1())(Data_Function.applyFlipped)(e));
              };
          };
      };
  };
  var sample_ = function (dictIsEvent) {
      return sampleBy(dictIsEvent)(Data_Function["const"]);
  };
  var behavior = ABehavior;
  var applyABehavior = function (dictFunctor) {
      return {
          apply: function (v) {
              return function (v1) {
                  return function (e) {
                      return v1(v(Data_Functor.map(dictFunctor)(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn))(e)));
                  };
              };
          },
          Functor0: function () {
              return functorABehavior(dictFunctor);
          }
      };
  };
  var applicativeABehavior = function (dictFunctor) {
      return {
          pure: function (a) {
              return function (e) {
                  return Data_Functor.map(dictFunctor)(Data_Function.applyFlipped(a))(e);
              };
          },
          Apply0: function () {
              return applyABehavior(dictFunctor);
          }
      };
  };
  exports["behavior"] = behavior;
  exports["sampleBy"] = sampleBy;
  exports["sample_"] = sample_;
  exports["functorABehavior"] = functorABehavior;
  exports["applyABehavior"] = applyABehavior;
  exports["applicativeABehavior"] = applicativeABehavior;
})(PS);
(function(exports) {
  "use strict";

  exports.reallyUnsafeRefEq = function (a) {
    return function (b) {
      return a === b;
    };
  };
})(PS["Unsafe.Reference"] = PS["Unsafe.Reference"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Unsafe.Reference"] = $PS["Unsafe.Reference"] || {};
  var exports = $PS["Unsafe.Reference"];
  var $foreign = $PS["Unsafe.Reference"];
  var unsafeRefEq = $foreign.reallyUnsafeRefEq;
  exports["unsafeRefEq"] = unsafeRefEq;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["FRP.Event"] = $PS["FRP.Event"] || {};
  var exports = $PS["FRP.Event"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Filterable = $PS["Data.Filterable"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Effect_Unsafe = $PS["Effect.Unsafe"];
  var Unsafe_Reference = $PS["Unsafe.Reference"];                
  var Event = function (x) {
      return x;
  };
  var subscribe = function (v) {
      return function (k) {
          return v(k);
      };
  };
  var sampleOn = function (v) {
      return function (v1) {
          return function (k) {
              return function __do() {
                  var latest = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                  var c1 = v(function (a) {
                      return Effect_Ref.write(new Data_Maybe.Just(a))(latest);
                  })();
                  var c2 = v1(function (f) {
                      return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(latest))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function ($53) {
                          return k(f($53));
                      }));
                  })();
                  return Control_Apply.applySecond(Effect.applyEffect)(c1)(c2);
              };
          };
      };
  };
  var makeEvent = Event;
  var keepLatest = function (v) {
      return function (k) {
          return function __do() {
              var cancelInner = Effect_Ref["new"](Data_Maybe.Nothing.value)();
              var cancelOuter = v(function (inner) {
                  return function __do() {
                      Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(cancelInner))(Data_Foldable.sequence_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe))();
                      var c = subscribe(inner)(k)();
                      return Effect_Ref.write(new Data_Maybe.Just(c))(cancelInner)();
                  };
              })();
              return function __do() {
                  Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(cancelInner))(Data_Foldable.sequence_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe))();
                  return cancelOuter();
              };
          };
      };
  };
  var functorEvent = {
      map: function (f) {
          return function (v) {
              return function (k) {
                  return v(function ($54) {
                      return k(f($54));
                  });
              };
          };
      }
  };
  var fold = function (f) {
      return function (v) {
          return function (b) {
              return function (k) {
                  return function __do() {
                      var result = Effect_Ref["new"](b)();
                      return v(function (a) {
                          return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.modify(f(a))(result))(k);
                      })();
                  };
              };
          };
      };
  };
  var filter = function (p) {
      return function (v) {
          return function (k) {
              return v(function (a) {
                  var v1 = p(a);
                  if (v1 instanceof Data_Maybe.Just) {
                      return k(v1.value0);
                  };
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                  };
                  throw new Error("Failed pattern match at FRP.Event (line 134, column 13 - line 136, column 27): " + [ v1.constructor.name ]);
              });
          };
      };
  };
  var filter$prime = function (f) {
      return filter(function (a) {
          var v = f(a);
          if (v) {
              return new Data_Maybe.Just(a);
          };
          if (!v) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at FRP.Event (line 64, column 13 - line 66, column 25): " + [ v.constructor.name ]);
      });
  };
  var create = function __do() {
      var subscribers = Effect_Ref["new"]([  ])();
      return {
          event: function (k) {
              return function __do() {
                  Effect_Ref.modify(function (v) {
                      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)([ k ]);
                  })(subscribers)();
                  return function __do() {
                      Effect_Ref.modify(Data_Array.deleteBy(Unsafe_Reference.unsafeRefEq)(k))(subscribers)();
                      return Data_Unit.unit;
                  };
              };
          },
          push: function (a) {
              return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(subscribers))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableArray)(function (k) {
                  return k(a);
              }));
          }
      };
  };
  var fix = function (f) {
      var v = Effect_Unsafe.unsafePerformEffect(create);
      var v1 = f(v.event);
      return function (k) {
          return function __do() {
              var c1 = subscribe(v1.input)(v.push)();
              var c2 = subscribe(v1.output)(k)();
              return Control_Apply.applySecond(Effect.applyEffect)(c1)(c2);
          };
      };
  };
  var compactableEvent = {
      compact: filter(Control_Category.identity(Control_Category.categoryFn)),
      separate: function (xs) {
          return {
              left: filter(function (v) {
                  if (v instanceof Data_Either.Left) {
                      return new Data_Maybe.Just(v.value0);
                  };
                  if (v instanceof Data_Either.Right) {
                      return Data_Maybe.Nothing.value;
                  };
                  throw new Error("Failed pattern match at FRP.Event (line 47, column 13 - line 49, column 33): " + [ v.constructor.name ]);
              })(xs),
              right: filter(function (v) {
                  if (v instanceof Data_Either.Right) {
                      return new Data_Maybe.Just(v.value0);
                  };
                  if (v instanceof Data_Either.Left) {
                      return Data_Maybe.Nothing.value;
                  };
                  throw new Error("Failed pattern match at FRP.Event (line 54, column 13 - line 56, column 32): " + [ v.constructor.name ]);
              })(xs)
          };
      }
  };
  var filterableEvent = {
      filter: filter$prime,
      filterMap: filter,
      partition: function (p) {
          return function (xs) {
              return {
                  yes: filter$prime(p)(xs),
                  no: filter$prime((function () {
                      var $55 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
                      return function ($56) {
                          return $55(p($56));
                      };
                  })())(xs)
              };
          };
      },
      partitionMap: function (f) {
          return function (xs) {
              return {
                  left: Data_Filterable.filterMap(filterableEvent)((function () {
                      var $57 = Data_Either.either(Data_Maybe.Just.create)(Data_Function["const"](Data_Maybe.Nothing.value));
                      return function ($58) {
                          return $57(f($58));
                      };
                  })())(xs),
                  right: Data_Filterable.filterMap(filterableEvent)(function ($59) {
                      return Data_Either.hush(f($59));
                  })(xs)
              };
          };
      },
      Compactable0: function () {
          return compactableEvent;
      },
      Functor1: function () {
          return functorEvent;
      }
  };
  var applyEvent = {
      apply: function (v) {
          return function (v1) {
              return function (k) {
                  return function __do() {
                      var latestA = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                      var latestB = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                      var c1 = v(function (a) {
                          return function __do() {
                              Effect_Ref.write(new Data_Maybe.Just(a))(latestA)();
                              return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(latestB))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function ($60) {
                                  return k(a($60));
                              }))();
                          };
                      })();
                      var c2 = v1(function (b) {
                          return function __do() {
                              Effect_Ref.write(new Data_Maybe.Just(b))(latestB)();
                              return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(latestA))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function ($61) {
                                  return k((function (v2) {
                                      return v2(b);
                                  })($61));
                              }))();
                          };
                      })();
                      return Control_Apply.applySecond(Effect.applyEffect)(c1)(c2);
                  };
              };
          };
      },
      Functor0: function () {
          return functorEvent;
      }
  };
  var applicativeEvent = {
      pure: function (a) {
          return function (k) {
              return function __do() {
                  k(a)();
                  return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
              };
          };
      },
      Apply0: function () {
          return applyEvent;
      }
  };
  var altEvent = {
      alt: function (v) {
          return function (v1) {
              return function (k) {
                  return function __do() {
                      var c1 = v(k)();
                      var c2 = v1(k)();
                      return Control_Apply.applySecond(Effect.applyEffect)(c1)(c2);
                  };
              };
          };
      },
      Functor0: function () {
          return functorEvent;
      }
  };
  var plusEvent = {
      empty: function (v) {
          return Control_Applicative.pure(Effect.applicativeEffect)(Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit));
      },
      Alt0: function () {
          return altEvent;
      }
  };
  var alternativeEvent = {
      Applicative0: function () {
          return applicativeEvent;
      },
      Plus1: function () {
          return plusEvent;
      }
  };
  var eventIsEvent = {
      fold: fold,
      keepLatest: keepLatest,
      sampleOn: sampleOn,
      fix: fix,
      Alternative0: function () {
          return alternativeEvent;
      },
      Filterable1: function () {
          return filterableEvent;
      }
  };
  exports["makeEvent"] = makeEvent;
  exports["subscribe"] = subscribe;
  exports["functorEvent"] = functorEvent;
  exports["applicativeEvent"] = applicativeEvent;
  exports["altEvent"] = altEvent;
  exports["eventIsEvent"] = eventIsEvent;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["FRP.Event.Time"] = $PS["FRP.Event.Time"] || {};
  var exports = $PS["FRP.Event.Time"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Set = $PS["Data.Set"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Now = $PS["Effect.Now"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Effect_Timer = $PS["Effect.Timer"];
  var FRP_Event = $PS["FRP.Event"];                            
  var withTime = function (e) {
      return FRP_Event.makeEvent(function (k) {
          return FRP_Event.subscribe(e)(function (value) {
              return function __do() {
                  var time = Effect_Now.now();
                  return k({
                      time: time,
                      value: value
                  })();
              };
          });
      });
  };
  var interval = function (n) {
      return FRP_Event.makeEvent(function (k) {
          return function __do() {
              var id = Effect_Timer.setInterval(n)(function __do() {
                  var time = Effect_Now.now();
                  return k(time)();
              })();
              return Effect_Timer.clearInterval(id);
          };
      });
  };
  var delay = function (n) {
      return function (e) {
          return FRP_Event.makeEvent(function (k) {
              return function __do() {
                  var tid = Effect_Ref["new"](Data_Monoid.mempty(Data_Set.monoidSet(Effect_Timer.ordTimeoutId)))();
                  var canceler = FRP_Event.subscribe(e)(function (a) {
                      return function __do() {
                          var localId = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                          var id = Effect_Timer.setTimeout(n)(function __do() {
                              k(a)();
                              var lid = Effect_Ref.read(localId)();
                              return Data_Maybe.maybe(Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))(function (id) {
                                  return Effect_Ref.modify_(Data_Set["delete"](Effect_Timer.ordTimeoutId)(id))(tid);
                              })(lid)();
                          })();
                          Effect_Ref.write(new Data_Maybe.Just(id))(localId)();
                          return Effect_Ref.modify_(Data_Semigroup.append(Data_Set.semigroupSet(Effect_Timer.ordTimeoutId))(Data_Set.singleton(id)))(tid)();
                      };
                  })();
                  return function __do() {
                      var ids = Effect_Ref.read(tid)();
                      Data_Foldable.for_(Effect.applicativeEffect)(Data_Set.foldableSet)(ids)(Effect_Timer.clearTimeout)();
                      return canceler();
                  };
              };
          });
      };
  };
  exports["interval"] = interval;
  exports["withTime"] = withTime;
  exports["delay"] = delay;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["FRP.Behavior.Time"] = $PS["FRP.Behavior.Time"] || {};
  var exports = $PS["FRP.Behavior.Time"];
  var Data_Functor = $PS["Data.Functor"];
  var FRP_Behavior = $PS["FRP.Behavior"];
  var FRP_Event = $PS["FRP.Event"];
  var FRP_Event_Time = $PS["FRP.Event.Time"];                
  var instant = FRP_Behavior.behavior(function (e) {
      return Data_Functor.map(FRP_Event.functorEvent)(function (v) {
          return v.value(v.time);
      })(FRP_Event_Time.withTime(e));
  });
  exports["instant"] = instant;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["FRP.Event.Class"] = $PS["FRP.Event.Class"] || {};
  var exports = $PS["FRP.Event.Class"];
  var fold = function (dict) {
      return dict.fold;
  };
  exports["fold"] = fold;
})(PS);
(function(exports) {
  exports.midiAccess = function () {
    return navigator.requestMIDIAccess()
  }

  const mkMidiDevices = function (devices) {
    return function (mk) {
      return function () {
        const res = [];
        for (let device of devices.entries()) {
          const portID = device[0];
          const dev = device[1];
          res.push(mk(portID)(dev.manufacturer)(dev.name))
        }
        return res;
      }
    }
  }

  exports.midiInputDevices_ = function (midiAccess) {
    return mkMidiDevices(midiAccess.inputs)
  }

  exports.getData_ = function (nothing) {
    return function (just) {
      return function (e) {
        return function () {
          return e.data ? just(e.data) : nothing;
        };
      };
    };
  };

  exports.getTimeStamp_ = function (nothing) {
    return function (just) {
      return function (e) {
        return function () {
          return e.timeStamp ? just(e.timeStamp) : nothing;
        };
      };
    };
  };

  exports.toTargetMap = function (midiAccess) {
    return function () {
      var o = {};
      var a = Array.from(midiAccess.inputs);
      for (var i = 0; i < a.length; i++) {
        o[a[i][0]] = a[i][1];
      }
      return o;
    };
  };
  exports.toMIDIEvent_ = function (NoteOff) {
    return function (NoteOn) {
      return function (Polytouch) {
        return function (ControlChange) {
          return function (ProgramChange) {
            return function (Aftertouch) {
              return function (Pitchwheel) {
                return function (Nothing) {
                  return function (Just) {
                    return function (a) {
                      return function () {
                        return a[0] >= 128 && a[0] <= 143
                          ? Just(NoteOff(a[0] - 128)(a[1])(a[2]))
                          : a[0] >= 144 && a[0] <= 159
                          ? Just(NoteOn(a[0] - 144)(a[1])(a[2]))
                          : a[0] >= 160 && a[0] <= 175
                          ? Just(Polytouch(a[0] - 160)(a[1])(a[2]))
                          : a[0] >= 176 && a[0] <= 191
                          ? Just(ControlChange(a[0] - 176)(a[1])(a[2]))
                          : a[0] >= 192 && a[0] <= 207
                          ? Just(ProgramChange(a[0] - 192)(a[1]))
                          : a[0] >= 208 && a[0] <= 223
                          ? Just(Aftertouch(a[0] - 208)(a[1]))
                          : a[0] >= 224 && a[0] <= 239
                          ? Just(Pitchwheel(a[0] - 224)(a[1]))
                          : Nothing;
                      };
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
})(PS["FRP.Event.MIDI"] = PS["FRP.Event.MIDI"] || {});
(function(exports) {
  "use strict";

  exports._copyST = function (m) {
    return function () {
      var r = {};
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  };

  exports.empty = {};

  exports.runST = function (f) {
    return f();
  };

  exports._foldM = function (bind) {
    return function (f) {
      return function (mz) {
        return function (m) {
          var acc = mz;
          function g(k) {
            return function (z) {
              return f(z)(k)(m[k]);
            };
          }
          for (var k in m) {
            if (hasOwnProperty.call(m, k)) {
              acc = bind(acc)(g(k));
            }
          }
          return acc;
        };
      };
    };
  };

  exports.all = function (f) {
    return function (m) {
      for (var k in m) {
        if (hasOwnProperty.call(m, k) && !f(k)(m[k])) return false;
      }
      return true;
    };
  };

  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function toArrayWithKey(f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }

  exports.toArrayWithKey = toArrayWithKey;

  exports.keys = Object.keys || toArrayWithKey(function (k) {
    return function () { return k; };
  });
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});
(function(exports) {
  "use strict";

  exports["new"] = function () {
    return {};
  };

  exports.poke = function (k) {
    return function (v) {
      return function (m) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };
})(PS["Foreign.Object.ST"] = PS["Foreign.Object.ST"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Foreign.Object.ST"] = $PS["Foreign.Object.ST"] || {};
  var exports = $PS["Foreign.Object.ST"];
  var $foreign = $PS["Foreign.Object.ST"];
  exports["new"] = $foreign["new"];
  exports["poke"] = $foreign.poke;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Foreign.Object"] = $PS["Foreign.Object"] || {};
  var exports = $PS["Foreign.Object"];
  var $foreign = $PS["Foreign.Object"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_ST_Internal = $PS["Control.Monad.ST.Internal"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function_Uncurried = $PS["Data.Function.Uncurried"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Foreign_Object_ST = $PS["Foreign.Object.ST"];        
  var values = $foreign.toArrayWithKey(function (v) {
      return function (v1) {
          return v1;
      };
  });
  var toUnfoldable = function (dictUnfoldable) {
      var $36 = Data_Array.toUnfoldable(dictUnfoldable);
      var $37 = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);
      return function ($38) {
          return $36($37($38));
      };
  };
  var toAscUnfoldable = function (dictUnfoldable) {
      var $39 = Data_Array.toUnfoldable(dictUnfoldable);
      var $40 = Data_Array.sortWith(Data_Ord.ordString)(Data_Tuple.fst);
      var $41 = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);
      return function ($42) {
          return $39($40($41($42)));
      };
  };
  var toAscArray = toAscUnfoldable(Data_Unfoldable.unfoldableArray);
  var toArray = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);
  var thawST = $foreign["_copyST"];
  var singleton = function (k) {
      return function (v) {
          return $foreign.runST(Control_Bind.bindFlipped(Control_Monad_ST_Internal.bindST)(Foreign_Object_ST.poke(k)(v))(Foreign_Object_ST["new"]));
      };
  };
  var showObject = function (dictShow) {
      return {
          show: function (m) {
              return "(fromFoldable " + (Data_Show.show(Data_Show.showArray(Data_Tuple.showTuple(Data_Show.showString)(dictShow)))(toArray(m)) + ")");
          }
      };
  };
  var mutate = function (f) {
      return function (m) {
          return $foreign.runST(function __do() {
              var s = thawST(m)();
              f(s)();
              return s;
          });
      };
  };
  var lookup = Data_Function_Uncurried.runFn4($foreign["_lookup"])(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var isSubmap = function (dictEq) {
      return function (m1) {
          return function (m2) {
              var f = function (k) {
                  return function (v) {
                      return $foreign["_lookup"](false, Data_Eq.eq(dictEq)(v), k, m2);
                  };
              };
              return $foreign.all(f)(m1);
          };
      };
  }; 
  var insert = function (k) {
      return function (v) {
          return mutate(Foreign_Object_ST.poke(k)(v));
      };
  };
  var fromFoldable = function (dictFoldable) {
      return function (l) {
          return $foreign.runST(function __do() {
              var s = Foreign_Object_ST["new"]();
              Control_Monad_ST_Internal.foreach(Data_Array.fromFoldable(dictFoldable)(l))(function (v) {
                  return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Foreign_Object_ST.poke(v.value0)(v.value1)(s));
              })();
              return s;
          });
      };
  };
  var foldM = function (dictMonad) {
      return function (f) {
          return function (z) {
              return $foreign["_foldM"](Control_Bind.bind(dictMonad.Bind1()))(f)(Control_Applicative.pure(dictMonad.Applicative0())(z));
          };
      };
  };
  var unionWith = function (f) {
      return function (m1) {
          return function (m2) {
              return mutate(function (s1) {
                  return foldM(Control_Monad_ST_Internal.monadST)(function (s2) {
                      return function (k) {
                          return function (v1) {
                              return Foreign_Object_ST.poke(k)($foreign["_lookup"](v1, function (v2) {
                                  return f(v1)(v2);
                              }, k, m2))(s2);
                          };
                      };
                  })(s1)(m1);
              })(m2);
          };
      };
  };
  var semigroupObject = function (dictSemigroup) {
      return {
          append: unionWith(Data_Semigroup.append(dictSemigroup))
      };
  };
  var monoidObject = function (dictSemigroup) {
      return {
          mempty: $foreign.empty,
          Semigroup0: function () {
              return semigroupObject(dictSemigroup);
          }
      };
  };
  var eqObject = function (dictEq) {
      return {
          eq: function (m1) {
              return function (m2) {
                  return isSubmap(dictEq)(m1)(m2) && isSubmap(dictEq)(m2)(m1);
              };
          }
      };
  };
  var ordObject = function (dictOrd) {
      return {
          compare: function (m1) {
              return function (m2) {
                  return Data_Ord.compare(Data_Ord.ordArray(Data_Tuple.ordTuple(Data_Ord.ordString)(dictOrd)))(toAscArray(m1))(toAscArray(m2));
              };
          },
          Eq0: function () {
              return eqObject(dictOrd.Eq0());
          }
      };
  };
  exports["singleton"] = singleton;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["toUnfoldable"] = toUnfoldable;
  exports["fromFoldable"] = fromFoldable;
  exports["values"] = values;
  exports["eqObject"] = eqObject;
  exports["ordObject"] = ordObject;
  exports["showObject"] = showObject;
  exports["monoidObject"] = monoidObject;
  exports["empty"] = $foreign.empty;
  exports["keys"] = $foreign.keys;
})(PS);
(function(exports) {
  "use strict";

  exports.eventListener = function (fn) {
    return function () {
      return function (event) {
        return fn(event)();
      };
    };
  };

  exports.addEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            return target.addEventListener(type, listener, useCapture);
          };
        };
      };
    };
  };

  exports.removeEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            return target.removeEventListener(type, listener, useCapture);
          };
        };
      };
    };
  };
})(PS["Web.Event.EventTarget"] = PS["Web.Event.EventTarget"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Web.Event.EventTarget"] = $PS["Web.Event.EventTarget"] || {};
  var exports = $PS["Web.Event.EventTarget"];
  var $foreign = $PS["Web.Event.EventTarget"];
  exports["eventListener"] = $foreign.eventListener;
  exports["addEventListener"] = $foreign.addEventListener;
  exports["removeEventListener"] = $foreign.removeEventListener;
})(PS);
(function(exports) {
  "use strict";

  exports._unsafeReadProtoTagged = function (nothing, just, name, value) {
    if (typeof window !== "undefined") {
      var ty = window[name];
      if (ty != null && value instanceof ty) {
        return just(value);
      }
    }
    var obj = value;
    while (obj != null) {
      var proto = Object.getPrototypeOf(obj);
      var constructorName = proto.constructor.name;
      if (constructorName === name) {
        return just(value);
      } else if (constructorName === "Object") {
        return nothing;
      }
      obj = proto;
    }
    return nothing;
  };
})(PS["Web.Internal.FFI"] = PS["Web.Internal.FFI"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Web.Internal.FFI"] = $PS["Web.Internal.FFI"] || {};
  var exports = $PS["Web.Internal.FFI"];
  var $foreign = $PS["Web.Internal.FFI"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var unsafeReadProtoTagged = function (name) {
      return function (value) {
          return $foreign["_unsafeReadProtoTagged"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, name, value);
      };
  };
  exports["unsafeReadProtoTagged"] = unsafeReadProtoTagged;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["FRP.Event.MIDI"] = $PS["FRP.Event.MIDI"] || {};
  var exports = $PS["FRP.Event.MIDI"];
  var $foreign = $PS["FRP.Event.MIDI"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var FRP_Event = $PS["FRP.Event"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
  var Web_Internal_FFI = $PS["Web.Internal.FFI"];                
  var NoteOff = (function () {
      function NoteOff(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      NoteOff.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new NoteOff(value0, value1, value2);
              };
          };
      };
      return NoteOff;
  })();
  var NoteOn = (function () {
      function NoteOn(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      NoteOn.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new NoteOn(value0, value1, value2);
              };
          };
      };
      return NoteOn;
  })();
  var Polytouch = (function () {
      function Polytouch(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Polytouch.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Polytouch(value0, value1, value2);
              };
          };
      };
      return Polytouch;
  })();
  var ControlChange = (function () {
      function ControlChange(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      ControlChange.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new ControlChange(value0, value1, value2);
              };
          };
      };
      return ControlChange;
  })();
  var ProgramChange = (function () {
      function ProgramChange(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ProgramChange.create = function (value0) {
          return function (value1) {
              return new ProgramChange(value0, value1);
          };
      };
      return ProgramChange;
  })();
  var Aftertouch = (function () {
      function Aftertouch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Aftertouch.create = function (value0) {
          return function (value1) {
              return new Aftertouch(value0, value1);
          };
      };
      return Aftertouch;
  })();
  var Pitchwheel = (function () {
      function Pitchwheel(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Pitchwheel.create = function (value0) {
          return function (value1) {
              return new Pitchwheel(value0, value1);
          };
      };
      return Pitchwheel;
  })();
  var toMIDIEvent = $foreign.toMIDIEvent_(NoteOff.create)(NoteOn.create)(Polytouch.create)(ControlChange.create)(ProgramChange.create)(Aftertouch.create)(Pitchwheel.create)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var mkMIDIDevice = function (portID) {
      return function (manufacturer) {
          return function (name) {
              return {
                  portID: portID,
                  manufacturer: manufacturer,
                  name: name
              };
          };
      };
  };
  var midiInputDevices = function (midiAccess_) {
      return Data_Functor.map(Effect.functorEffect)(Data_List.fromFoldable(Data_Foldable.foldableArray))($foreign.midiInputDevices_(midiAccess_)(mkMIDIDevice));
  };
  var getTimeStamp = $foreign.getTimeStamp_(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var getData = $foreign.getData_(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("MIDIMessageEvent");
  var midi = function (midiAccess_) {
      return FRP_Event.makeEvent(function (push) {
          return function __do() {
              var targetMap = Control_Bind.bind(Effect.bindEffect)($foreign.toTargetMap(midiAccess_))((function () {
                  var $8 = Control_Applicative.pure(Effect.applicativeEffect);
                  var $9 = Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_List_Types.foldableList);
                  var $10 = Foreign_Object.toUnfoldable(Data_List_Types.unfoldableList);
                  return function ($11) {
                      return $8($9($10($11)));
                  };
              })())();
              var makeListener = function (v) {
                  return Web_Event_EventTarget.eventListener(function (e) {
                      return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function (me) {
                          return function __do() {
                              var data__ = getData(me)();
                              var timeStamp__ = getTimeStamp(me)();
                              var midiEvent__ = Data_Maybe.maybe(Control_Applicative.pure(Effect.applicativeEffect)(Data_Maybe.Nothing.value))(toMIDIEvent)(data__)();
                              var toAdd_ = Control_Bind.bind(Data_Maybe.bindMaybe)(timeStamp__)(function (timeStamp_) {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(midiEvent__)(function (midiEvent_) {
                                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                                          timeStamp: timeStamp_,
                                          event: midiEvent_
                                      });
                                  });
                              });
                              if (toAdd_ instanceof Data_Maybe.Nothing) {
                                  return Data_Unit.unit;
                              };
                              if (toAdd_ instanceof Data_Maybe.Just) {
                                  return push(toAdd_.value0)();
                              };
                              throw new Error("Failed pattern match at FRP.Event.MIDI (line 158, column 17 - line 160, column 43): " + [ toAdd_.constructor.name ]);
                          };
                      })(fromEvent(e));
                  });
              };
              var listeners = Data_Traversable.sequence(Data_Map_Internal.traversableMap)(Effect.applicativeEffect)(Data_Map_Internal.mapMaybeWithKey(Data_Ord.ordString)(function (k) {
                  return function (v) {
                      return new Data_Maybe.Just(function __do() {
                          var listener = makeListener(k)();
                          Web_Event_EventTarget.addEventListener(Data_Newtype.wrap()("midimessage"))(listener)(false)(v)();
                          return new Data_Tuple.Tuple(listener, v);
                      });
                  };
              })(targetMap))();
              var dispose = function __do() {
                  Data_Traversable.sequence(Data_Map_Internal.traversableMap)(Effect.applicativeEffect)(Data_Map_Internal.mapMaybeWithKey(Data_Ord.ordString)(function (v) {
                      return function (v1) {
                          return new Data_Maybe.Just(Web_Event_EventTarget.removeEventListener(Data_Newtype.wrap()("midimessage"))(v1.value0)(false)(v1.value1));
                      };
                  })(listeners))();
                  return Data_Unit.unit;
              };
              return dispose;
          };
      });
  };
  exports["NoteOff"] = NoteOff;
  exports["NoteOn"] = NoteOn;
  exports["midi"] = midi;
  exports["midiInputDevices"] = midiInputDevices;
  exports["midiAccess"] = $foreign.midiAccess;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.Data.OrdBox"] = $PS["Halogen.Data.OrdBox"] || {};
  var exports = $PS["Halogen.Data.OrdBox"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ord = $PS["Data.Ord"];                
  var OrdBox = (function () {
      function OrdBox(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      OrdBox.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new OrdBox(value0, value1, value2);
              };
          };
      };
      return OrdBox;
  })();
  var mkOrdBox = function (dictOrd) {
      return OrdBox.create(Data_Eq.eq(dictOrd.Eq0()))(Data_Ord.compare(dictOrd));
  };
  var eqOrdBox = {
      eq: function (v) {
          return function (v1) {
              return v.value0(v.value2)(v1.value2);
          };
      }
  };
  var ordOrdBox = {
      compare: function (v) {
          return function (v1) {
              return v.value1(v.value2)(v1.value2);
          };
      },
      Eq0: function () {
          return eqOrdBox;
      }
  };
  exports["mkOrdBox"] = mkOrdBox;
  exports["ordOrdBox"] = ordOrdBox;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.Data.Slot"] = $PS["Halogen.Data.Slot"] || {};
  var exports = $PS["Halogen.Data.Slot"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Halogen_Data_OrdBox = $PS["Halogen.Data.OrdBox"];
  var pop = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (sym) {
                  return function (key) {
                      return function (v) {
                          return Data_Map_Internal.pop(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(v);
                      };
                  };
              };
          };
      };
  };
  var lookup = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (sym) {
                  return function (key) {
                      return function (v) {
                          return Data_Map_Internal.lookup(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(v);
                      };
                  };
              };
          };
      };
  };
  var insert = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (sym) {
                  return function (key) {
                      return function (val) {
                          return function (v) {
                              return Data_Map_Internal.insert(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(val)(v);
                          };
                      };
                  };
              };
          };
      };
  };
  var foreachSlot = function (dictApplicative) {
      return function (v) {
          return function (k) {
              return Data_Foldable.traverse_(dictApplicative)(Data_Map_Internal.foldableMap)(function ($37) {
                  return k($37);
              })(v);
          };
      };
  };
  var empty = Data_Map_Internal.empty;
  exports["empty"] = empty;
  exports["lookup"] = lookup;
  exports["insert"] = insert;
  exports["pop"] = pop;
  exports["foreachSlot"] = foreachSlot;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.Aff.Driver.State"] = $PS["Halogen.Aff.Driver.State"] || {};
  var exports = $PS["Halogen.Aff.Driver.State"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Data_Slot = $PS["Halogen.Data.Slot"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var unRenderStateX = Unsafe_Coerce.unsafeCoerce;
  var unDriverStateX = Unsafe_Coerce.unsafeCoerce;
  var renderStateX_ = function (dictApplicative) {
      return function (f) {
          return unDriverStateX(function (st) {
              return Data_Foldable.traverse_(dictApplicative)(Data_Foldable.foldableMaybe)(f)(st.rendering);
          });
      };
  };
  var mkRenderStateX = Unsafe_Coerce.unsafeCoerce;
  var renderStateX = function (dictFunctor) {
      return function (f) {
          return unDriverStateX(function (st) {
              return mkRenderStateX(f(st.rendering));
          });
      };
  };
  var mkDriverStateXRef = Unsafe_Coerce.unsafeCoerce;
  var mapDriverState = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var initDriverState = function (component) {
      return function (input) {
          return function (handler) {
              return function (lchs) {
                  return function __do() {
                      var selfRef = Effect_Ref["new"]({})();
                      var childrenIn = Effect_Ref["new"](Halogen_Data_Slot.empty)();
                      var childrenOut = Effect_Ref["new"](Halogen_Data_Slot.empty)();
                      var handlerRef = Effect_Ref["new"](handler)();
                      var pendingQueries = Effect_Ref["new"](new Data_Maybe.Just(Data_List_Types.Nil.value))();
                      var pendingOuts = Effect_Ref["new"](new Data_Maybe.Just(Data_List_Types.Nil.value))();
                      var pendingHandlers = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                      var fresh = Effect_Ref["new"](1)();
                      var subscriptions = Effect_Ref["new"](new Data_Maybe.Just(Data_Map_Internal.empty))();
                      var forks = Effect_Ref["new"](Data_Map_Internal.empty)();
                      var ds = {
                          component: component,
                          state: component.initialState(input),
                          refs: Data_Map_Internal.empty,
                          children: Halogen_Data_Slot.empty,
                          childrenIn: childrenIn,
                          childrenOut: childrenOut,
                          selfRef: selfRef,
                          handlerRef: handlerRef,
                          pendingQueries: pendingQueries,
                          pendingOuts: pendingOuts,
                          pendingHandlers: pendingHandlers,
                          rendering: Data_Maybe.Nothing.value,
                          fresh: fresh,
                          subscriptions: subscriptions,
                          forks: forks,
                          lifecycleHandlers: lchs
                      };
                      Effect_Ref.write(ds)(selfRef)();
                      return mkDriverStateXRef(selfRef);
                  };
              };
          };
      };
  };
  exports["mapDriverState"] = mapDriverState;
  exports["unDriverStateX"] = unDriverStateX;
  exports["renderStateX"] = renderStateX;
  exports["renderStateX_"] = renderStateX_;
  exports["unRenderStateX"] = unRenderStateX;
  exports["initDriverState"] = initDriverState;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.Query.ChildQuery"] = $PS["Halogen.Query.ChildQuery"] || {};
  var exports = $PS["Halogen.Query.ChildQuery"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var unChildQueryBox = Unsafe_Coerce.unsafeCoerce;
  exports["unChildQueryBox"] = unChildQueryBox;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.Query.HalogenM"] = $PS["Halogen.Query.HalogenM"] || {};
  var exports = $PS["Halogen.Query.HalogenM"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Free = $PS["Control.Monad.Free"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];                                
  var SubscriptionId = function (x) {
      return x;
  };
  var ForkId = function (x) {
      return x;
  };
  var State = (function () {
      function State(value0) {
          this.value0 = value0;
      };
      State.create = function (value0) {
          return new State(value0);
      };
      return State;
  })();
  var Subscribe = (function () {
      function Subscribe(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Subscribe.create = function (value0) {
          return function (value1) {
              return new Subscribe(value0, value1);
          };
      };
      return Subscribe;
  })();
  var Unsubscribe = (function () {
      function Unsubscribe(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Unsubscribe.create = function (value0) {
          return function (value1) {
              return new Unsubscribe(value0, value1);
          };
      };
      return Unsubscribe;
  })();
  var Lift = (function () {
      function Lift(value0) {
          this.value0 = value0;
      };
      Lift.create = function (value0) {
          return new Lift(value0);
      };
      return Lift;
  })();
  var ChildQuery = (function () {
      function ChildQuery(value0) {
          this.value0 = value0;
      };
      ChildQuery.create = function (value0) {
          return new ChildQuery(value0);
      };
      return ChildQuery;
  })();
  var Raise = (function () {
      function Raise(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Raise.create = function (value0) {
          return function (value1) {
              return new Raise(value0, value1);
          };
      };
      return Raise;
  })();
  var Par = (function () {
      function Par(value0) {
          this.value0 = value0;
      };
      Par.create = function (value0) {
          return new Par(value0);
      };
      return Par;
  })();
  var Fork = (function () {
      function Fork(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Fork.create = function (value0) {
          return function (value1) {
              return new Fork(value0, value1);
          };
      };
      return Fork;
  })();
  var Kill = (function () {
      function Kill(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Kill.create = function (value0) {
          return function (value1) {
              return new Kill(value0, value1);
          };
      };
      return Kill;
  })();
  var GetRef = (function () {
      function GetRef(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      GetRef.create = function (value0) {
          return function (value1) {
              return new GetRef(value0, value1);
          };
      };
      return GetRef;
  })();
  var HalogenM = function (x) {
      return x;
  };
  var unsubscribe = function (sid) {
      return HalogenM(Control_Monad_Free.liftF(new Unsubscribe(sid, Data_Unit.unit)));
  };
  var subscribe = function (es) {
      return HalogenM(Control_Monad_Free.liftF(new Subscribe(function (v) {
          return es;
      }, Control_Category.identity(Control_Category.categoryFn))));
  };
  var ordSubscriptionId = Data_Ord.ordInt;
  var ordForkId = Data_Ord.ordInt;
  var monadHalogenM = Control_Monad_Free.freeMonad;
  var monadStateHalogenM = {
      state: function ($136) {
          return HalogenM(Control_Monad_Free.liftF(State.create($136)));
      },
      Monad0: function () {
          return monadHalogenM;
      }
  };
  var monadThrowHalogenM = function (dictMonadThrow) {
      return {
          throwError: (function () {
              var $139 = Control_Monad_Error_Class.throwError(dictMonadThrow);
              return function ($140) {
                  return HalogenM(Control_Monad_Free.liftF(Lift.create($139($140))));
              };
          })(),
          Monad0: function () {
              return monadHalogenM;
          }
      };
  };
  var monadEffectHalogenM = function (dictMonadEffect) {
      return {
          liftEffect: (function () {
              var $141 = Effect_Class.liftEffect(dictMonadEffect);
              return function ($142) {
                  return HalogenM(Control_Monad_Free.liftF(Lift.create($141($142))));
              };
          })(),
          Monad0: function () {
              return monadHalogenM;
          }
      };
  };
  var monadAffHalogenM = function (dictMonadAff) {
      return {
          liftAff: (function () {
              var $143 = Effect_Aff_Class.liftAff(dictMonadAff);
              return function ($144) {
                  return HalogenM(Control_Monad_Free.liftF(Lift.create($143($144))));
              };
          })(),
          MonadEffect0: function () {
              return monadEffectHalogenM(dictMonadAff.MonadEffect0());
          }
      };
  };
  var functorHalogenM = Control_Monad_Free.freeFunctor;
  var bindHalogenM = Control_Monad_Free.freeBind;           
  var applicativeHalogenM = Control_Monad_Free.freeApplicative;
  exports["State"] = State;
  exports["Subscribe"] = Subscribe;
  exports["Unsubscribe"] = Unsubscribe;
  exports["Lift"] = Lift;
  exports["ChildQuery"] = ChildQuery;
  exports["Raise"] = Raise;
  exports["Par"] = Par;
  exports["Fork"] = Fork;
  exports["Kill"] = Kill;
  exports["GetRef"] = GetRef;
  exports["SubscriptionId"] = SubscriptionId;
  exports["subscribe"] = subscribe;
  exports["unsubscribe"] = unsubscribe;
  exports["ForkId"] = ForkId;
  exports["functorHalogenM"] = functorHalogenM;
  exports["applicativeHalogenM"] = applicativeHalogenM;
  exports["bindHalogenM"] = bindHalogenM;
  exports["monadEffectHalogenM"] = monadEffectHalogenM;
  exports["monadAffHalogenM"] = monadAffHalogenM;
  exports["monadStateHalogenM"] = monadStateHalogenM;
  exports["monadThrowHalogenM"] = monadThrowHalogenM;
  exports["ordSubscriptionId"] = ordSubscriptionId;
  exports["ordForkId"] = ordForkId;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.Query.HalogenQ"] = $PS["Halogen.Query.HalogenQ"] || {};
  var exports = $PS["Halogen.Query.HalogenQ"];           
  var Initialize = (function () {
      function Initialize(value0) {
          this.value0 = value0;
      };
      Initialize.create = function (value0) {
          return new Initialize(value0);
      };
      return Initialize;
  })();
  var Finalize = (function () {
      function Finalize(value0) {
          this.value0 = value0;
      };
      Finalize.create = function (value0) {
          return new Finalize(value0);
      };
      return Finalize;
  })();
  var Receive = (function () {
      function Receive(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Receive.create = function (value0) {
          return function (value1) {
              return new Receive(value0, value1);
          };
      };
      return Receive;
  })();
  var Action = (function () {
      function Action(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Action.create = function (value0) {
          return function (value1) {
              return new Action(value0, value1);
          };
      };
      return Action;
  })();
  var Query = (function () {
      function Query(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Query.create = function (value0) {
          return function (value1) {
              return new Query(value0, value1);
          };
      };
      return Query;
  })();
  exports["Initialize"] = Initialize;
  exports["Finalize"] = Finalize;
  exports["Receive"] = Receive;
  exports["Action"] = Action;
  exports["Query"] = Query;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.Query.Input"] = $PS["Halogen.Query.Input"] || {};
  var exports = $PS["Halogen.Query.Input"];
  var RefUpdate = (function () {
      function RefUpdate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RefUpdate.create = function (value0) {
          return function (value1) {
              return new RefUpdate(value0, value1);
          };
      };
      return RefUpdate;
  })();
  var Action = (function () {
      function Action(value0) {
          this.value0 = value0;
      };
      Action.create = function (value0) {
          return new Action(value0);
      };
      return Action;
  })();
  exports["RefUpdate"] = RefUpdate;
  exports["Action"] = Action;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.Subscription"] = $PS["Halogen.Subscription"] || {};
  var exports = $PS["Halogen.Subscription"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Unsafe_Reference = $PS["Unsafe.Reference"];
  var unsubscribe = function (v) {
      return v;
  };
  var subscribe = function (v) {
      return function (k) {
          return v((function () {
              var $55 = Data_Functor["void"](Effect.functorEffect);
              return function ($56) {
                  return $55(k($56));
              };
          })());
      };
  };                                                                               
  var notify = function (v) {
      return function (a) {
          return v(a);
      };
  };
  var create = function __do() {
      var subscribers = Effect_Ref["new"]([  ])();
      return {
          emitter: function (k) {
              return function __do() {
                  Effect_Ref.modify_(function (v) {
                      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)([ k ]);
                  })(subscribers)();
                  return Effect_Ref.modify_(Data_Array.deleteBy(Unsafe_Reference.unsafeRefEq)(k))(subscribers);
              };
          },
          listener: function (a) {
              return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(subscribers))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableArray)(function (k) {
                  return k(a);
              }));
          }
      };
  };
  exports["create"] = create;
  exports["notify"] = notify;
  exports["subscribe"] = subscribe;
  exports["unsubscribe"] = unsubscribe;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.Aff.Driver.Eval"] = $PS["Halogen.Aff.Driver.Eval"] || {};
  var exports = $PS["Halogen.Aff.Driver.Eval"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Applicative_Free = $PS["Control.Applicative.Free"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Fork_Class = $PS["Control.Monad.Fork.Class"];
  var Control_Monad_Free = $PS["Control.Monad.Free"];
  var Control_Parallel = $PS["Control.Parallel"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Coyoneda = $PS["Data.Coyoneda"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Aff_Driver_State = $PS["Halogen.Aff.Driver.State"];
  var Halogen_Query_ChildQuery = $PS["Halogen.Query.ChildQuery"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_Query_HalogenQ = $PS["Halogen.Query.HalogenQ"];
  var Halogen_Query_Input = $PS["Halogen.Query.Input"];
  var Halogen_Subscription = $PS["Halogen.Subscription"];
  var Unsafe_Reference = $PS["Unsafe.Reference"];                
  var unsubscribe = function (sid) {
      return function (ref) {
          return function __do() {
              var v = Effect_Ref.read(ref)();
              var subs = Effect_Ref.read(v.subscriptions)();
              return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Halogen_Subscription.unsubscribe)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Map_Internal.lookup(Halogen_Query_HalogenM.ordSubscriptionId)(sid))(subs))();
          };
      };
  };
  var queueOrRun = function (ref) {
      return function (au) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return au;
              };
              if (v instanceof Data_Maybe.Just) {
                  return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write(new Data_Maybe.Just(new Data_List_Types.Cons(au, v.value0)))(ref));
              };
              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 182, column 33 - line 184, column 57): " + [ v.constructor.name ]);
          });
      };
  };
  var handleLifecycle = function (lchs) {
      return function (f) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
              initializers: Data_List_Types.Nil.value,
              finalizers: Data_List_Types.Nil.value
          })(lchs)))(function () {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(f))(function (result) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(lchs)))(function (v) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(v.finalizers))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(v.initializers))(function () {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(result);
                          });
                      });
                  });
              });
          });
      };
  };
  var handleAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));
  var fresh = function (f) {
      return function (ref) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
              return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["modify'"](function (i) {
                  return {
                      state: i + 1 | 0,
                      value: f(i)
                  };
              })(v.fresh));
          });
      };
  };
  var evalQ = function (render) {
      return function (ref) {
          return function (q) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
                  return evalM(render)(ref)(v["component"]["eval"](new Halogen_Query_HalogenQ.Query(Data_Functor.map(Data_Coyoneda.functorCoyoneda)(Data_Maybe.Just.create)(Data_Coyoneda.liftCoyoneda(q)), Data_Function["const"](Data_Maybe.Nothing.value))));
              });
          };
      };
  };
  var evalM = function (render) {
      return function (initRef) {
          return function (v) {
              var evalChildQuery = function (ref) {
                  return function (cqb) {
                      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
                          return Halogen_Query_ChildQuery.unChildQueryBox(function (v2) {
                              var evalChild = function (v3) {
                                  return Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v3)))(function (dsx) {
                                      return Halogen_Aff_Driver_State.unDriverStateX(function (ds) {
                                          return evalQ(render)(ds.selfRef)(v2.value1);
                                      })(dsx);
                                  }));
                              };
                              return Data_Functor.map(Effect_Aff.functorAff)(v2.value2)(Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(v2.value0(Effect_Aff.applicativeParAff)(evalChild)(v1.children)));
                          })(cqb);
                      });
                  };
              };
              var go = function (ref) {
                  return function (v1) {
                      if (v1 instanceof Halogen_Query_HalogenM.State) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                              var v3 = v1.value0(v2.state);
                              if (Unsafe_Reference.unsafeRefEq(v2.state)(v3.value1)) {
                                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(v3.value0);
                              };
                              if (Data_Boolean.otherwise) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
                                      component: v2.component,
                                      state: v3.value1,
                                      refs: v2.refs,
                                      children: v2.children,
                                      childrenIn: v2.childrenIn,
                                      childrenOut: v2.childrenOut,
                                      selfRef: v2.selfRef,
                                      handlerRef: v2.handlerRef,
                                      pendingQueries: v2.pendingQueries,
                                      pendingOuts: v2.pendingOuts,
                                      pendingHandlers: v2.pendingHandlers,
                                      rendering: v2.rendering,
                                      fresh: v2.fresh,
                                      subscriptions: v2.subscriptions,
                                      forks: v2.forks,
                                      lifecycleHandlers: v2.lifecycleHandlers
                                  })(ref)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(handleLifecycle(v2.lifecycleHandlers)(render(v2.lifecycleHandlers)(ref)))(function () {
                                          return Control_Applicative.pure(Effect_Aff.applicativeAff)(v3.value0);
                                      });
                                  });
                              };
                              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 86, column 7 - line 92, column 21): " + [ v3.constructor.name ]);
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Subscribe) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(fresh(Halogen_Query_HalogenM.SubscriptionId)(ref))(function (sid) {
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Halogen_Subscription.subscribe(v1.value0(sid))(function (act) {
                                  return handleAff(evalF(render)(ref)(new Halogen_Query_Input.Action(act)));
                              })))(function (finalize) {
                                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.insert(Halogen_Query_HalogenM.ordSubscriptionId)(sid)(finalize)))(v2.subscriptions)))(function () {
                                          return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(sid));
                                      });
                                  });
                              });
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Unsubscribe) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(unsubscribe(v1.value0)(ref)))(function () {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Lift) {
                          return v1.value0;
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.ChildQuery) {
                          return evalChildQuery(ref)(v1.value0);
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Raise) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v2.handlerRef)))(function (handler) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(queueOrRun(v2.pendingOuts)(handler(v1.value0)))(function () {
                                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                                  });
                              });
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Par) {
                          return Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(Control_Applicative_Free.retractFreeAp(Effect_Aff.applicativeParAff)(Control_Applicative_Free.hoistFreeAp((function () {
                              var $78 = Control_Parallel_Class.parallel(Effect_Aff.parallelAff);
                              var $79 = evalM(render)(ref);
                              return function ($80) {
                                  return $78($79($80));
                              };
                          })())(v1.value0)));
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Fork) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(fresh(Halogen_Query_HalogenM.ForkId)(ref))(function (fid) {
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](false)))(function (doneRef) {
                                      return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Effect_Aff["finally"](Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                          Effect_Ref.modify_(Data_Map_Internal["delete"](Halogen_Query_HalogenM.ordForkId)(fid))(v2.forks)();
                                          return Effect_Ref.write(true)(doneRef)();
                                      }))(evalM(render)(ref)(v1.value0))))(function (fiber) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Monad.unlessM(Effect.monadEffect)(Effect_Ref.read(doneRef))(Effect_Ref.modify_(Data_Map_Internal.insert(Halogen_Query_HalogenM.ordForkId)(fid)(fiber))(v2.forks))))(function () {
                                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(fid));
                                          });
                                      });
                                  });
                              });
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Kill) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v2.forks)))(function (forkMap) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(Effect_Aff.killFiber(Effect_Exception.error("Cancelled")))(Data_Map_Internal.lookup(Halogen_Query_HalogenM.ordForkId)(v1.value0)(forkMap)))(function () {
                                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                                  });
                              });
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.GetRef) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(Data_Map_Internal.lookup(Data_Ord.ordString)(v1.value0)(v2.refs)));
                          });
                      };
                      throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 83, column 12 - line 133, column 33): " + [ v1.constructor.name ]);
                  };
              };
              return Control_Monad_Free.foldFree(Effect_Aff.monadRecAff)(go(initRef))(v);
          };
      };
  };
  var evalF = function (render) {
      return function (ref) {
          return function (v) {
              if (v instanceof Halogen_Query_Input.RefUpdate) {
                  return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Function.flip(Effect_Ref.modify_)(ref)(Halogen_Aff_Driver_State.mapDriverState(function (st) {
                      return {
                          component: st.component,
                          state: st.state,
                          refs: Data_Map_Internal.alter(Data_Ord.ordString)(Data_Function["const"](v.value1))(v.value0)(st.refs),
                          children: st.children,
                          childrenIn: st.childrenIn,
                          childrenOut: st.childrenOut,
                          selfRef: st.selfRef,
                          handlerRef: st.handlerRef,
                          pendingQueries: st.pendingQueries,
                          pendingOuts: st.pendingOuts,
                          pendingHandlers: st.pendingHandlers,
                          rendering: st.rendering,
                          fresh: st.fresh,
                          subscriptions: st.subscriptions,
                          forks: st.forks,
                          lifecycleHandlers: st.lifecycleHandlers
                      };
                  })));
              };
              if (v instanceof Halogen_Query_Input.Action) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
                      return evalM(render)(ref)(v1["component"]["eval"](new Halogen_Query_HalogenQ.Action(v.value0, Data_Unit.unit)));
                  });
              };
              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 52, column 20 - line 58, column 62): " + [ v.constructor.name ]);
          };
      };
  };
  exports["evalF"] = evalF;
  exports["evalQ"] = evalQ;
  exports["evalM"] = evalM;
  exports["handleLifecycle"] = handleLifecycle;
  exports["queueOrRun"] = queueOrRun;
  exports["handleAff"] = handleAff;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.Component"] = $PS["Halogen.Component"] || {};
  var exports = $PS["Halogen.Component"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Coyoneda = $PS["Data.Coyoneda"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Data_Slot = $PS["Halogen.Data.Slot"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_Query_HalogenQ = $PS["Halogen.Query.HalogenQ"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var ComponentSlot = (function () {
      function ComponentSlot(value0) {
          this.value0 = value0;
      };
      ComponentSlot.create = function (value0) {
          return new ComponentSlot(value0);
      };
      return ComponentSlot;
  })();
  var ThunkSlot = (function () {
      function ThunkSlot(value0) {
          this.value0 = value0;
      };
      ThunkSlot.create = function (value0) {
          return new ThunkSlot(value0);
      };
      return ThunkSlot;
  })();
  var unComponentSlot = Unsafe_Coerce.unsafeCoerce;
  var unComponent = Unsafe_Coerce.unsafeCoerce;
  var mkEval = function (args) {
      return function (v) {
          if (v instanceof Halogen_Query_HalogenQ.Initialize) {
              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.initialize))(v.value0);
          };
          if (v instanceof Halogen_Query_HalogenQ.Finalize) {
              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.finalize))(v.value0);
          };
          if (v instanceof Halogen_Query_HalogenQ.Receive) {
              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.receive(v.value0)))(v.value1);
          };
          if (v instanceof Halogen_Query_HalogenQ.Action) {
              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(args.handleAction(v.value0))(v.value1);
          };
          if (v instanceof Halogen_Query_HalogenQ.Query) {
              return Data_Coyoneda.unCoyoneda(function (g) {
                  var $25 = Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Maybe.maybe(v.value1(Data_Unit.unit))(g));
                  return function ($26) {
                      return $25(args.handleQuery($26));
                  };
              })(v.value0);
          };
          throw new Error("Failed pattern match at Halogen.Component (line 182, column 15 - line 192, column 70): " + [ v.constructor.name ]);
      };
  };
  var mkComponentSlot = Unsafe_Coerce.unsafeCoerce;
  var mkComponent = Unsafe_Coerce.unsafeCoerce;
  var defaultEval = {
      handleAction: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)),
      handleQuery: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value)),
      receive: Data_Function["const"](Data_Maybe.Nothing.value),
      initialize: Data_Maybe.Nothing.value,
      finalize: Data_Maybe.Nothing.value
  };
  var componentSlot = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (label) {
                  return function (p) {
                      return function (comp) {
                          return function (input) {
                              return function (output) {
                                  return mkComponentSlot({
                                      get: Halogen_Data_Slot.lookup()(dictIsSymbol)(dictOrd)(label)(p),
                                      pop: Halogen_Data_Slot.pop()(dictIsSymbol)(dictOrd)(label)(p),
                                      set: Halogen_Data_Slot.insert()(dictIsSymbol)(dictOrd)(label)(p),
                                      component: comp,
                                      input: input,
                                      output: output
                                  });
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  exports["mkComponent"] = mkComponent;
  exports["unComponent"] = unComponent;
  exports["mkEval"] = mkEval;
  exports["defaultEval"] = defaultEval;
  exports["ComponentSlot"] = ComponentSlot;
  exports["ThunkSlot"] = ThunkSlot;
  exports["componentSlot"] = componentSlot;
  exports["unComponentSlot"] = unComponentSlot;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.Aff.Driver"] = $PS["Halogen.Aff.Driver"] || {};
  var exports = $PS["Halogen.Aff.Driver"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Fork_Class = $PS["Control.Monad.Fork.Class"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Parallel = $PS["Control.Parallel"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Aff_Driver_Eval = $PS["Halogen.Aff.Driver.Eval"];
  var Halogen_Aff_Driver_State = $PS["Halogen.Aff.Driver.State"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_Data_Slot = $PS["Halogen.Data.Slot"];
  var Halogen_Query_HalogenQ = $PS["Halogen.Query.HalogenQ"];
  var Halogen_Query_Input = $PS["Halogen.Query.Input"];
  var Halogen_Subscription = $PS["Halogen.Subscription"];                
  var newLifecycleHandlers = Effect_Ref["new"]({
      initializers: Data_List_Types.Nil.value,
      finalizers: Data_List_Types.Nil.value
  });
  var handlePending = function (ref) {
      return function __do() {
          var queue = Effect_Ref.read(ref)();
          Effect_Ref.write(Data_Maybe.Nothing.value)(ref)();
          return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(queue)((function () {
              var $28 = Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff));
              return function ($29) {
                  return Halogen_Aff_Driver_Eval.handleAff($28(Data_List.reverse($29)));
              };
          })())();
      };
  };
  var cleanupSubscriptionsAndForks = function (v) {
      return function __do() {
          Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(Halogen_Subscription.unsubscribe)))(Effect_Ref.read(v.subscriptions))();
          Effect_Ref.write(Data_Maybe.Nothing.value)(v.subscriptions)();
          Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)((function () {
              var $30 = Effect_Aff.killFiber(Effect_Exception.error("finalized"));
              return function ($31) {
                  return Halogen_Aff_Driver_Eval.handleAff($30($31));
              };
          })()))(Effect_Ref.read(v.forks))();
          return Effect_Ref.write(Data_Map_Internal.empty)(v.forks)();
      };
  };
  var runUI = function (renderSpec) {
      return function (component) {
          return function (i) {
              var squashChildInitializers = function (lchs) {
                  return function (preInits) {
                      return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                          var parentInitializer = Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](new Halogen_Query_HalogenQ.Initialize(Data_Unit.unit)));
                          return Effect_Ref.modify_(function (handlers) {
                              return {
                                  initializers: new Data_List_Types.Cons(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(Data_List.reverse(handlers.initializers)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(parentInitializer)(function () {
                                          return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                              handlePending(st.pendingQueries)();
                                              return handlePending(st.pendingOuts)();
                                          });
                                      });
                                  }), preInits),
                                  finalizers: handlers.finalizers
                              };
                          })(lchs);
                      });
                  };
              };
              var runComponent = function (lchs) {
                  return function (handler) {
                      return function (j) {
                          return Halogen_Component.unComponent(function (c) {
                              return function __do() {
                                  var lchs$prime = newLifecycleHandlers();
                                  var $$var = Halogen_Aff_Driver_State.initDriverState(c)(j)(handler)(lchs$prime)();
                                  var pre = Effect_Ref.read(lchs)();
                                  Effect_Ref.write({
                                      initializers: Data_List_Types.Nil.value,
                                      finalizers: pre.finalizers
                                  })(lchs)();
                                  Control_Bind.bindFlipped(Effect.bindEffect)(Halogen_Aff_Driver_State.unDriverStateX((function () {
                                      var $32 = render(lchs);
                                      return function ($33) {
                                          return $32((function (v) {
                                              return v.selfRef;
                                          })($33));
                                      };
                                  })()))(Effect_Ref.read($$var))();
                                  Control_Bind.bindFlipped(Effect.bindEffect)(squashChildInitializers(lchs)(pre.initializers))(Effect_Ref.read($$var))();
                                  return $$var;
                              };
                          });
                      };
                  };
              };
              var renderChild = function (lchs) {
                  return function (handler) {
                      return function (childrenInRef) {
                          return function (childrenOutRef) {
                              return Halogen_Component.unComponentSlot(function (slot) {
                                  return function __do() {
                                      var childrenIn = Data_Functor.map(Effect.functorEffect)(slot.pop)(Effect_Ref.read(childrenInRef))();
                                      var $$var = (function () {
                                          if (childrenIn instanceof Data_Maybe.Just) {
                                              Effect_Ref.write(childrenIn.value0.value1)(childrenInRef)();
                                              var dsx = Effect_Ref.read(childrenIn.value0.value0)();
                                              Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                                                  return function __do() {
                                                      Data_Function.flip(Effect_Ref.write)(st.handlerRef)((function () {
                                                          var $34 = Data_Maybe.maybe(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit))(handler);
                                                          return function ($35) {
                                                              return $34(slot.output($35));
                                                          };
                                                      })())();
                                                      return Halogen_Aff_Driver_Eval.handleAff(Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](new Halogen_Query_HalogenQ.Receive(slot.input, Data_Unit.unit))))();
                                                  };
                                              })(dsx)();
                                              return childrenIn.value0.value0;
                                          };
                                          if (childrenIn instanceof Data_Maybe.Nothing) {
                                              return runComponent(lchs)((function () {
                                                  var $36 = Data_Maybe.maybe(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit))(handler);
                                                  return function ($37) {
                                                      return $36(slot.output($37));
                                                  };
                                              })())(slot.input)(slot.component)();
                                          };
                                          throw new Error("Failed pattern match at Halogen.Aff.Driver (line 210, column 14 - line 219, column 98): " + [ childrenIn.constructor.name ]);
                                      })();
                                      var isDuplicate = Data_Functor.map(Effect.functorEffect)(function ($38) {
                                          return Data_Maybe.isJust(slot.get($38));
                                      })(Effect_Ref.read(childrenOutRef))();
                                      Control_Applicative.when(Effect.applicativeEffect)(isDuplicate)(Effect_Console.warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur"))();
                                      Effect_Ref.modify_(slot.set($$var))(childrenOutRef)();
                                      return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read($$var))(Halogen_Aff_Driver_State.renderStateX(Effect.functorEffect)(function (v) {
                                          if (v instanceof Data_Maybe.Nothing) {
                                              return Effect_Exception["throw"]("Halogen internal error: child was not initialized in renderChild");
                                          };
                                          if (v instanceof Data_Maybe.Just) {
                                              return Control_Applicative.pure(Effect.applicativeEffect)(renderSpec.renderChild(v.value0));
                                          };
                                          throw new Error("Failed pattern match at Halogen.Aff.Driver (line 224, column 37 - line 226, column 50): " + [ v.constructor.name ]);
                                      }))();
                                  };
                              });
                          };
                      };
                  };
              };
              var render = function (lchs) {
                  return function ($$var) {
                      return function __do() {
                          var v = Effect_Ref.read($$var)();
                          var shouldProcessHandlers = Data_Functor.map(Effect.functorEffect)(Data_Maybe.isNothing)(Effect_Ref.read(v.pendingHandlers))();
                          Control_Applicative.when(Effect.applicativeEffect)(shouldProcessHandlers)(Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(v.pendingHandlers))();
                          Effect_Ref.write(Halogen_Data_Slot.empty)(v.childrenOut)();
                          Effect_Ref.write(v.children)(v.childrenIn)();
                          var selfRef = Control_Category.identity(Control_Category.categoryFn)(v.selfRef);
                          var pendingQueries = Control_Category.identity(Control_Category.categoryFn)(v.pendingQueries);
                          var pendingHandlers = Control_Category.identity(Control_Category.categoryFn)(v.pendingHandlers);
                          var handler = (function () {
                              var $39 = Halogen_Aff_Driver_Eval.queueOrRun(pendingHandlers);
                              var $40 = Data_Functor["void"](Effect_Aff.functorAff);
                              var $41 = Halogen_Aff_Driver_Eval.evalF(render)(selfRef);
                              return function ($42) {
                                  return $39($40($41($42)));
                              };
                          })();
                          var childHandler = (function () {
                              var $43 = Halogen_Aff_Driver_Eval.queueOrRun(pendingQueries);
                              return function ($44) {
                                  return $43(handler(Halogen_Query_Input.Action.create($44)));
                              };
                          })();
                          var rendering = renderSpec.render(function ($45) {
                              return Halogen_Aff_Driver_Eval.handleAff(handler($45));
                          })(renderChild(lchs)(childHandler)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();
                          var children = Effect_Ref.read(v.childrenOut)();
                          var childrenIn = Effect_Ref.read(v.childrenIn)();
                          Halogen_Data_Slot.foreachSlot(Effect.applicativeEffect)(childrenIn)(function (v1) {
                              return function __do() {
                                  var childDS = Effect_Ref.read(v1)();
                                  Halogen_Aff_Driver_State.renderStateX_(Effect.applicativeEffect)(renderSpec.removeChild)(childDS)();
                                  return finalize(lchs)(childDS)();
                              };
                          })();
                          Data_Function.flip(Effect_Ref.modify_)(v.selfRef)(Halogen_Aff_Driver_State.mapDriverState(function (ds$prime) {
                              return {
                                  component: ds$prime.component,
                                  state: ds$prime.state,
                                  refs: ds$prime.refs,
                                  children: children,
                                  childrenIn: ds$prime.childrenIn,
                                  childrenOut: ds$prime.childrenOut,
                                  selfRef: ds$prime.selfRef,
                                  handlerRef: ds$prime.handlerRef,
                                  pendingQueries: ds$prime.pendingQueries,
                                  pendingOuts: ds$prime.pendingOuts,
                                  pendingHandlers: ds$prime.pendingHandlers,
                                  rendering: new Data_Maybe.Just(rendering),
                                  fresh: ds$prime.fresh,
                                  subscriptions: ds$prime.subscriptions,
                                  forks: ds$prime.forks,
                                  lifecycleHandlers: ds$prime.lifecycleHandlers
                              };
                          }))();
                          return Control_Applicative.when(Effect.applicativeEffect)(shouldProcessHandlers)(Data_Function.flip(Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEffect))(Data_Unit.unit)(function (v1) {
                              return function __do() {
                                  var handlers = Effect_Ref.read(pendingHandlers)();
                                  Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(pendingHandlers)();
                                  Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)((function () {
                                      var $46 = Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff));
                                      return function ($47) {
                                          return Halogen_Aff_Driver_Eval.handleAff($46(Data_List.reverse($47)));
                                      };
                                  })())(handlers)();
                                  var mmore = Effect_Ref.read(pendingHandlers)();
                                  var $21 = Data_Maybe.maybe(false)(Data_List["null"])(mmore);
                                  if ($21) {
                                      return Data_Functor.voidLeft(Effect.functorEffect)(Effect_Ref.write(Data_Maybe.Nothing.value)(pendingHandlers))(new Control_Monad_Rec_Class.Done(Data_Unit.unit))();
                                  };
                                  return new Control_Monad_Rec_Class.Loop(Data_Unit.unit);
                              };
                          }))();
                      };
                  };
              };
              var finalize = function (lchs) {
                  return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                      return function __do() {
                          cleanupSubscriptionsAndForks(st)();
                          var f = Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](new Halogen_Query_HalogenQ.Finalize(Data_Unit.unit)));
                          Effect_Ref.modify_(function (handlers) {
                              return {
                                  initializers: handlers.initializers,
                                  finalizers: new Data_List_Types.Cons(f, handlers.finalizers)
                              };
                          })(lchs)();
                          return Halogen_Data_Slot.foreachSlot(Effect.applicativeEffect)(st.children)(function (v) {
                              return function __do() {
                                  var dsx = Effect_Ref.read(v)();
                                  return finalize(lchs)(dsx)();
                              };
                          })();
                      };
                  });
              };
              var evalDriver = function (disposed) {
                  return function (ref) {
                      return function (q) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(disposed)))(function (v) {
                              if (v) {
                                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Maybe.Nothing.value);
                              };
                              return Halogen_Aff_Driver_Eval.evalQ(render)(ref)(q);
                          });
                      };
                  };
              };
              var dispose = function (disposed) {
                  return function (lchs) {
                      return function (dsx) {
                          return Halogen_Aff_Driver_Eval.handleLifecycle(lchs)(function __do() {
                              var v = Effect_Ref.read(disposed)();
                              if (v) {
                                  return Data_Unit.unit;
                              };
                              Effect_Ref.write(true)(disposed)();
                              finalize(lchs)(dsx)();
                              return Halogen_Aff_Driver_State.unDriverStateX(function (v1) {
                                  return function __do() {
                                      var v2 = Effect_Class.liftEffect(Effect_Class.monadEffectEffect)(Effect_Ref.read(v1.selfRef))();
                                      return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v2.rendering)(renderSpec.dispose)();
                                  };
                              })(dsx)();
                          });
                      };
                  };
              };
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(newLifecycleHandlers))(function (lchs) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](false)))(function (disposed) {
                      return Halogen_Aff_Driver_Eval.handleLifecycle(lchs)(function __do() {
                          var sio = Halogen_Subscription.create();
                          var dsx = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref.read)(runComponent(lchs)((function () {
                              var $48 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
                              var $49 = Halogen_Subscription.notify(sio.listener);
                              return function ($50) {
                                  return $48($49($50));
                              };
                          })())(i)(component))();
                          return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                              return Control_Applicative.pure(Effect.applicativeEffect)({
                                  query: evalDriver(disposed)(st.selfRef),
                                  messages: sio.emitter,
                                  dispose: dispose(disposed)(lchs)(dsx)
                              });
                          })(dsx)();
                      });
                  });
              });
          };
      };
  };
  exports["runUI"] = runUI;
})(PS);
(function(exports) {
  "use strict";                                               

  exports._querySelector = function (selector) {
    return function (node) {
      return function () {
        return node.querySelector(selector);
      };
    };
  };
})(PS["Web.DOM.ParentNode"] = PS["Web.DOM.ParentNode"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Web.DOM.ParentNode"] = $PS["Web.DOM.ParentNode"] || {};
  var exports = $PS["Web.DOM.ParentNode"];
  var $foreign = $PS["Web.DOM.ParentNode"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];
  var querySelector = function (qs) {
      var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      var $1 = $foreign["_querySelector"](qs);
      return function ($2) {
          return $0($1($2));
      };
  };
  exports["querySelector"] = querySelector;
})(PS);
(function(exports) {
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["Web.HTML"] = PS["Web.HTML"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Web.HTML"] = $PS["Web.HTML"] || {};
  var exports = $PS["Web.HTML"];
  var $foreign = $PS["Web.HTML"];
  exports["window"] = $foreign.window;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Web.HTML.Event.EventTypes"] = $PS["Web.HTML.Event.EventTypes"] || {};
  var exports = $PS["Web.HTML.Event.EventTypes"];
  var domcontentloaded = "DOMContentLoaded";
  exports["domcontentloaded"] = domcontentloaded;
})(PS);
(function(exports) {
  "use strict";

  exports._readyState = function (doc) {
    return function () {
      return doc.readyState;
    };
  };
})(PS["Web.HTML.HTMLDocument"] = PS["Web.HTML.HTMLDocument"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Web.HTML.HTMLDocument.ReadyState"] = $PS["Web.HTML.HTMLDocument.ReadyState"] || {};
  var exports = $PS["Web.HTML.HTMLDocument.ReadyState"];
  var Data_Maybe = $PS["Data.Maybe"];                      
  var Loading = (function () {
      function Loading() {

      };
      Loading.value = new Loading();
      return Loading;
  })();
  var Interactive = (function () {
      function Interactive() {

      };
      Interactive.value = new Interactive();
      return Interactive;
  })();
  var Complete = (function () {
      function Complete() {

      };
      Complete.value = new Complete();
      return Complete;
  })();
  var parse = function (v) {
      if (v === "loading") {
          return new Data_Maybe.Just(Loading.value);
      };
      if (v === "interactive") {
          return new Data_Maybe.Just(Interactive.value);
      };
      if (v === "complete") {
          return new Data_Maybe.Just(Complete.value);
      };
      return Data_Maybe.Nothing.value;
  };
  exports["Loading"] = Loading;
  exports["parse"] = parse;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Web.HTML.HTMLDocument"] = $PS["Web.HTML.HTMLDocument"] || {};
  var exports = $PS["Web.HTML.HTMLDocument"];
  var $foreign = $PS["Web.HTML.HTMLDocument"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect = $PS["Effect"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_HTML_HTMLDocument_ReadyState = $PS["Web.HTML.HTMLDocument.ReadyState"];
  var toParentNode = Unsafe_Coerce.unsafeCoerce; 
  var toDocument = Unsafe_Coerce.unsafeCoerce;
  var readyState = (function () {
      var $0 = Data_Functor.map(Effect.functorEffect)((function () {
          var $2 = Data_Maybe.fromMaybe(Web_HTML_HTMLDocument_ReadyState.Loading.value);
          return function ($3) {
              return $2(Web_HTML_HTMLDocument_ReadyState.parse($3));
          };
      })());
      return function ($1) {
          return $0($foreign["_readyState"]($1));
      };
  })();
  exports["toDocument"] = toDocument;
  exports["toParentNode"] = toParentNode;
  exports["readyState"] = readyState;
})(PS);
(function(exports) {
  "use strict";

  exports._read = function (nothing, just, value) {
    var tag = Object.prototype.toString.call(value);
    if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
      return just(value);
    } else {
      return nothing;
    }
  };
})(PS["Web.HTML.HTMLElement"] = PS["Web.HTML.HTMLElement"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Web.HTML.HTMLElement"] = $PS["Web.HTML.HTMLElement"] || {};
  var exports = $PS["Web.HTML.HTMLElement"];
  var $foreign = $PS["Web.HTML.HTMLElement"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                   
  var toNode = Unsafe_Coerce.unsafeCoerce;
  var fromElement = function (x) {
      return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
  };
  exports["fromElement"] = fromElement;
  exports["toNode"] = toNode;
})(PS);
(function(exports) {
  "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };

  exports.location = function (window) {
    return function () {
      return window.location;
    };
  };
})(PS["Web.HTML.Window"] = PS["Web.HTML.Window"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Web.HTML.Window"] = $PS["Web.HTML.Window"] || {};
  var exports = $PS["Web.HTML.Window"];
  var $foreign = $PS["Web.HTML.Window"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var toEventTarget = Unsafe_Coerce.unsafeCoerce;
  exports["toEventTarget"] = toEventTarget;
  exports["document"] = $foreign.document;
  exports["location"] = $foreign.location;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.Aff.Util"] = $PS["Halogen.Aff.Util"] || {};
  var exports = $PS["Halogen.Aff.Util"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Web_DOM_ParentNode = $PS["Web.DOM.ParentNode"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_Event_EventTypes = $PS["Web.HTML.Event.EventTypes"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_HTMLDocument_ReadyState = $PS["Web.HTML.HTMLDocument.ReadyState"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];                
  var selectElement = function (query) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Bind.bindFlipped(Effect.bindEffect)(Control_Bind.composeKleisliFlipped(Effect.bindEffect)((function () {
          var $2 = Web_DOM_ParentNode.querySelector(query);
          return function ($3) {
              return $2(Web_HTML_HTMLDocument.toParentNode($3));
          };
      })())(Web_HTML_Window.document))(Web_HTML.window)))(function (mel) {
          return Control_Applicative.pure(Effect_Aff.applicativeAff)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromElement)(mel));
      });
  };
  var runHalogenAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));
  var awaitLoad = Effect_Aff.makeAff(function (callback) {
      return function __do() {
          var rs = Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_HTMLDocument.readyState)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))();
          if (rs instanceof Web_HTML_HTMLDocument_ReadyState.Loading) {
              var et = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
              var listener = Web_Event_EventTarget.eventListener(function (v) {
                  return callback(new Data_Either.Right(Data_Unit.unit));
              })();
              Web_Event_EventTarget.addEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(listener)(false)(et)();
              return Effect_Aff.effectCanceler(Web_Event_EventTarget.removeEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(listener)(false)(et));
          };
          callback(new Data_Either.Right(Data_Unit.unit))();
          return Effect_Aff.nonCanceler;
      };
  });
  var awaitBody = Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(awaitLoad)(function () {
      return Control_Bind.bind(Effect_Aff.bindAff)(selectElement("body"))(function (body) {
          return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Could not find body")))(Control_Applicative.pure(Effect_Aff.applicativeAff))(body);
      });
  });
  exports["awaitBody"] = awaitBody;
  exports["runHalogenAff"] = runHalogenAff;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.VDom.Machine"] = $PS["Halogen.VDom.Machine"] || {};
  var exports = $PS["Halogen.VDom.Machine"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var Step = (function () {
      function Step(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Step.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Step(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Step;
  })();
  var unStep = Unsafe_Coerce.unsafeCoerce;
  var step = function (v, a) {
      return v.value2(v.value1, a);
  };
  var mkStep = Unsafe_Coerce.unsafeCoerce;
  var halt = function (v) {
      return v.value3(v.value1);
  };
  var extract = unStep(function (v) {
      return v.value0;
  });
  exports["Step"] = Step;
  exports["mkStep"] = mkStep;
  exports["unStep"] = unStep;
  exports["extract"] = extract;
  exports["step"] = step;
  exports["halt"] = halt;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeGetAny = function (key, obj) {
    return obj[key];
  };

  exports.unsafeHasAny = function (key, obj) {
    return obj.hasOwnProperty(key);
  };

  exports.unsafeSetAny = function (key, val, obj) {
      obj[key] = val;
  };

  exports.forE = function (a, f) {
    var b = [];
    for (var i = 0; i < a.length; i++) {
      b.push(f(i, a[i]));
    }
    return b;
  };

  exports.forEachE = function (a, f) {
    for (var i = 0; i < a.length; i++) {
      f(a[i]);
    }
  };

  exports.forInE = function (o, f) {
    var ks = Object.keys(o);
    for (var i = 0; i < ks.length; i++) {
      var k = ks[i];
      f(k, o[k]);
    }
  };

  exports.diffWithIxE = function (a1, a2, f1, f2, f3) {
    var a3 = [];
    var l1 = a1.length;
    var l2 = a2.length;
    var i  = 0;
    while (1) {
      if (i < l1) {
        if (i < l2) {
          a3.push(f1(i, a1[i], a2[i]));
        } else {
          f2(i, a1[i]);
        }
      } else if (i < l2) {
        a3.push(f3(i, a2[i]));
      } else {
        break;
      }
      i++;
    }
    return a3;
  };

  exports.strMapWithIxE = function (as, fk, f) {
    var o = {};
    for (var i = 0; i < as.length; i++) {
      var a = as[i];
      var k = fk(a);
      o[k] = f(k, i, a);
    }
    return o;
  };

  exports.diffWithKeyAndIxE = function (o1, as, fk, f1, f2, f3) {
    var o2 = {};
    for (var i = 0; i < as.length; i++) {
      var a = as[i];
      var k = fk(a);
      if (o1.hasOwnProperty(k)) {
        o2[k] = f1(k, i, o1[k], a);
      } else {
        o2[k] = f3(k, i, a);
      }
    }
    for (var k in o1) {
      if (k in o2) {
        continue;
      }
      f2(k, o1[k]);
    }
    return o2;
  };

  exports.refEq = function (a, b) {
    return a === b;
  };

  exports.createTextNode = function (s, doc) {
    return doc.createTextNode(s);
  };

  exports.setTextContent = function (s, n) {
    n.textContent = s;
  };

  exports.createElement = function (ns, name, doc) {
    if (ns != null) {
      return doc.createElementNS(ns, name);
    } else {
      return doc.createElement(name)
    }
  };

  exports.insertChildIx = function (i, a, b) {
    var n = b.childNodes.item(i) || null;
    if (n !== a) {
      b.insertBefore(a, n);
    }
  };

  exports.removeChild = function (a, b) {
    if (b && a.parentNode === b) {
      b.removeChild(a);
    }
  };

  exports.parentNode = function (a) {
    return a.parentNode;
  };

  exports.setAttribute = function (ns, attr, val, el) {
    if (ns != null) {
      el.setAttributeNS(ns, attr, val);
    } else {
      el.setAttribute(attr, val);
    }
  };

  exports.removeAttribute = function (ns, attr, el) {
    if (ns != null) {
      el.removeAttributeNS(ns, attr);
    } else {
      el.removeAttribute(attr);
    }
  };

  exports.hasAttribute = function (ns, attr, el) {
    if (ns != null) {
      return el.hasAttributeNS(ns, attr);
    } else {
      return el.hasAttribute(attr);
    }
  };

  exports.addEventListener = function (ev, listener, el) {
    el.addEventListener(ev, listener, false);
  };

  exports.removeEventListener = function (ev, listener, el) {
    el.removeEventListener(ev, listener, false);
  };

  exports.jsUndefined = void 0;
})(PS["Halogen.VDom.Util"] = PS["Halogen.VDom.Util"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.VDom.Util"] = $PS["Halogen.VDom.Util"] || {};
  var exports = $PS["Halogen.VDom.Util"];
  var $foreign = $PS["Halogen.VDom.Util"];
  var Foreign_Object_ST = $PS["Foreign.Object.ST"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var unsafeLookup = $foreign.unsafeGetAny;
  var unsafeFreeze = Unsafe_Coerce.unsafeCoerce;
  var pokeMutMap = $foreign.unsafeSetAny;
  var newMutMap = Foreign_Object_ST["new"];
  exports["newMutMap"] = newMutMap;
  exports["pokeMutMap"] = pokeMutMap;
  exports["unsafeFreeze"] = unsafeFreeze;
  exports["unsafeLookup"] = unsafeLookup;
  exports["unsafeGetAny"] = $foreign.unsafeGetAny;
  exports["unsafeHasAny"] = $foreign.unsafeHasAny;
  exports["unsafeSetAny"] = $foreign.unsafeSetAny;
  exports["forE"] = $foreign.forE;
  exports["forEachE"] = $foreign.forEachE;
  exports["forInE"] = $foreign.forInE;
  exports["diffWithIxE"] = $foreign.diffWithIxE;
  exports["diffWithKeyAndIxE"] = $foreign.diffWithKeyAndIxE;
  exports["strMapWithIxE"] = $foreign.strMapWithIxE;
  exports["refEq"] = $foreign.refEq;
  exports["createTextNode"] = $foreign.createTextNode;
  exports["setTextContent"] = $foreign.setTextContent;
  exports["createElement"] = $foreign.createElement;
  exports["insertChildIx"] = $foreign.insertChildIx;
  exports["removeChild"] = $foreign.removeChild;
  exports["parentNode"] = $foreign.parentNode;
  exports["setAttribute"] = $foreign.setAttribute;
  exports["removeAttribute"] = $foreign.removeAttribute;
  exports["hasAttribute"] = $foreign.hasAttribute;
  exports["addEventListener"] = $foreign.addEventListener;
  exports["removeEventListener"] = $foreign.removeEventListener;
  exports["jsUndefined"] = $foreign.jsUndefined;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.VDom.DOM.Prop"] = $PS["Halogen.VDom.DOM.Prop"] || {};
  var exports = $PS["Halogen.VDom.DOM.Prop"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Foreign = $PS["Foreign"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];                
  var Created = (function () {
      function Created(value0) {
          this.value0 = value0;
      };
      Created.create = function (value0) {
          return new Created(value0);
      };
      return Created;
  })();
  var Removed = (function () {
      function Removed(value0) {
          this.value0 = value0;
      };
      Removed.create = function (value0) {
          return new Removed(value0);
      };
      return Removed;
  })();
  var Attribute = (function () {
      function Attribute(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Attribute.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Attribute(value0, value1, value2);
              };
          };
      };
      return Attribute;
  })();
  var Property = (function () {
      function Property(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Property.create = function (value0) {
          return function (value1) {
              return new Property(value0, value1);
          };
      };
      return Property;
  })();
  var Handler = (function () {
      function Handler(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Handler.create = function (value0) {
          return function (value1) {
              return new Handler(value0, value1);
          };
      };
      return Handler;
  })();
  var Ref = (function () {
      function Ref(value0) {
          this.value0 = value0;
      };
      Ref.create = function (value0) {
          return new Ref(value0);
      };
      return Ref;
  })();
  var unsafeGetProperty = Halogen_VDom_Util.unsafeGetAny;
  var setProperty = Halogen_VDom_Util.unsafeSetAny;
  var removeProperty = function (key, el) {
      var v = Halogen_VDom_Util.hasAttribute(Data_Nullable["null"], key, el);
      if (v) {
          return Halogen_VDom_Util.removeAttribute(Data_Nullable["null"], key, el);
      };
      var v1 = Foreign.typeOf(Halogen_VDom_Util.unsafeGetAny(key, el));
      if (v1 === "string") {
          return Halogen_VDom_Util.unsafeSetAny(key, "", el);
      };
      if (key === "rowSpan") {
          return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
      };
      if (key === "colSpan") {
          return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
      };
      return Halogen_VDom_Util.unsafeSetAny(key, Halogen_VDom_Util.jsUndefined, el);
  };
  var propToStrKey = function (v) {
      if (v instanceof Attribute && v.value0 instanceof Data_Maybe.Just) {
          return "attr/" + (v.value0.value0 + (":" + v.value1));
      };
      if (v instanceof Attribute) {
          return "attr/:" + v.value1;
      };
      if (v instanceof Property) {
          return "prop/" + v.value0;
      };
      if (v instanceof Handler) {
          return "handler/" + v.value0;
      };
      if (v instanceof Ref) {
          return "ref";
      };
      throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 182, column 16 - line 187, column 16): " + [ v.constructor.name ]);
  };
  var propFromString = Unsafe_Coerce.unsafeCoerce;
  var propFromBoolean = Unsafe_Coerce.unsafeCoerce;
  var buildProp = function (emit) {
      return function (el) {
          var removeProp = function (prevEvents) {
              return function (v, v1) {
                  if (v1 instanceof Attribute) {
                      return Halogen_VDom_Util.removeAttribute(Data_Nullable.toNullable(v1.value0), v1.value1, el);
                  };
                  if (v1 instanceof Property) {
                      return removeProperty(v1.value0, el);
                  };
                  if (v1 instanceof Handler) {
                      var handler = Halogen_VDom_Util.unsafeLookup(v1.value0, prevEvents);
                      return Halogen_VDom_Util.removeEventListener(v1.value0, Data_Tuple.fst(handler), el);
                  };
                  if (v1 instanceof Ref) {
                      return Data_Unit.unit;
                  };
                  throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 169, column 5 - line 179, column 18): " + [ v1.constructor.name ]);
              };
          };
          var mbEmit = function (v) {
              if (v instanceof Data_Maybe.Just) {
                  return emit(v.value0)();
              };
              return Data_Unit.unit;
          };
          var haltProp = function (state) {
              var v = Foreign_Object.lookup("ref")(state.props);
              if (v instanceof Data_Maybe.Just && v.value0 instanceof Ref) {
                  return mbEmit(v.value0.value0(new Removed(el)));
              };
              return Data_Unit.unit;
          };
          var diffProp = function (prevEvents, events) {
              return function (v, v1, v11, v2) {
                  if (v11 instanceof Attribute && v2 instanceof Attribute) {
                      var $57 = v11.value2 === v2.value2;
                      if ($57) {
                          return v2;
                      };
                      Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
                      return v2;
                  };
                  if (v11 instanceof Property && v2 instanceof Property) {
                      var v4 = Halogen_VDom_Util.refEq(v11.value1, v2.value1);
                      if (v4) {
                          return v2;
                      };
                      if (v2.value0 === "value") {
                          var elVal = unsafeGetProperty("value", el);
                          var $66 = Halogen_VDom_Util.refEq(elVal, v2.value1);
                          if ($66) {
                              return v2;
                          };
                          setProperty(v2.value0, v2.value1, el);
                          return v2;
                      };
                      setProperty(v2.value0, v2.value1, el);
                      return v2;
                  };
                  if (v11 instanceof Handler && v2 instanceof Handler) {
                      var handler = Halogen_VDom_Util.unsafeLookup(v2.value0, prevEvents);
                      Effect_Ref.write(v2.value1)(Data_Tuple.snd(handler))();
                      Halogen_VDom_Util.pokeMutMap(v2.value0, handler, events);
                      return v2;
                  };
                  return v2;
              };
          };
          var applyProp = function (events) {
              return function (v, v1, v2) {
                  if (v2 instanceof Attribute) {
                      Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
                      return v2;
                  };
                  if (v2 instanceof Property) {
                      setProperty(v2.value0, v2.value1, el);
                      return v2;
                  };
                  if (v2 instanceof Handler) {
                      var v3 = Halogen_VDom_Util.unsafeGetAny(v2.value0, events);
                      if (Halogen_VDom_Util.unsafeHasAny(v2.value0, events)) {
                          Effect_Ref.write(v2.value1)(Data_Tuple.snd(v3))();
                          return v2;
                      };
                      var ref = Effect_Ref["new"](v2.value1)();
                      var listener = Web_Event_EventTarget.eventListener(function (ev) {
                          return function __do() {
                              var f$prime = Effect_Ref.read(ref)();
                              return mbEmit(f$prime(ev));
                          };
                      })();
                      Halogen_VDom_Util.pokeMutMap(v2.value0, new Data_Tuple.Tuple(listener, ref), events);
                      Halogen_VDom_Util.addEventListener(v2.value0, listener, el);
                      return v2;
                  };
                  if (v2 instanceof Ref) {
                      mbEmit(v2.value0(new Created(el)));
                      return v2;
                  };
                  throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 113, column 5 - line 135, column 15): " + [ v2.constructor.name ]);
              };
          };
          var patchProp = function (state, ps2) {
              var events = Halogen_VDom_Util.newMutMap();
              var onThis = removeProp(state.events);
              var onThese = diffProp(state.events, events);
              var onThat = applyProp(events);
              var props = Halogen_VDom_Util.diffWithKeyAndIxE(state.props, ps2, propToStrKey, onThese, onThis, onThat);
              var nextState = {
                  events: Halogen_VDom_Util.unsafeFreeze(events),
                  props: props
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, nextState, patchProp, haltProp));
          };
          var renderProp = function (ps1) {
              var events = Halogen_VDom_Util.newMutMap();
              var ps1$prime = Halogen_VDom_Util.strMapWithIxE(ps1, propToStrKey, applyProp(events));
              var state = {
                  events: Halogen_VDom_Util.unsafeFreeze(events),
                  props: ps1$prime
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, state, patchProp, haltProp));
          };
          return renderProp;
      };
  };
  exports["Attribute"] = Attribute;
  exports["Property"] = Property;
  exports["Handler"] = Handler;
  exports["propFromString"] = propFromString;
  exports["propFromBoolean"] = propFromBoolean;
  exports["buildProp"] = buildProp;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.VDom.Types"] = $PS["Halogen.VDom.Types"] || {};
  var exports = $PS["Halogen.VDom.Types"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Text = (function () {
      function Text(value0) {
          this.value0 = value0;
      };
      Text.create = function (value0) {
          return new Text(value0);
      };
      return Text;
  })();
  var Elem = (function () {
      function Elem(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Elem.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Elem(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Elem;
  })();
  var Keyed = (function () {
      function Keyed(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Keyed.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Keyed(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Keyed;
  })();
  var Widget = (function () {
      function Widget(value0) {
          this.value0 = value0;
      };
      Widget.create = function (value0) {
          return new Widget(value0);
      };
      return Widget;
  })();
  var Grafted = (function () {
      function Grafted(value0) {
          this.value0 = value0;
      };
      Grafted.create = function (value0) {
          return new Grafted(value0);
      };
      return Grafted;
  })();
  var Graft = (function () {
      function Graft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Graft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Graft(value0, value1, value2);
              };
          };
      };
      return Graft;
  })();
  var unGraft = function (f) {
      return function ($55) {
          return f($55);
      };
  };
  var graft = Unsafe_Coerce.unsafeCoerce;
  var bifunctorGraft = {
      bimap: function (f) {
          return function (g) {
              return unGraft(function (v) {
                  return graft(new Graft(function ($57) {
                      return f(v.value0($57));
                  }, function ($58) {
                      return g(v.value1($58));
                  }, v.value2));
              });
          };
      }
  };
  var runGraft = unGraft(function (v) {
      var go = function (v2) {
          if (v2 instanceof Text) {
              return new Text(v2.value0);
          };
          if (v2 instanceof Elem) {
              return new Elem(v2.value0, v2.value1, v.value0(v2.value2), Data_Functor.map(Data_Functor.functorArray)(go)(v2.value3));
          };
          if (v2 instanceof Keyed) {
              return new Keyed(v2.value0, v2.value1, v.value0(v2.value2), Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(go))(v2.value3));
          };
          if (v2 instanceof Widget) {
              return new Widget(v.value1(v2.value0));
          };
          if (v2 instanceof Grafted) {
              return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(v.value0)(v.value1)(v2.value0));
          };
          throw new Error("Failed pattern match at Halogen.VDom.Types (line 86, column 7 - line 86, column 27): " + [ v2.constructor.name ]);
      };
      return go(v.value2);
  });
  exports["Text"] = Text;
  exports["Elem"] = Elem;
  exports["Keyed"] = Keyed;
  exports["Widget"] = Widget;
  exports["Grafted"] = Grafted;
  exports["runGraft"] = runGraft;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.HTML.Core"] = $PS["Halogen.HTML.Core"] || {};
  var exports = $PS["Halogen.HTML.Core"];
  var Halogen_VDom_DOM_Prop = $PS["Halogen.VDom.DOM.Prop"];
  var Halogen_VDom_Types = $PS["Halogen.VDom.Types"];          
  var HTML = function (x) {
      return x;
  };
  var widget = function ($19) {
      return HTML(Halogen_VDom_Types.Widget.create($19));
  };
  var toPropValue = function (dict) {
      return dict.toPropValue;
  };
  var text = function ($20) {
      return HTML(Halogen_VDom_Types.Text.create($20));
  };
  var prop = function (dictIsProp) {
      return function (v) {
          var $22 = Halogen_VDom_DOM_Prop.Property.create(v);
          var $23 = toPropValue(dictIsProp);
          return function ($24) {
              return $22($23($24));
          };
      };
  };
  var isPropString = {
      toPropValue: Halogen_VDom_DOM_Prop.propFromString
  };
  var isPropBoolean = {
      toPropValue: Halogen_VDom_DOM_Prop.propFromBoolean
  };
  var handler = Halogen_VDom_DOM_Prop.Handler.create;
  var element = function (ns) {
      return function (name) {
          return function (props) {
              return function (children) {
                  return new Halogen_VDom_Types.Elem(ns, name, props, children);
              };
          };
      };
  };
  var attr = function (ns) {
      return function (v) {
          return Halogen_VDom_DOM_Prop.Attribute.create(ns)(v);
      };
  };
  exports["widget"] = widget;
  exports["text"] = text;
  exports["element"] = element;
  exports["prop"] = prop;
  exports["attr"] = attr;
  exports["handler"] = handler;
  exports["isPropString"] = isPropString;
  exports["isPropBoolean"] = isPropBoolean;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.HTML"] = $PS["Halogen.HTML"] || {};
  var exports = $PS["Halogen.HTML"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var slot_ = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (label) {
                  return function (p) {
                      return function (component) {
                          return function (input) {
                              return Halogen_HTML_Core.widget(new Halogen_Component.ComponentSlot(Halogen_Component.componentSlot()(dictIsSymbol)(dictOrd)(label)(p)(component)(input)(Data_Function["const"](Data_Maybe.Nothing.value))));
                          };
                      };
                  };
              };
          };
      };
  };
  var slot = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (label) {
                  return function (p) {
                      return function (component) {
                          return function (input) {
                              return function (outputQuery) {
                                  return Halogen_HTML_Core.widget(new Halogen_Component.ComponentSlot(Halogen_Component.componentSlot()(dictIsSymbol)(dictOrd)(label)(p)(component)(input)(function ($6) {
                                      return Data_Maybe.Just.create(outputQuery($6));
                                  })));
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var fromPlainHTML = Unsafe_Coerce.unsafeCoerce;
  exports["fromPlainHTML"] = fromPlainHTML;
  exports["slot"] = slot;
  exports["slot_"] = slot_;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.HTML.Elements"] = $PS["Halogen.HTML.Elements"] || {};
  var exports = $PS["Halogen.HTML.Elements"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var element = Halogen_HTML_Core.element(Data_Maybe.Nothing.value);
  var h1 = element("h1");
  var h1_ = h1([  ]);
  var h2 = element("h2");
  var h2_ = h2([  ]);
  var h4 = element("h4");
  var h4_ = h4([  ]);        
  var li = element("li");
  var li_ = li([  ]);        
  var p = element("p");
  var p_ = p([  ]);
  var ul = element("ul");
  var ul_ = ul([  ]);
  var div = element("div");
  var div_ = div([  ]);
  var button = element("button");
  var audio = element("audio");
  var a = element("a");
  exports["a"] = a;
  exports["audio"] = audio;
  exports["button"] = button;
  exports["div"] = div;
  exports["div_"] = div_;
  exports["h1_"] = h1_;
  exports["h2_"] = h2_;
  exports["h4_"] = h4_;
  exports["li_"] = li_;
  exports["p"] = p;
  exports["p_"] = p_;
  exports["ul"] = ul;
  exports["ul_"] = ul_;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Web.UIEvent.MouseEvent.EventTypes"] = $PS["Web.UIEvent.MouseEvent.EventTypes"] || {};
  var exports = $PS["Web.UIEvent.MouseEvent.EventTypes"];
  var click = "click";
  exports["click"] = click;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.HTML.Events"] = $PS["Halogen.HTML.Events"] || {};
  var exports = $PS["Halogen.HTML.Events"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query_Input = $PS["Halogen.Query.Input"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_UIEvent_MouseEvent_EventTypes = $PS["Web.UIEvent.MouseEvent.EventTypes"];
  var mouseHandler = Unsafe_Coerce.unsafeCoerce;
  var handler = function (et) {
      return function (f) {
          return Halogen_HTML_Core.handler(et)(function (ev) {
              return new Data_Maybe.Just(new Halogen_Query_Input.Action(f(ev)));
          });
      };
  };                                                       
  var onClick = (function () {
      var $1 = handler(Web_UIEvent_MouseEvent_EventTypes.click);
      return function ($2) {
          return $1(mouseHandler($2));
      };
  })();
  exports["onClick"] = onClick;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.HTML.Properties"] = $PS["Halogen.HTML.Properties"] || {};
  var exports = $PS["Halogen.HTML.Properties"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var prop = function (dictIsProp) {
      return Halogen_HTML_Core.prop(dictIsProp);
  };                                                                   
  var src = prop(Halogen_HTML_Core.isPropString)("src");
  var value = prop(Halogen_HTML_Core.isPropString)("value");
  var href = prop(Halogen_HTML_Core.isPropString)("href");
  var controls = prop(Halogen_HTML_Core.isPropBoolean)("controls");
  var class_ = (function () {
      var $16 = prop(Halogen_HTML_Core.isPropString)("className");
      var $17 = Data_Newtype.unwrap();
      return function ($18) {
          return $16($17($18));
      };
  })();
  var attr = Halogen_HTML_Core.attr(Data_Maybe.Nothing.value);
  var style = attr("style");
  exports["class_"] = class_;
  exports["href"] = href;
  exports["src"] = src;
  exports["style"] = style;
  exports["controls"] = controls;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.Query"] = $PS["Halogen.Query"] || {};
  var exports = $PS["Halogen.Query"];
  var Data_Unit = $PS["Data.Unit"];
  var mkTell = function (act) {
      return act(Data_Unit.unit);
  };
  exports["mkTell"] = mkTell;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Web.DOM.Element"] = $PS["Web.DOM.Element"] || {};
  var exports = $PS["Web.DOM.Element"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                   
  var toNode = Unsafe_Coerce.unsafeCoerce;
  exports["toNode"] = toNode;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.VDom.DOM"] = $PS["Halogen.VDom.DOM"] || {};
  var exports = $PS["Halogen.VDom.DOM"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Types = $PS["Halogen.VDom.Types"];
  var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];
  var Web_DOM_Element = $PS["Web.DOM.Element"];
  var haltWidget = function (v) {
      return Halogen_VDom_Machine.halt(v.widget);
  };
  var patchWidget = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchWidget(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Widget) {
          var res = Halogen_VDom_Machine.step(state.widget, vdom.value0);
          var res$prime = Halogen_VDom_Machine.unStep(function (v) {
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v.value0, {
                  build: state.build,
                  widget: res
              }, patchWidget, haltWidget));
          })(res);
          return res$prime;
      };
      haltWidget(state);
      return state.build(vdom);
  };
  var haltText = function (v) {
      var parent = Halogen_VDom_Util.parentNode(v.node);
      return Halogen_VDom_Util.removeChild(v.node, parent);
  };
  var patchText = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchText(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Text) {
          if (state.value === vdom.value0) {
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, state, patchText, haltText));
          };
          if (Data_Boolean.otherwise) {
              var nextState = {
                  build: state.build,
                  node: state.node,
                  value: vdom.value0
              };
              Halogen_VDom_Util.setTextContent(vdom.value0, state.node);
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchText, haltText));
          };
      };
      haltText(state);
      return state.build(vdom);
  };
  var haltKeyed = function (v) {
      var parent = Halogen_VDom_Util.parentNode(v.node);
      Halogen_VDom_Util.removeChild(v.node, parent);
      Halogen_VDom_Util.forInE(v.children, function (v1, s) {
          return Halogen_VDom_Machine.halt(s);
      });
      return Halogen_VDom_Machine.halt(v.attrs);
  };
  var haltElem = function (v) {
      var parent = Halogen_VDom_Util.parentNode(v.node);
      Halogen_VDom_Util.removeChild(v.node, parent);
      Halogen_VDom_Util.forEachE(v.children, Halogen_VDom_Machine.halt);
      return Halogen_VDom_Machine.halt(v.attrs);
  };
  var eqElemSpec = function (ns1, v, ns2, v1) {
      var $58 = v === v1;
      if ($58) {
          if (ns1 instanceof Data_Maybe.Just && (ns2 instanceof Data_Maybe.Just && ns1.value0 === ns2.value0)) {
              return true;
          };
          if (ns1 instanceof Data_Maybe.Nothing && ns2 instanceof Data_Maybe.Nothing) {
              return true;
          };
          return false;
      };
      return false;
  };
  var patchElem = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchElem(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Elem && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {
          var v = Data_Array.length(vdom.value3);
          var v1 = Data_Array.length(state.children);
          if (v1 === 0 && v === 0) {
              var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
              var nextState = {
                  build: state.build,
                  node: state.node,
                  attrs: attrs2,
                  ns: vdom.value0,
                  name: vdom.value1,
                  children: state.children
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchElem, haltElem));
          };
          var onThis = function (v2, s) {
              return Halogen_VDom_Machine.halt(s);
          };
          var onThese = function (ix, s, v2) {
              var res = Halogen_VDom_Machine.step(s, v2);
              Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
              return res;
          };
          var onThat = function (ix, v2) {
              var res = state.build(v2);
              Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
              return res;
          };
          var children2 = Halogen_VDom_Util.diffWithIxE(state.children, vdom.value3, onThese, onThis, onThat);
          var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
          var nextState = {
              build: state.build,
              node: state.node,
              attrs: attrs2,
              ns: vdom.value0,
              name: vdom.value1,
              children: children2
          };
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchElem, haltElem));
      };
      haltElem(state);
      return state.build(vdom);
  };
  var patchKeyed = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchKeyed(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Keyed && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {
          var v = Data_Array.length(vdom.value3);
          if (state.length === 0 && v === 0) {
              var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
              var nextState = {
                  build: state.build,
                  node: state.node,
                  attrs: attrs2,
                  ns: vdom.value0,
                  name: vdom.value1,
                  children: state.children,
                  length: 0
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchKeyed, haltKeyed));
          };
          var onThis = function (v2, s) {
              return Halogen_VDom_Machine.halt(s);
          };
          var onThese = function (v2, ix$prime, s, v3) {
              var res = Halogen_VDom_Machine.step(s, v3.value1);
              Halogen_VDom_Util.insertChildIx(ix$prime, Halogen_VDom_Machine.extract(res), state.node);
              return res;
          };
          var onThat = function (v2, ix, v3) {
              var res = state.build(v3.value1);
              Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
              return res;
          };
          var children2 = Halogen_VDom_Util.diffWithKeyAndIxE(state.children, vdom.value3, Data_Tuple.fst, onThese, onThis, onThat);
          var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
          var nextState = {
              build: state.build,
              node: state.node,
              attrs: attrs2,
              ns: vdom.value0,
              name: vdom.value1,
              children: children2,
              length: v
          };
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchKeyed, haltKeyed));
      };
      haltKeyed(state);
      return state.build(vdom);
  };
  var buildWidget = function (v, build, w) {
      var res = v.buildWidget(v)(w);
      var res$prime = Halogen_VDom_Machine.unStep(function (v1) {
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v1.value0, {
              build: build,
              widget: res
          }, patchWidget, haltWidget));
      })(res);
      return res$prime;
  };
  var buildText = function (v, build, s) {
      var node = Halogen_VDom_Util.createTextNode(s, v.document);
      var state = {
          build: build,
          node: node,
          value: s
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchText, haltText));
  };
  var buildKeyed = function (v, build, ns1, name1, as1, ch1) {
      var el = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);
      var node = Web_DOM_Element.toNode(el);
      var onChild = function (v1, ix, v2) {
          var res = build(v2.value1);
          Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), node);
          return res;
      };
      var children = Halogen_VDom_Util.strMapWithIxE(ch1, Data_Tuple.fst, onChild);
      var attrs = v.buildAttributes(el)(as1);
      var state = {
          build: build,
          node: node,
          attrs: attrs,
          ns: ns1,
          name: name1,
          children: children,
          length: Data_Array.length(ch1)
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchKeyed, haltKeyed));
  };
  var buildElem = function (v, build, ns1, name1, as1, ch1) {
      var el = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);
      var node = Web_DOM_Element.toNode(el);
      var onChild = function (ix, child) {
          var res = build(child);
          Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), node);
          return res;
      };
      var children = Halogen_VDom_Util.forE(ch1, onChild);
      var attrs = v.buildAttributes(el)(as1);
      var state = {
          build: build,
          node: node,
          attrs: attrs,
          ns: ns1,
          name: name1,
          children: children
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchElem, haltElem));
  };
  var buildVDom = function (spec) {
      var build = function (v) {
          if (v instanceof Halogen_VDom_Types.Text) {
              return buildText(spec, build, v.value0);
          };
          if (v instanceof Halogen_VDom_Types.Elem) {
              return buildElem(spec, build, v.value0, v.value1, v.value2, v.value3);
          };
          if (v instanceof Halogen_VDom_Types.Keyed) {
              return buildKeyed(spec, build, v.value0, v.value1, v.value2, v.value3);
          };
          if (v instanceof Halogen_VDom_Types.Widget) {
              return buildWidget(spec, build, v.value0);
          };
          if (v instanceof Halogen_VDom_Types.Grafted) {
              return build(Halogen_VDom_Types.runGraft(v.value0));
          };
          throw new Error("Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): " + [ v.constructor.name ]);
      };
      return build;
  };
  exports["buildVDom"] = buildVDom;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.VDom.Thunk"] = $PS["Halogen.VDom.Thunk"] || {};
  var exports = $PS["Halogen.VDom.Thunk"];
  var Halogen_VDom_DOM = $PS["Halogen.VDom.DOM"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];        
  var Thunk = (function () {
      function Thunk(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Thunk.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Thunk(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Thunk;
  })();                                          
  var unsafeEqThunk = function (v, v1) {
      return Halogen_VDom_Util.refEq(v.value0, v1.value0) && (Halogen_VDom_Util.refEq(v.value1, v1.value1) && v.value1(v.value3, v1.value3));
  };
  var thunk = function (tid, eqFn, f, a) {
      return new Thunk(tid, eqFn, f, a);
  };
  var runThunk = function (v) {
      return v.value2(v.value3);
  };
  var buildThunk = function (toVDom) {
      var haltThunk = function (state) {
          return Halogen_VDom_Machine.halt(state.vdom);
      };
      var patchThunk = function (state, t2) {
          var $43 = unsafeEqThunk(state.thunk, t2);
          if ($43) {
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(state.vdom), state, patchThunk, haltThunk));
          };
          var vdom = Halogen_VDom_Machine.step(state.vdom, toVDom(runThunk(t2)));
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {
              vdom: vdom,
              thunk: t2
          }, patchThunk, haltThunk));
      };
      var renderThunk = function (spec) {
          return function (t) {
              var vdom = Halogen_VDom_DOM.buildVDom(spec)(toVDom(runThunk(t)));
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {
                  thunk: t,
                  vdom: vdom
              }, patchThunk, haltThunk));
          };
      };
      return renderThunk;
  };
  exports["buildThunk"] = buildThunk;
})(PS);
(function(exports) {
  "use strict";

  var getEffProp = function (name) {
    return function (node) {
      return function () {
        return node[name];
      };
    };
  };                                                   

  exports._parentNode = getEffProp("parentNode");          

  exports._nextSibling = getEffProp("nextSibling");

  exports.insertBefore = function (node1) {
    return function (node2) {
      return function (parent) {
        return function () {
          parent.insertBefore(node1, node2);
        };
      };
    };
  };

  exports.appendChild = function (node) {
    return function (parent) {
      return function () {
        parent.appendChild(node);
      };
    };
  };

  exports.removeChild = function (node) {
    return function (parent) {
      return function () {
        parent.removeChild(node);
      };
    };
  };
})(PS["Web.DOM.Node"] = PS["Web.DOM.Node"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Web.DOM.Node"] = $PS["Web.DOM.Node"] || {};
  var exports = $PS["Web.DOM.Node"];
  var $foreign = $PS["Web.DOM.Node"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];
  var parentNode = (function () {
      var $3 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      return function ($4) {
          return $3($foreign["_parentNode"]($4));
      };
  })();
  var nextSibling = (function () {
      var $14 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      return function ($15) {
          return $14($foreign["_nextSibling"]($15));
      };
  })();
  exports["parentNode"] = parentNode;
  exports["nextSibling"] = nextSibling;
  exports["insertBefore"] = $foreign.insertBefore;
  exports["appendChild"] = $foreign.appendChild;
  exports["removeChild"] = $foreign.removeChild;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.VDom.Driver"] = $PS["Halogen.VDom.Driver"] || {};
  var exports = $PS["Halogen.VDom.Driver"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Aff_Driver = $PS["Halogen.Aff.Driver"];
  var Halogen_Aff_Driver_State = $PS["Halogen.Aff.Driver.State"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_VDom_DOM = $PS["Halogen.VDom.DOM"];
  var Halogen_VDom_DOM_Prop = $PS["Halogen.VDom.DOM.Prop"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Thunk = $PS["Halogen.VDom.Thunk"];
  var Unsafe_Reference = $PS["Unsafe.Reference"];
  var Web_DOM_Node = $PS["Web.DOM.Node"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];
  var substInParent = function (v) {
      return function (v1) {
          return function (v2) {
              if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) {
                  return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.insertBefore(v)(v1.value0)(v2.value0));
              };
              if (v1 instanceof Data_Maybe.Nothing && v2 instanceof Data_Maybe.Just) {
                  return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(v)(v2.value0));
              };
              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
          };
      };
  };
  var removeChild = function (v) {
      return function __do() {
          var npn = Web_DOM_Node.parentNode(v.node)();
          return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function (pn) {
              return Web_DOM_Node.removeChild(v.node)(pn);
          })(npn)();
      };
  };
  var mkSpec = function (handler) {
      return function (renderChildRef) {
          return function (document) {
              var getNode = Halogen_Aff_Driver_State.unRenderStateX(function (v) {
                  return v.node;
              });
              var done = function (st) {
                  if (st instanceof Data_Maybe.Just) {
                      return Halogen_VDom_Machine.halt(st.value0);
                  };
                  return Data_Unit.unit;
              };
              var buildWidget = function (spec) {
                  var buildThunk = Halogen_VDom_Thunk.buildThunk(Data_Newtype.unwrap())(spec);
                  var renderComponentSlot = function (cs) {
                      var renderChild = Effect_Ref.read(renderChildRef)();
                      var rsx = renderChild(cs)();
                      var node = getNode(rsx);
                      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, Data_Maybe.Nothing.value, patch, done));
                  };
                  var render = function (slot) {
                      if (slot instanceof Halogen_Component.ComponentSlot) {
                          return renderComponentSlot(slot.value0);
                      };
                      if (slot instanceof Halogen_Component.ThunkSlot) {
                          var step = buildThunk(slot.value0);
                          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(step), new Data_Maybe.Just(step), patch, done));
                      };
                      throw new Error("Failed pattern match at Halogen.VDom.Driver (line 85, column 7 - line 90, column 75): " + [ slot.constructor.name ]);
                  };
                  var patch = function (st, slot) {
                      if (st instanceof Data_Maybe.Just) {
                          if (slot instanceof Halogen_Component.ComponentSlot) {
                              Halogen_VDom_Machine.halt(st.value0);
                              return renderComponentSlot(slot.value0);
                          };
                          if (slot instanceof Halogen_Component.ThunkSlot) {
                              var step$prime = Halogen_VDom_Machine.step(st.value0, slot.value0);
                              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(step$prime), new Data_Maybe.Just(step$prime), patch, done));
                          };
                          throw new Error("Failed pattern match at Halogen.VDom.Driver (line 98, column 22 - line 104, column 79): " + [ slot.constructor.name ]);
                      };
                      return render(slot);
                  };
                  return render;
              };
              var buildAttributes = Halogen_VDom_DOM_Prop.buildProp(handler);
              return {
                  buildWidget: buildWidget,
                  buildAttributes: buildAttributes,
                  document: document
              };
          };
      };
  };
  var renderSpec = function (document) {
      return function (container) {
          var render = function (handler) {
              return function (child) {
                  return function (v) {
                      return function (v1) {
                          if (v1 instanceof Data_Maybe.Nothing) {
                              return function __do() {
                                  var renderChildRef = Effect_Ref["new"](child)();
                                  var spec = mkSpec(handler)(renderChildRef)(document);
                                  var machine = Halogen_VDom_DOM.buildVDom(spec)(v);
                                  var node = Halogen_VDom_Machine.extract(machine);
                                  Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(node)(Web_HTML_HTMLElement.toNode(container)))();
                                  return {
                                      machine: machine,
                                      node: node,
                                      renderChildRef: renderChildRef
                                  };
                              };
                          };
                          if (v1 instanceof Data_Maybe.Just) {
                              return function __do() {
                                  Effect_Ref.write(child)(v1.value0.renderChildRef)();
                                  var parent = Web_DOM_Node.parentNode(v1.value0.node)();
                                  var nextSib = Web_DOM_Node.nextSibling(v1.value0.node)();
                                  var machine$prime = Halogen_VDom_Machine.step(v1.value0.machine, v);
                                  var newNode = Halogen_VDom_Machine.extract(machine$prime);
                                  Control_Applicative.when(Effect.applicativeEffect)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean)))(Unsafe_Reference.unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(nextSib)(parent))();
                                  return {
                                      machine: machine$prime,
                                      node: newNode,
                                      renderChildRef: v1.value0.renderChildRef
                                  };
                              };
                          };
                          throw new Error("Failed pattern match at Halogen.VDom.Driver (line 159, column 5 - line 175, column 80): " + [ v1.constructor.name ]);
                      };
                  };
              };
          };
          return {
              render: render,
              renderChild: Control_Category.identity(Control_Category.categoryFn),
              removeChild: removeChild,
              dispose: removeChild
          };
      };
  };
  var runUI = function (component) {
      return function (i) {
          return function (element) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Functor.map(Effect.functorEffect)(Web_HTML_HTMLDocument.toDocument)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))))(function (document) {
                  return Halogen_Aff_Driver.runUI(renderSpec(document)(element))(component)(i);
              });
          };
      };
  };
  exports["runUI"] = runUI;
})(PS);
(function(exports) {
  "use strict";

  // A helper which transforms the result ofencodeURIComponent to be compliant
  // with RFC3896, as described in the MDN documentation here:
  //
  // https://web.archive.org/web/20201206001047/https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent
  function toRFC3896(input) {
    return input.replace(/[!'()*]/g, function (c) {
      return "%" + c.charCodeAt(0).toString(16);
    });
  }

  exports._encodeURIComponent = function encode(fail, succeed, input) {
    try {
      return succeed(toRFC3896(encodeURIComponent(input)));
    } catch (err) {
      return fail(err);
    }
  };

  function _decodeURIComponent(fail, succeed, input) {
    try {
      return succeed(decodeURIComponent(input));
    } catch (err) {
      return fail(err);
    }
  }

  exports._decodeURIComponent = _decodeURIComponent;
})(PS["JSURI"] = PS["JSURI"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["JSURI"] = $PS["JSURI"] || {};
  var exports = $PS["JSURI"];
  var $foreign = $PS["JSURI"];
  var Data_Function = $PS["Data.Function"];
  var Data_Function_Uncurried = $PS["Data.Function.Uncurried"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var $$encodeURIComponent = Data_Function_Uncurried.runFn3($foreign["_encodeURIComponent"])(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);      
  var $$decodeURIComponent = Data_Function_Uncurried.runFn3($foreign["_decodeURIComponent"])(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
  exports["encodeURIComponent"] = $$encodeURIComponent;
  exports["decodeURIComponent"] = $$decodeURIComponent;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Web.HTML.Event.HashChangeEvent.EventTypes"] = $PS["Web.HTML.Event.HashChangeEvent.EventTypes"] || {};
  var exports = $PS["Web.HTML.Event.HashChangeEvent.EventTypes"];
  var hashchange = "hashchange";
  exports["hashchange"] = hashchange;
})(PS);
(function(exports) {
  "use strict";

  exports.hash = function (location) {
    return function () {
      return location.hash;
    };
  };
})(PS["Web.HTML.Location"] = PS["Web.HTML.Location"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Web.HTML.Location"] = $PS["Web.HTML.Location"] || {};
  var exports = $PS["Web.HTML.Location"];
  var $foreign = $PS["Web.HTML.Location"];
  exports["hash"] = $foreign.hash;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Routing.Hash"] = $PS["Routing.Hash"] || {};
  var exports = $PS["Routing.Hash"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_Event_HashChangeEvent_EventTypes = $PS["Web.HTML.Event.HashChangeEvent.EventTypes"];
  var Web_HTML_Location = $PS["Web.HTML.Location"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];
  var getHash = Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.location))((function () {
      var $2 = Data_Functor.map(Effect.functorEffect)((function () {
          var $4 = Data_Maybe.fromMaybe("");
          var $5 = Data_String_CodeUnits.stripPrefix("#");
          return function ($6) {
              return $4($5($6));
          };
      })());
      return function ($3) {
          return $2(Web_HTML_Location.hash($3));
      };
  })());
  var foldHashes = function (cb) {
      return function (init) {
          return function __do() {
              var ref = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(Control_Bind.bindFlipped(Effect.bindEffect)(init)(getHash))();
              var win = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
              var listener = Web_Event_EventTarget.eventListener(function (v) {
                  return Control_Bind.bindFlipped(Effect.bindEffect)(Data_Function.flip(Effect_Ref.write)(ref))(Control_Bind.join(Effect.bindEffect)(Control_Apply.apply(Effect.applyEffect)(Data_Functor.map(Effect.functorEffect)(cb)(Effect_Ref.read(ref)))(getHash)));
              })();
              Web_Event_EventTarget.addEventListener(Web_HTML_Event_HashChangeEvent_EventTypes.hashchange)(listener)(false)(win)();
              return Web_Event_EventTarget.removeEventListener(Web_HTML_Event_HashChangeEvent_EventTypes.hashchange)(listener)(false)(win);
          };
      };
  };
  var matchesWith = function (dictFoldable) {
      return function (parser) {
          return function (cb) {
              var go = function (a) {
                  var $7 = Data_Maybe.maybe(Control_Applicative.pure(Effect.applicativeEffect)(a))(function (b) {
                      return Data_Functor.voidRight(Effect.functorEffect)(new Data_Maybe.Just(b))(cb(a)(b));
                  });
                  var $8 = Data_Foldable.indexl(dictFoldable)(0);
                  return function ($9) {
                      return $7($8(parser($9)));
                  };
              };
              return foldHashes(go)(go(Data_Maybe.Nothing.value));
          };
      };
  };
  var hashes = matchesWith(Data_Foldable.foldableMaybe)(Data_Maybe.Just.create);
  exports["hashes"] = hashes;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Web.HTML.Common"] = $PS["Web.HTML.Common"] || {};
  var exports = $PS["Web.HTML.Common"];
  var ClassName = function (x) {
      return x;
  };
  exports["ClassName"] = ClassName;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.Storybook"] = $PS["Halogen.Storybook"] || {};
  var exports = $PS["Halogen.Storybook"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_VDom_Driver = $PS["Halogen.VDom.Driver"];
  var JSURI = $PS["JSURI"];
  var Routing_Hash = $PS["Routing.Hash"];
  var Type_Proxy = $PS["Type.Proxy"];
  var Web_HTML_Common = $PS["Web.HTML.Common"];                
  var RouteChange = (function () {
      function RouteChange(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RouteChange.create = function (value0) {
          return function (value1) {
              return new RouteChange(value0, value1);
          };
      };
      return RouteChange;
  })();
  var handleQuery = function (v) {
      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (state) {
          var $15 = {};
          for (var $16 in state) {
              if ({}.hasOwnProperty.call(state, $16)) {
                  $15[$16] = state[$16];
              };
          };
          $15.route = v.value0;
          return $15;
      })))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(new Data_Maybe.Just(v.value1));
      });
  };
  var class_ = function ($44) {
      return Halogen_HTML_Properties.class_(Web_HTML_Common.ClassName($44));
  };
  var renderStoryNames = function (v) {
      return function (items) {
          var linkActiveClass = "Storybook-link" + " is-active";
          return Halogen_HTML_Elements.ul([ class_("Storybook-nav-list") ])(Data_Functor.mapFlipped(Data_Functor.functorArray)(Data_Array.sortWith(Data_Ord.ordString)(function (v1) {
              return v1.name;
          })(items))(function (item) {
              return Halogen_HTML_Elements.li_([ Halogen_HTML_Elements.a([ class_((function () {
                  var $22 = v.route === item.path;
                  if ($22) {
                      return linkActiveClass;
                  };
                  return "Storybook-link";
              })()), Halogen_HTML_Properties.href("#" + Data_Maybe.fromJust()(JSURI["encodeURIComponent"](item.path))) ])([ Halogen_HTML_Core.text(item.name) ]) ]);
          }));
      };
  };
  var renderSidebar = function (stories) {
      return function (state) {
          var nameObj = Data_Foldable.foldMapDefaultL(Data_Foldable.foldableArray)(Foreign_Object.monoidObject(Data_Semigroup.semigroupArray))(function (v) {
              if (v === "") {
                  return Foreign_Object.empty;
              };
              var v1 = Data_String_CodePoints.indexOf("|")(v);
              if (v1 instanceof Data_Maybe.Nothing) {
                  return Foreign_Object.singleton("")([ {
                      name: v,
                      path: v
                  } ]);
              };
              if (v1 instanceof Data_Maybe.Just) {
                  var v2 = Data_String_CodePoints.splitAt(v1.value0)(v);
                  return Foreign_Object.singleton(v2.before)([ {
                      name: Data_String_CodePoints.drop(1)(v2.after),
                      path: v
                  } ]);
              };
              throw new Error("Failed pattern match at Halogen.Storybook (line 104, column 7 - line 110, column 50): " + [ v1.constructor.name ]);
          })(Foreign_Object.keys(stories));
          var sorted = Data_Array.sortWith(Data_Ord.ordString)(Data_Tuple.fst)(Foreign_Object.toUnfoldable(Data_Unfoldable.unfoldableArray)(nameObj));
          return Halogen_HTML_Elements.div([ class_("Storybook-nav") ])(Data_Functor.mapFlipped(Data_Functor.functorArray)(sorted)(function (v) {
              if (v.value0 === "") {
                  return Halogen_HTML_Elements.div([ class_("Storybook-nav-section") ])([ renderStoryNames(state)(v.value1) ]);
              };
              return Halogen_HTML_Elements.div([ class_("Storybook-nav-section") ])([ Halogen_HTML_Elements.div([ class_("Storybook-nav-section-title") ])([ Halogen_HTML_Core.text(v.value0) ]), renderStoryNames(state)(v.value1) ]);
          }));
      };
  };
  var _child = Type_Proxy["Proxy"].value;
  var renderMain = function (stories) {
      return function (state) {
          var v = Foreign_Object.lookup(state.route)(stories);
          if (v instanceof Data_Maybe.Just) {
              return Halogen_HTML.slot()({
                  reflectSymbol: function () {
                      return "child";
                  }
              })(Data_Ord.ordString)(_child)(state.route)(v.value0)(Data_Unit.unit)(Data_Void.absurd);
          };
          return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.h2_([ Halogen_HTML_Core.text("Hello world") ]), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("This site is powered by "), Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/rnons/purescript-halogen-storybook") ])([ Halogen_HTML_Core.text("halogen-storybook") ]), Halogen_HTML_Core.text(".") ]) ]);
      };
  };
  var render = function (v) {
      return function (state) {
          return Halogen_HTML_Elements.div([ class_("Storybook") ])([ Halogen_HTML_Elements.a([ class_("Storybook-logo"), Halogen_HTML_Properties.href("#") ])([ (function () {
              if (v.logo instanceof Data_Maybe.Nothing) {
                  return Halogen_HTML_Core.text("Halogen Storybook");
              };
              if (v.logo instanceof Data_Maybe.Just) {
                  return Halogen_HTML.fromPlainHTML(v.logo.value0);
              };
              throw new Error("Failed pattern match at Halogen.Storybook (line 136, column 7 - line 138, column 45): " + [ v.logo.constructor.name ]);
          })() ]), renderSidebar(v.stories)(state), Halogen_HTML_Elements.div([ class_("Storybook-main") ])([ renderMain(v.stories)(state) ]) ]);
      };
  };
  var app = function (config) {
      var initialState = {
          route: ""
      };
      return Halogen_Component.mkComponent({
          initialState: Data_Function["const"](initialState),
          render: render(config),
          "eval": Halogen_Component.mkEval({
              handleAction: Halogen_Component.defaultEval.handleAction,
              handleQuery: handleQuery,
              receive: Halogen_Component.defaultEval.receive,
              initialize: Halogen_Component.defaultEval.initialize,
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  };
  var runStorybook = function (config) {
      return function (body) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Halogen_VDom_Driver.runUI(app(config))(Data_Unit.unit)(body))(function (app$prime) {
              return Data_Functor["void"](Effect_Aff.functorAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Routing_Hash.hashes(function (v) {
                  return function (next) {
                      var v1 = JSURI["decodeURIComponent"](next);
                      if (v1 instanceof Data_Maybe.Nothing) {
                          return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                      };
                      if (v1 instanceof Data_Maybe.Just) {
                          return Effect_Aff.launchAff_(app$prime.query(Halogen_Query.mkTell(RouteChange.create(v1.value0))));
                      };
                      throw new Error("Failed pattern match at Halogen.Storybook (line 175, column 5 - line 177, column 78): " + [ v1.constructor.name ]);
                  };
              })));
          });
      };
  };
  exports["runStorybook"] = runStorybook;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Halogen.Storybook.Proxy"] = $PS["Halogen.Storybook.Proxy"] || {};
  var exports = $PS["Halogen.Storybook.Proxy"];
  var Control_Category = $PS["Control.Category"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var _child = Type_Proxy["Proxy"].value;
  var render = function (innerComponent) {
      return function (state) {
          return Halogen_HTML.slot_()({
              reflectSymbol: function () {
                  return "child";
              }
          })(Data_Ord.ordUnit)(_child)(Data_Unit.unit)(innerComponent)(state);
      };
  };
  var proxy = function (innerComponent) {
      return Halogen_Component.mkComponent({
          initialState: Control_Category.identity(Control_Category.categoryFn),
          render: render(innerComponent),
          "eval": Halogen_Component.mkEval(Halogen_Component.defaultEval)
      });
  };
  exports["proxy"] = proxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Heterogeneous.Folding"] = $PS["Heterogeneous.Folding"] || {};
  var exports = $PS["Heterogeneous.Folding"];
  var Record = $PS["Record"];
  var Type_Proxy = $PS["Type.Proxy"];
  var hfoldl = function (dict) {
      return dict.hfoldl;
  };
  var functionFolding = {
      folding: function (f) {
          return f;
      }
  };
  var foldlRecordRowList = function (dict) {
      return dict.foldlRecordRowList;
  };
  var hfoldlRecord = function (dictRowToList) {
      return function (dictFoldlRecord) {
          return {
              hfoldl: function (f) {
                  return function (x) {
                      return foldlRecordRowList(dictFoldlRecord)(f)(x)(Type_Proxy["Proxy"].value);
                  };
              }
          };
      };
  };
  var foldlRecordNil = {
      foldlRecordRowList: function (v) {
          return function (x) {
              return function (v1) {
                  return function (v2) {
                      return x;
                  };
              };
          };
      }
  };
  var foldingWithIndex = function (dict) {
      return dict.foldingWithIndex;
  };
  var foldlRecordCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictFoldingWithIndex) {
              return function (dictFoldlRecord) {
                  return {
                      foldlRecordRowList: function (f) {
                          return function (x) {
                              return function (v) {
                                  return function (r) {
                                      return foldlRecordRowList(dictFoldlRecord)(f)(foldingWithIndex(dictFoldingWithIndex)(f)(Type_Proxy["Proxy"].value)(x)(Record.get(dictIsSymbol)()(Type_Proxy["Proxy"].value)(r)))(Type_Proxy["Proxy"].value)(r);
                                  };
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var folding = function (dict) {
      return dict.folding;
  };
  var constFolding = function (dictFolding) {
      return {
          foldingWithIndex: function (v) {
              return function (v1) {
                  return folding(dictFolding)(v);
              };
          }
      };
  };
  exports["hfoldl"] = hfoldl;
  exports["functionFolding"] = functionFolding;
  exports["constFolding"] = constFolding;
  exports["hfoldlRecord"] = hfoldlRecord;
  exports["foldlRecordCons"] = foldlRecordCons;
  exports["foldlRecordNil"] = foldlRecordNil;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Heterogeneous.Mapping"] = $PS["Heterogeneous.Mapping"] || {};
  var exports = $PS["Heterogeneous.Mapping"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Record_Builder = $PS["Record.Builder"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var ConstMapping = function (x) {
      return x;
  };
  var mappingWithIndex = function (dict) {
      return dict.mappingWithIndex;
  };
  var mappingFunction = {
      mapping: function (k) {
          return k;
      }
  };
  var mapping = function (dict) {
      return dict.mapping;
  };
  var mapRecordWithIndexNil = {
      mapRecordWithIndexBuilder: function (v) {
          return function (v1) {
              return Control_Category.identity(Record_Builder.categoryBuilder);
          };
      }
  };
  var mapRecordWithIndexBuilder = function (dict) {
      return dict.mapRecordWithIndexBuilder;
  };
  var mapRecordWithIndexCons = function (dictIsSymbol) {
      return function (dictMappingWithIndex) {
          return function (dictMapRecordWithIndex) {
              return function (dictCons) {
                  return function (dictCons1) {
                      return {
                          mapRecordWithIndexBuilder: function (v) {
                              return function (f) {
                                  return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(Record_Builder.modify()()(dictIsSymbol)(Type_Proxy["Proxy"].value)(mappingWithIndex(dictMappingWithIndex)(f)(Type_Proxy["Proxy"].value)))(mapRecordWithIndexBuilder(dictMapRecordWithIndex)(Type_Proxy["Proxy"].value)(f));
                              };
                          }
                      };
                  };
              };
          };
      };
  };
  var hmapRecord = function (dictRowToList) {
      return function (dictMapRecordWithIndex) {
          return {
              hmap: (function () {
                  var $84 = mapRecordWithIndexBuilder(dictMapRecordWithIndex)(Type_Proxy["Proxy"].value);
                  return function ($85) {
                      return Record_Builder.build($84(ConstMapping($85)));
                  };
              })()
          };
      };
  };
  var hmap = function (dict) {
      return dict.hmap;
  };
  var constMapping = function (dictMapping) {
      return {
          mappingWithIndex: function (v) {
              return function (v1) {
                  return mapping(dictMapping)(v);
              };
          }
      };
  };
  exports["hmap"] = hmap;
  exports["mappingFunction"] = mappingFunction;
  exports["constMapping"] = constMapping;
  exports["hmapRecord"] = hmapRecord;
  exports["mapRecordWithIndexCons"] = mapRecordWithIndexCons;
  exports["mapRecordWithIndexNil"] = mapRecordWithIndexNil;
})(PS);
(function(exports) {
                                 

  exports._unsafeStringify = JSON.stringify;
})(PS["Simple.JSON"] = PS["Simple.JSON"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Simple.JSON"] = $PS["Simple.JSON"] || {};
  var exports = $PS["Simple.JSON"];
  var $foreign = $PS["Simple.JSON"];
  var Control_Category = $PS["Control.Category"];
  var Foreign = $PS["Foreign"];
  var Record_Builder = $PS["Record.Builder"];
  var Type_Proxy = $PS["Type.Proxy"];
  var writeImplFields = function (dict) {
      return dict.writeImplFields;
  };
  var writeImpl = function (dict) {
      return dict.writeImpl;
  };
  var writeJSON = function (dictWriteForeign) {
      var $93 = writeImpl(dictWriteForeign);
      return function ($94) {
          return $foreign["_unsafeStringify"]($93($94));
      };
  };
  var writeForeignInt = {
      writeImpl: Foreign.unsafeToForeign
  };
  var writeForeignForeign = {
      writeImpl: Control_Category.identity(Control_Category.categoryFn)
  };
  var recordWriteForeign = function (dictRowToList) {
      return function (dictWriteForeignFields) {
          return {
              writeImpl: function (rec) {
                  var steps = writeImplFields(dictWriteForeignFields)(Type_Proxy["Proxy"].value)(rec);
                  return Foreign.unsafeToForeign(Record_Builder.build(steps)({}));
              }
          };
      };
  };
  var nilWriteForeignFields = {
      writeImplFields: function (v) {
          return function (v1) {
              return Control_Category.identity(Record_Builder.categoryBuilder);
          };
      }
  };
  exports["writeJSON"] = writeJSON;
  exports["writeImpl"] = writeImpl;
  exports["writeForeignForeign"] = writeForeignForeign;
  exports["writeForeignInt"] = writeForeignInt;
  exports["recordWriteForeign"] = recordWriteForeign;
  exports["nilWriteForeignFields"] = nilWriteForeignFields;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.ConstructEdges"] = $PS["WAGS.ConstructEdges"] || {};
  var exports = $PS["WAGS.ConstructEdges"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Record = $PS["Record"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var constructEdgesTuple = {
      constructEdges: function (v) {
          return function (v1) {
              return function (a) {
                  return new Data_Tuple.Tuple(Type_Proxy["Proxy"].value, new Data_Tuple.Tuple(Type_Proxy["Proxy"].value, a));
              };
          };
      }
  };
  var constructEdgesRest = {
      constructEdges: function (v) {
          return function (v1) {
              return function (a) {
                  return new Data_Tuple.Tuple(Type_Proxy["Proxy"].value, new Data_Tuple.Tuple(Type_Proxy["Proxy"].value, new Data_Tuple.Tuple(a, {})));
              };
          };
      }
  };
  var constructEdgesNormVal = function (dictTypeToSym) {
      return function (dictEdgeableT) {
          return function (dictAutoIncrementingInsert) {
              return function (dictNatToSym) {
                  return function (dictAppend) {
                      return function (dictAppend1) {
                          return function (dictIsSymbol) {
                              return function (dictLacks) {
                                  return function (dictCons) {
                                      return {
                                          constructEdges: function (v) {
                                              return function (v1) {
                                                  return function (v2) {
                                                      return new Data_Tuple.Tuple(Type_Proxy["Proxy"].value, new Data_Tuple.Tuple(Type_Proxy["Proxy"].value, new Data_Tuple.Tuple(v2.value0, Record.insert(dictIsSymbol)()()(Type_Proxy["Proxy"].value)(v2.value1)({}))));
                                                  };
                                              };
                                          }
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var constructEdges = function (dict) {
      return dict.constructEdges;
  };
  exports["constructEdges"] = constructEdges;
  exports["constructEdgesTuple"] = constructEdgesTuple;
  exports["constructEdgesNormVal"] = constructEdgesNormVal;
  exports["constructEdgesRest"] = constructEdgesRest;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Control.Types"] = $PS["WAGS.Control.Types"] || {};
  var exports = $PS["WAGS.Control.Types"];           
  var SubScene = function (x) {
      return x;
  };
  var Scene = function (x) {
      return x;
  };
  var WAG = function (x) {
      return x;
  };
  var unsafeWAG = WAG;
  var unsafeUnWAG = function (v) {
      return {
          context: v.context,
          value: v.value
      };
  };
  var unFrame = function (dict) {
      return dict.unFrame;
  };
  var oneSubFrame = function (v) {
      return v;
  };
  var oneFrame = function (v) {
      return v;
  };
  var isSceneSubScene = {
      getFrame: oneSubFrame,
      unFrame: SubScene
  };
  var isSceneScene = {
      getFrame: oneFrame,
      unFrame: Scene
  };
  var getFrame = function (dict) {
      return dict.getFrame;
  };
  var functorWAG = {
      map: function (f) {
          return function (m) {
              return {
                  value: f(m.value),
                  context: m.context
              };
          };
      }
  };
  var extendWAG = {
      extend: function (f) {
          return function (v) {
              return {
                  context: v.context,
                  value: f(v)
              };
          };
      },
      Functor0: function () {
          return functorWAG;
      }
  };
  var comonadWAG = {
      extract: function (v) {
          return v.value;
      },
      Extend0: function () {
          return extendWAG;
      }
  };
  exports["oneFrame"] = oneFrame;
  exports["oneSubFrame"] = oneSubFrame;
  exports["unsafeUnWAG"] = unsafeUnWAG;
  exports["unsafeWAG"] = unsafeWAG;
  exports["getFrame"] = getFrame;
  exports["unFrame"] = unFrame;
  exports["functorWAG"] = functorWAG;
  exports["comonadWAG"] = comonadWAG;
  exports["isSceneScene"] = isSceneScene;
  exports["isSceneSubScene"] = isSceneSubScene;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Graph.AudioUnit"] = $PS["WAGS.Graph.AudioUnit"] || {};
  var exports = $PS["WAGS.Graph.AudioUnit"];
  var Tumult = function (x) {
      return x;
  };   
  var TStereoPanner = (function () {
      function TStereoPanner() {

      };
      TStereoPanner.value = new TStereoPanner();
      return TStereoPanner;
  })();
  var TSquareOsc = (function () {
      function TSquareOsc() {

      };
      TSquareOsc.value = new TSquareOsc();
      return TSquareOsc;
  })();
  var TSinOsc = (function () {
      function TSinOsc() {

      };
      TSinOsc.value = new TSinOsc();
      return TSinOsc;
  })();
  var TSawtoothOsc = (function () {
      function TSawtoothOsc() {

      };
      TSawtoothOsc.value = new TSawtoothOsc();
      return TSawtoothOsc;
  })();
  var TPlayBuf = (function () {
      function TPlayBuf() {

      };
      TPlayBuf.value = new TPlayBuf();
      return TPlayBuf;
  })();
  var TPeaking = (function () {
      function TPeaking() {

      };
      TPeaking.value = new TPeaking();
      return TPeaking;
  })();
  var TNotch = (function () {
      function TNotch() {

      };
      TNotch.value = new TNotch();
      return TNotch;
  })();
  var TLowshelf = (function () {
      function TLowshelf() {

      };
      TLowshelf.value = new TLowshelf();
      return TLowshelf;
  })();
  var TLowpass = (function () {
      function TLowpass() {

      };
      TLowpass.value = new TLowpass();
      return TLowpass;
  })();
  var THighshelf = (function () {
      function THighshelf() {

      };
      THighshelf.value = new THighshelf();
      return THighshelf;
  })();
  var THighpass = (function () {
      function THighpass() {

      };
      THighpass.value = new THighpass();
      return THighpass;
  })();
  var TGain = (function () {
      function TGain() {

      };
      TGain.value = new TGain();
      return TGain;
  })();
  var TDelay = (function () {
      function TDelay() {

      };
      TDelay.value = new TDelay();
      return TDelay;
  })();
  var TConvolver = (function () {
      function TConvolver() {

      };
      TConvolver.value = new TConvolver();
      return TConvolver;
  })();
  var TConstant = (function () {
      function TConstant() {

      };
      TConstant.value = new TConstant();
      return TConstant;
  })();
  var TAllpass = (function () {
      function TAllpass() {

      };
      TAllpass.value = new TAllpass();
      return TAllpass;
  })();
  var XStereoPanner = function (x) {
      return x;
  };
  var StereoPanner = function (x) {
      return x;
  };
  var XSquareOsc = function (x) {
      return x;
  };
  var Speaker = (function () {
      function Speaker() {

      };
      Speaker.value = new Speaker();
      return Speaker;
  })();
  var XSinOsc = function (x) {
      return x;
  };
  var SinOsc = function (x) {
      return x;
  };
  var XSawtoothOsc = function (x) {
      return x;
  };
  var Recorder = function (x) {
      return x;
  };
  var XPlayBuf = function (x) {
      return x;
  };
  var PlayBuf = function (x) {
      return x;
  };
  var PeriodicOsc = function (x) {
      return x;
  };
  var XPeaking = function (x) {
      return x;
  };
  var OversampleTwoX = (function () {
      function OversampleTwoX() {

      };
      OversampleTwoX.value = new OversampleTwoX();
      return OversampleTwoX;
  })();
  var XNotch = function (x) {
      return x;
  };
  var Microphone = function (x) {
      return x;
  };
  var XLowshelf = function (x) {
      return x;
  };
  var XLowpass = function (x) {
      return x;
  };
  var LoopBuf = function (x) {
      return x;
  };
  var Input = (function () {
      function Input() {

      };
      Input.value = new Input();
      return Input;
  })();
  var XHighshelf = function (x) {
      return x;
  };
  var XHighpass = function (x) {
      return x;
  };
  var XGain = function (x) {
      return x;
  };
  var Gain = function (x) {
      return x;
  };
  var XDelay = function (x) {
      return x;
  };
  var XConvolver = function (x) {
      return x;
  };
  var XConstant = function (x) {
      return x;
  };
  var AudioWorkletNode = (function () {
      function AudioWorkletNode(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AudioWorkletNode.create = function (value0) {
          return function (value1) {
              return new AudioWorkletNode(value0, value1);
          };
      };
      return AudioWorkletNode;
  })();
  var Analyser = (function () {
      function Analyser(value0) {
          this.value0 = value0;
      };
      Analyser.create = function (value0) {
          return new Analyser(value0);
      };
      return Analyser;
  })();
  var XAllpass = function (x) {
      return x;
  };
  var Allpass = function (x) {
      return x;
  };
  var unAsSubGraph = function (v) {
      return function (dictAudioInterpret) {
          return v(dictAudioInterpret);
      };
  };
  var semigroupTStereoPanner = {
      append: function (v) {
          return function (v1) {
              return TStereoPanner.value;
          };
      }
  };
  var semigroupTSquareOsc = {
      append: function (v) {
          return function (v1) {
              return TSquareOsc.value;
          };
      }
  };
  var semigroupTSinOsc = {
      append: function (v) {
          return function (v1) {
              return TSinOsc.value;
          };
      }
  };
  var semigroupTSawtoothOsc = {
      append: function (v) {
          return function (v1) {
              return TSawtoothOsc.value;
          };
      }
  };
  var semigroupTPlayBuf = {
      append: function (v) {
          return function (v1) {
              return TPlayBuf.value;
          };
      }
  };
  var semigroupTPeaking = {
      append: function (v) {
          return function (v1) {
              return TPeaking.value;
          };
      }
  };
  var semigroupTNotch = {
      append: function (v) {
          return function (v1) {
              return TNotch.value;
          };
      }
  };
  var semigroupTLowshelf = {
      append: function (v) {
          return function (v1) {
              return TLowshelf.value;
          };
      }
  };
  var semigroupTLowpass = {
      append: function (v) {
          return function (v1) {
              return TLowpass.value;
          };
      }
  };
  var semigroupTHighshelf = {
      append: function (v) {
          return function (v1) {
              return THighshelf.value;
          };
      }
  };
  var semigroupTHighpass = {
      append: function (v) {
          return function (v1) {
              return THighpass.value;
          };
      }
  };
  var semigroupTGain = {
      append: function (v) {
          return function (v1) {
              return TGain.value;
          };
      }
  };
  var semigroupTDelay = {
      append: function (v) {
          return function (v1) {
              return TDelay.value;
          };
      }
  };
  var semigroupTConvolver = {
      append: function (v) {
          return function (v1) {
              return TConvolver.value;
          };
      }
  };
  var semigroupTConstant = {
      append: function (v) {
          return function (v1) {
              return TConstant.value;
          };
      }
  };
  var semigroupTAllpass = {
      append: function (v) {
          return function (v1) {
              return TAllpass.value;
          };
      }
  };
  var monoidTStereoPanner = {
      mempty: TStereoPanner.value,
      Semigroup0: function () {
          return semigroupTStereoPanner;
      }
  };
  var monoidTSquareOsc = {
      mempty: TSquareOsc.value,
      Semigroup0: function () {
          return semigroupTSquareOsc;
      }
  };
  var monoidTSinOsc = {
      mempty: TSinOsc.value,
      Semigroup0: function () {
          return semigroupTSinOsc;
      }
  };
  var monoidTSawtoothOsc = {
      mempty: TSawtoothOsc.value,
      Semigroup0: function () {
          return semigroupTSawtoothOsc;
      }
  };
  var monoidTPlayBuf = {
      mempty: TPlayBuf.value,
      Semigroup0: function () {
          return semigroupTPlayBuf;
      }
  };
  var monoidTPeaking = {
      mempty: TPeaking.value,
      Semigroup0: function () {
          return semigroupTPeaking;
      }
  };
  var monoidTNotch = {
      mempty: TNotch.value,
      Semigroup0: function () {
          return semigroupTNotch;
      }
  };
  var monoidTLowshelf = {
      mempty: TLowshelf.value,
      Semigroup0: function () {
          return semigroupTLowshelf;
      }
  };
  var monoidTLowpass = {
      mempty: TLowpass.value,
      Semigroup0: function () {
          return semigroupTLowpass;
      }
  };
  var monoidTHighshelf = {
      mempty: THighshelf.value,
      Semigroup0: function () {
          return semigroupTHighshelf;
      }
  };
  var monoidTHighpass = {
      mempty: THighpass.value,
      Semigroup0: function () {
          return semigroupTHighpass;
      }
  };
  var monoidTGain = {
      mempty: TGain.value,
      Semigroup0: function () {
          return semigroupTGain;
      }
  };
  var monoidTDelay = {
      mempty: TDelay.value,
      Semigroup0: function () {
          return semigroupTDelay;
      }
  };
  var monoidTConvolver = {
      mempty: TConvolver.value,
      Semigroup0: function () {
          return semigroupTConvolver;
      }
  };
  var monoidTConstant = {
      mempty: TConstant.value,
      Semigroup0: function () {
          return semigroupTConstant;
      }
  };
  var monoidTAllpass = {
      mempty: TAllpass.value,
      Semigroup0: function () {
          return semigroupTAllpass;
      }
  };
  exports["Allpass"] = Allpass;
  exports["XAllpass"] = XAllpass;
  exports["Analyser"] = Analyser;
  exports["AudioWorkletNode"] = AudioWorkletNode;
  exports["XConstant"] = XConstant;
  exports["XConvolver"] = XConvolver;
  exports["XDelay"] = XDelay;
  exports["Gain"] = Gain;
  exports["XGain"] = XGain;
  exports["XHighpass"] = XHighpass;
  exports["XHighshelf"] = XHighshelf;
  exports["Input"] = Input;
  exports["LoopBuf"] = LoopBuf;
  exports["XLowpass"] = XLowpass;
  exports["XLowshelf"] = XLowshelf;
  exports["Microphone"] = Microphone;
  exports["XNotch"] = XNotch;
  exports["XPeaking"] = XPeaking;
  exports["PeriodicOsc"] = PeriodicOsc;
  exports["PlayBuf"] = PlayBuf;
  exports["XPlayBuf"] = XPlayBuf;
  exports["Recorder"] = Recorder;
  exports["XSawtoothOsc"] = XSawtoothOsc;
  exports["SinOsc"] = SinOsc;
  exports["XSinOsc"] = XSinOsc;
  exports["Speaker"] = Speaker;
  exports["XSquareOsc"] = XSquareOsc;
  exports["StereoPanner"] = StereoPanner;
  exports["XStereoPanner"] = XStereoPanner;
  exports["unAsSubGraph"] = unAsSubGraph;
  exports["Tumult"] = Tumult;
  exports["OversampleTwoX"] = OversampleTwoX;
  exports["monoidTAllpass"] = monoidTAllpass;
  exports["monoidTConstant"] = monoidTConstant;
  exports["monoidTConvolver"] = monoidTConvolver;
  exports["monoidTDelay"] = monoidTDelay;
  exports["monoidTGain"] = monoidTGain;
  exports["monoidTHighpass"] = monoidTHighpass;
  exports["monoidTHighshelf"] = monoidTHighshelf;
  exports["monoidTLowpass"] = monoidTLowpass;
  exports["monoidTLowshelf"] = monoidTLowshelf;
  exports["monoidTNotch"] = monoidTNotch;
  exports["monoidTPeaking"] = monoidTPeaking;
  exports["monoidTPlayBuf"] = monoidTPlayBuf;
  exports["monoidTSawtoothOsc"] = monoidTSawtoothOsc;
  exports["monoidTSinOsc"] = monoidTSinOsc;
  exports["monoidTSquareOsc"] = monoidTSquareOsc;
  exports["monoidTStereoPanner"] = monoidTStereoPanner;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Graph.Parameter"] = $PS["WAGS.Graph.Parameter"] || {};
  var exports = $PS["WAGS.Graph.Parameter"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Array_NonEmpty_Internal = $PS["Data.Array.NonEmpty.Internal"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Show = $PS["Data.Show"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Variant = $PS["Data.Variant"];
  var Data_Variant_Internal = $PS["Data.Variant.Internal"];
  var Data_Variant_Maybe = $PS["Data.Variant.Maybe"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var OnOff = function (x) {
      return x;
  };
  var AudioSingleNumberTransition = function (x) {
      return x;
  };
  var AudioSingleNumber = function (x) {
      return x;
  };
  var AudioParameterCancellation = function (x) {
      return x;
  };
  var AudioOnOff = function (x) {
      return x;
  };
  var AudioEnvelope = function (x) {
      return x;
  };
  var AudioParameter = function (x) {
      return x;
  };
  var singleNumber = (function () {
      var $162 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "singleNumber";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($163) {
          return AudioParameter($162($163));
      };
  })();
  var showAudioParameterCancellation = Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "hold";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "timeOffset";
      }
  })(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(Data_Show.showBoolean));
  var showAudioEnvelope = Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "duration";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "timeOffset";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "values";
      }
  })(Data_Show.showRecordFieldsNil)(Data_Array_NonEmpty_Internal.showNonEmptyArray(Data_Show.showNumber)))(Data_Show.showNumber))(Data_Show.showNumber));
  var showOnOff = {
      show: (function () {
          var $164 = Data_Variant.match()()()({
              on: Data_Function["const"]("on"),
              off: Data_Function["const"]("off"),
              offOn: Data_Function["const"]("offOn")
          });
          var $165 = Data_Newtype.unwrap();
          return function ($166) {
              return $164($165($166));
          };
      })()
  };
  var showAudioOnOff = Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "onOff";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "timeOffset";
      }
  })(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(showOnOff));
  var showAudioSingleNumberTransition = {
      show: (function () {
          var $167 = Data_Variant.match()()()({
              noRamp: Data_Function["const"]("NoRamp"),
              linearRamp: Data_Function["const"]("LinearRamp"),
              exponentialRamp: Data_Function["const"]("ExponentialRamp"),
              immediately: Data_Function["const"]("Immediately")
          });
          var $168 = Data_Newtype.unwrap();
          return function ($169) {
              return $167($168($169));
          };
      })()
  };
  var showAudioSingleNumber = Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "param";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "timeOffset";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "transition";
      }
  })(Data_Show.showRecordFieldsNil)(showAudioSingleNumberTransition))(Data_Show.showNumber))(Data_Show.showNumber));
  var showAudioParameter = Data_Variant.showVariant()(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsNil)({
      reflectSymbol: function () {
          return "singleNumber";
      }
  }))({
      reflectSymbol: function () {
          return "envelope";
      }
  }))({
      reflectSymbol: function () {
          return "cancellation";
      }
  }))(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantNil)(showAudioSingleNumber))(showAudioEnvelope))(showAudioParameterCancellation));
  var lensTimeAudioSingleNumber = {
      lensTime: function (dictStrong) {
          return Data_Lens_Lens.lens((function () {
              var $170 = Data_Newtype.unwrap();
              return function ($171) {
                  return (function (v) {
                      return v.timeOffset;
                  })($170($171));
              };
          })())(function (v) {
              return function ($172) {
                  return AudioSingleNumber((function (v1) {
                      return {
                          param: v.param,
                          timeOffset: v1,
                          transition: v.transition
                      };
                  })($172));
              };
          })(dictStrong);
      }
  };
  var lensTimeAudioParameterCancellation = {
      lensTime: function (dictStrong) {
          return Data_Lens_Lens.lens((function () {
              var $173 = Data_Newtype.unwrap();
              return function ($174) {
                  return (function (v) {
                      return v.timeOffset;
                  })($173($174));
              };
          })())(function (v) {
              return function ($175) {
                  return AudioParameterCancellation((function (v1) {
                      return {
                          timeOffset: v1,
                          hold: v.hold
                      };
                  })($175));
              };
          })(dictStrong);
      }
  };
  var lensTimeAudioOnOff = {
      lensTime: function (dictStrong) {
          return Data_Lens_Lens.lens((function () {
              var $176 = Data_Newtype.unwrap();
              return function ($177) {
                  return (function (v) {
                      return v.timeOffset;
                  })($176($177));
              };
          })())(function (v) {
              return function ($178) {
                  return AudioOnOff((function (v1) {
                      return {
                          onOff: v.onOff,
                          timeOffset: v1
                      };
                  })($178));
              };
          })(dictStrong);
      }
  };
  var lensTimeAudioEnvelope = {
      lensTime: function (dictStrong) {
          return Data_Lens_Lens.lens((function () {
              var $179 = Data_Newtype.unwrap();
              return function ($180) {
                  return (function (v) {
                      return v.timeOffset;
                  })($179($180));
              };
          })())(function (v) {
              return function ($181) {
                  return AudioEnvelope((function (v1) {
                      return {
                          values: v.values,
                          timeOffset: v1,
                          duration: v.duration
                      };
                  })($181));
              };
          })(dictStrong);
      }
  };
  var lensTime = function (dict) {
      return dict.lensTime;
  };
  var justMM = {
      mm: Control_Applicative.pure(Data_Variant_Maybe.applicativeMaybe)
  };
  var ff = function (dictTimed) {
      return Data_Lens_Setter.set(lensTime(dictTimed)(Data_Profunctor_Strong.strongFn));
  };
  var eqOnOff = {
      eq: function (x) {
          return function (y) {
              return Data_Eq.eq(Data_Variant.eqVariant()(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsNil)({
                  reflectSymbol: function () {
                      return "on";
                  }
              }))({
                  reflectSymbol: function () {
                      return "offOn";
                  }
              }))({
                  reflectSymbol: function () {
                      return "off";
                  }
              }))(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantNil)(Data_Eq.eqUnit))(Data_Eq.eqUnit))(Data_Eq.eqUnit)))(x)(y);
          };
      }
  };
  var ordOnOff = {
      compare: function (x) {
          return function (y) {
              return Data_Ord.compare(Data_Variant.ordVariant()(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsNil)({
                  reflectSymbol: function () {
                      return "on";
                  }
              }))({
                  reflectSymbol: function () {
                      return "offOn";
                  }
              }))({
                  reflectSymbol: function () {
                      return "off";
                  }
              }))(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantNil)(Data_Eq.eqUnit))(Data_Eq.eqUnit))(Data_Eq.eqUnit))(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantNil)(Data_Ord.ordUnit))(Data_Ord.ordUnit))(Data_Ord.ordUnit)))(x)(y);
          };
      },
      Eq0: function () {
          return eqOnOff;
      }
  };
  var eqAudioSingleNumberTransition = {
      eq: function (x) {
          return function (y) {
              return Data_Eq.eq(Data_Variant.eqVariant()(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsNil)({
                  reflectSymbol: function () {
                      return "noRamp";
                  }
              }))({
                  reflectSymbol: function () {
                      return "linearRamp";
                  }
              }))({
                  reflectSymbol: function () {
                      return "immediately";
                  }
              }))({
                  reflectSymbol: function () {
                      return "exponentialRamp";
                  }
              }))(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantNil)(Data_Eq.eqUnit))(Data_Eq.eqUnit))(Data_Eq.eqUnit))(Data_Eq.eqUnit)))(x)(y);
          };
      }
  };
  var eqAudioSingleNumber = {
      eq: function (x) {
          return function (y) {
              return x.param === y.param && x.timeOffset === y.timeOffset && Data_Eq.eq(eqAudioSingleNumberTransition)(x.transition)(y.transition);
          };
      }
  };
  var eqAudioParameterCancellation = {
      eq: function (x) {
          return function (y) {
              return x.hold === y.hold && x.timeOffset === y.timeOffset;
          };
      }
  };
  var ordAudioParameterCancellation = {
      compare: function (x) {
          return function (y) {
              var v = Data_Ord.compare(Data_Ord.ordBoolean)(x.hold)(y.hold);
              if (v instanceof Data_Ordering.LT) {
                  return Data_Ordering.LT.value;
              };
              if (v instanceof Data_Ordering.GT) {
                  return Data_Ordering.GT.value;
              };
              return Data_Ord.compare(Data_Ord.ordNumber)(x.timeOffset)(y.timeOffset);
          };
      },
      Eq0: function () {
          return eqAudioParameterCancellation;
      }
  };
  var eqAudioOnOff = {
      eq: function (x) {
          return function (y) {
              return Data_Eq.eq(eqOnOff)(x.onOff)(y.onOff) && x.timeOffset === y.timeOffset;
          };
      }
  };
  var ordAudioOnOff = {
      compare: function (x) {
          return function (y) {
              var v = Data_Ord.compare(ordOnOff)(x.onOff)(y.onOff);
              if (v instanceof Data_Ordering.LT) {
                  return Data_Ordering.LT.value;
              };
              if (v instanceof Data_Ordering.GT) {
                  return Data_Ordering.GT.value;
              };
              return Data_Ord.compare(Data_Ord.ordNumber)(x.timeOffset)(y.timeOffset);
          };
      },
      Eq0: function () {
          return eqAudioOnOff;
      }
  };
  var eqAudioEnvelope = {
      eq: function (x) {
          return function (y) {
              return x.duration === y.duration && x.timeOffset === y.timeOffset && Data_Eq.eq(Data_Array_NonEmpty_Internal.eqNonEmptyArray(Data_Eq.eqNumber))(x.values)(y.values);
          };
      }
  };
  var eqAudioParameter = {
      eq: function (x) {
          return function (y) {
              return Data_Eq.eq(Data_Variant.eqVariant()(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsNil)({
                  reflectSymbol: function () {
                      return "singleNumber";
                  }
              }))({
                  reflectSymbol: function () {
                      return "envelope";
                  }
              }))({
                  reflectSymbol: function () {
                      return "cancellation";
                  }
              }))(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantNil)(eqAudioSingleNumber))(eqAudioEnvelope))(eqAudioParameterCancellation)))(x)(y);
          };
      }
  };
  var ordAudioEnvelope = {
      compare: function (x) {
          return function (y) {
              var v = Data_Ord.compare(Data_Ord.ordNumber)(x.duration)(y.duration);
              if (v instanceof Data_Ordering.LT) {
                  return Data_Ordering.LT.value;
              };
              if (v instanceof Data_Ordering.GT) {
                  return Data_Ordering.GT.value;
              };
              var v1 = Data_Ord.compare(Data_Ord.ordNumber)(x.timeOffset)(y.timeOffset);
              if (v1 instanceof Data_Ordering.LT) {
                  return Data_Ordering.LT.value;
              };
              if (v1 instanceof Data_Ordering.GT) {
                  return Data_Ordering.GT.value;
              };
              return Data_Ord.compare(Data_Array_NonEmpty_Internal.ordNonEmptyArray(Data_Ord.ordNumber))(x.values)(y.values);
          };
      },
      Eq0: function () {
          return eqAudioEnvelope;
      }
  };
  var envelope = (function () {
      var $191 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "envelope";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($192) {
          return AudioParameter($191($192));
      };
  })();
  var cancellation = (function () {
      var $193 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "cancellation";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($194) {
          return AudioParameter($193($194));
      };
  })();
  var lensTimeAudioParameter = {
      lensTime: function (dictStrong) {
          return Data_Lens_Lens.lens((function () {
              var $195 = Data_Variant.match()()()({
                  singleNumber: Data_Lens_Getter.view(lensTime(lensTimeAudioSingleNumber)(Data_Lens_Internal_Forget.strongForget)),
                  envelope: Data_Lens_Getter.view(lensTime(lensTimeAudioEnvelope)(Data_Lens_Internal_Forget.strongForget)),
                  cancellation: Data_Lens_Getter.view(lensTime(lensTimeAudioParameterCancellation)(Data_Lens_Internal_Forget.strongForget))
              });
              var $196 = Data_Newtype.unwrap();
              return function ($197) {
                  return $195($196($197));
              };
          })())(function (v) {
              return function (a) {
                  return Data_Variant.match()()()({
                      singleNumber: (function () {
                          var $198 = Data_Lens_Setter.set(lensTime(lensTimeAudioSingleNumber)(Data_Profunctor_Strong.strongFn))(a);
                          return function ($199) {
                              return singleNumber($198($199));
                          };
                      })(),
                      envelope: (function () {
                          var $200 = Data_Lens_Setter.set(lensTime(lensTimeAudioEnvelope)(Data_Profunctor_Strong.strongFn))(a);
                          return function ($201) {
                              return envelope($200($201));
                          };
                      })(),
                      cancellation: (function () {
                          var $202 = Data_Lens_Setter.set(lensTime(lensTimeAudioParameterCancellation)(Data_Profunctor_Strong.strongFn))(a);
                          return function ($203) {
                              return cancellation($202($203));
                          };
                      })()
                  })(v);
              };
          })(dictStrong);
      }
  };
  var cancel = {
      hold: false,
      timeOffset: 0.0
  };
  var _on = OnOff(Data_Variant.inj()({
      reflectSymbol: function () {
          return "on";
      }
  })(Type_Proxy["Proxy"].value)(Data_Unit.unit));
  var _offOn = OnOff(Data_Variant.inj()({
      reflectSymbol: function () {
          return "offOn";
      }
  })(Type_Proxy["Proxy"].value)(Data_Unit.unit));
  var _off = OnOff(Data_Variant.inj()({
      reflectSymbol: function () {
          return "off";
      }
  })(Type_Proxy["Proxy"].value)(Data_Unit.unit));                                       
  var _linearRamp = AudioSingleNumberTransition(Data_Variant.inj()({
      reflectSymbol: function () {
          return "linearRamp";
      }
  })(Type_Proxy["Proxy"].value)(Data_Unit.unit));                                               
  var _immediately = AudioSingleNumberTransition(Data_Variant.inj()({
      reflectSymbol: function () {
          return "immediately";
      }
  })(Type_Proxy["Proxy"].value)(Data_Unit.unit));                                                 
  var ordAudioSingleNumberTransition = {
      compare: function (i0) {
          return function (i1) {
              if (Data_Eq.eq(eqAudioSingleNumberTransition)(i0)(_immediately)) {
                  return Data_Ordering.LT.value;
              };
              if (Data_Eq.eq(eqAudioSingleNumberTransition)(i1)(_immediately)) {
                  return Data_Ordering.GT.value;
              };
              if (Data_Boolean.otherwise) {
                  return Data_Ordering.EQ.value;
              };
              throw new Error("Failed pattern match at WAGS.Graph.Parameter (line 194, column 1 - line 198, column 21): " + [ i0.constructor.name, i1.constructor.name ]);
          };
      },
      Eq0: function () {
          return eqAudioSingleNumberTransition;
      }
  };
  var ordAudioSingleNumber = {
      compare: function (x) {
          return function (y) {
              var v = Data_Ord.compare(Data_Ord.ordNumber)(x.param)(y.param);
              if (v instanceof Data_Ordering.LT) {
                  return Data_Ordering.LT.value;
              };
              if (v instanceof Data_Ordering.GT) {
                  return Data_Ordering.GT.value;
              };
              var v1 = Data_Ord.compare(Data_Ord.ordNumber)(x.timeOffset)(y.timeOffset);
              if (v1 instanceof Data_Ordering.LT) {
                  return Data_Ordering.LT.value;
              };
              if (v1 instanceof Data_Ordering.GT) {
                  return Data_Ordering.GT.value;
              };
              return Data_Ord.compare(ordAudioSingleNumberTransition)(x.transition)(y.transition);
          };
      },
      Eq0: function () {
          return eqAudioSingleNumber;
      }
  };
  var ordAudioParameter = {
      compare: function (x) {
          return function (y) {
              return Data_Ord.compare(Data_Variant.ordVariant()(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsNil)({
                  reflectSymbol: function () {
                      return "singleNumber";
                  }
              }))({
                  reflectSymbol: function () {
                      return "envelope";
                  }
              }))({
                  reflectSymbol: function () {
                      return "cancellation";
                  }
              }))(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantNil)(eqAudioSingleNumber))(eqAudioEnvelope))(eqAudioParameterCancellation))(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantNil)(ordAudioSingleNumber))(ordAudioEnvelope))(ordAudioParameterCancellation)))(x)(y);
          };
      },
      Eq0: function () {
          return eqAudioParameter;
      }
  };
  exports["lensTime"] = lensTime;
  exports["AudioSingleNumber"] = AudioSingleNumber;
  exports["_on"] = _on;
  exports["_off"] = _off;
  exports["_offOn"] = _offOn;
  exports["AudioOnOff"] = AudioOnOff;
  exports["_linearRamp"] = _linearRamp;
  exports["singleNumber"] = singleNumber;
  exports["envelope"] = envelope;
  exports["cancellation"] = cancellation;
  exports["cancel"] = cancel;
  exports["ff"] = ff;
  exports["eqAudioParameter"] = eqAudioParameter;
  exports["ordAudioParameter"] = ordAudioParameter;
  exports["showAudioParameter"] = showAudioParameter;
  exports["eqAudioOnOff"] = eqAudioOnOff;
  exports["ordAudioOnOff"] = ordAudioOnOff;
  exports["showAudioOnOff"] = showAudioOnOff;
  exports["lensTimeAudioParameter"] = lensTimeAudioParameter;
  exports["lensTimeAudioOnOff"] = lensTimeAudioOnOff;
  exports["justMM"] = justMM;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Graph.Paramable"] = $PS["WAGS.Graph.Paramable"] || {};
  var exports = $PS["WAGS.Graph.Paramable"];
  var Control_Category = $PS["Control.Category"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];                
  var paramize = function (dict) {
      return dict.paramize;
  };
  var paramableNumber = {
      paramize: function ($4) {
          return WAGS_Graph_Parameter.singleNumber(WAGS_Graph_Parameter.AudioSingleNumber((function (v) {
              return {
                  timeOffset: 0.0,
                  transition: WAGS_Graph_Parameter["_linearRamp"],
                  param: v
              };
          })($4)));
      }
  };
  var paramableEnvelope = {
      paramize: WAGS_Graph_Parameter.envelope
  };
  var paramableCancellation = {
      paramize: WAGS_Graph_Parameter.cancellation
  };
  var paramableAudioParameter = {
      paramize: Control_Category.identity(Control_Category.categoryFn)
  };
  var onOffIzeOnOff = {
      onOffIze: function ($5) {
          return WAGS_Graph_Parameter.AudioOnOff((function (v) {
              return {
                  timeOffset: 0.0,
                  onOff: v
              };
          })($5));
      }
  };
  var onOffIze = function (dict) {
      return dict.onOffIze;
  };
  exports["onOffIze"] = onOffIze;
  exports["paramize"] = paramize;
  exports["paramableNumber"] = paramableNumber;
  exports["paramableCancellation"] = paramableCancellation;
  exports["paramableEnvelope"] = paramableEnvelope;
  exports["paramableAudioParameter"] = paramableAudioParameter;
  exports["onOffIzeOnOff"] = onOffIzeOnOff;
})(PS);
(function(exports) {
  var SINGLE_NUMBER = "singleNumber";
  var CANCELLATION = "cancellation";
  var IMMEDIATELY = "immediately";
  var NO_RAMP = "noRamp";
  var LINEAR_RAMP = "linearRamp";
  var EXPONENTIAL_RAMP = "exponentialRamp";
  var ENVELOPE = "envelope";
  exports.context = function () {
	  return new (window.AudioContext || window.webkitAudioContext)();
  };
  exports.contextState = function (audioCtx) {
	  return function () {
		  return audioCtx.state;
	  };
  };
  exports.contextResume = function (audioCtx) {
	  return function () {
		  return audioCtx.resume();
	  };
  };
  var isOn = function (param) {
	  return param.type === "on" || param.type === "offOn";
  };
  var makeid = function (length) {
	  var result = "";
	  var characters =
		  "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
	  var charactersLength = characters.length;
	  for (var i = 0; i < length; i++) {
		  result += characters.charAt(Math.floor(Math.random() * charactersLength));
	  }
	  return result;
  };

  exports.makeFFIAudioSnapshot = function (audioCtx) {
	  return function () {
		  return {
			  context: audioCtx,
			  writeHead: 0.0,
			  units: {},
			  unqidfr: makeid(10),
		  };
	  };
  };

  exports.contextFromSnapshot = function (snapshot) {
	  return snapshot.context;
  };

  exports.advanceWriteHead = function (snapshot) {
	  return function (writeHead) {
		  return function () {
			  snapshot.writeHead = writeHead;
		  };
	  };
  };

  exports.close = function (audioCtx) {
	  return function () {
		  audioCtx.close();
	  };
  };
  var genericStarter = function (unit, name, param) {
	  if (param.type === ENVELOPE) {
		  unit[name].setValueCurveAtTime(
			  param.value.values,
			  0.0,
			  param.value.duration
		  );
	  } else if (param.type === SINGLE_NUMBER) {
		  unit[name].value = param.value.param;
	  }
  };
  var protoSetter = function (thingee, timeToSet, param) {
	  if (
		  param.type === SINGLE_NUMBER &&
		  param.value.transition.type === IMMEDIATELY
	  ) {
		  thingee.value = param.value.param;
	  } else {
		  if (param.type === SINGLE_NUMBER) {
			  thingee[
				  param.value.transition.type === NO_RAMP
					  ? "setValueAtTime"
					  : param.value.transition.type === LINEAR_RAMP
					  ? "linearRampToValueAtTime"
					  : param.value.transition.type === EXPONENTIAL_RAMP
					  ? "exponentialRampToValueAtTime"
					  : "linearRampToValueAtTime"
			  ](param.value.param, timeToSet + param.value.timeOffset);
		  } else if (isCancellation(param)) {
			  param.value.hold
				  ? thingee.cancelAndHoldAtTime(timeToSet + param.value.timeOffset)
				  : thingee.cancelScheduledValues(timeToSet + param.value.timeOffset);
		  } else if (param.type === ENVELOPE) {
			  // envelope is last option
			  thingee.cancelScheduledValues(timeToSet + param.value.timeOffset - 0.001);
			  thingee.setValueCurveAtTime(
				  param.value.values,
				  timeToSet + param.value.timeOffset,
				  param.value.duration
			  );
		  } else {
			  throw new Error("No idea what to do with " + JSON.stringify(param));
		  }
	  }
  };
  var workletSetter = function (unit, paramName, timeToSet, param) {
	  return protoSetter(unit.parameters.get(paramName), timeToSet, param);
  };
  var genericSetter = function (unit, name, timeToSet, param) {
	  return protoSetter(unit[name], timeToSet, param);
  };
  var connectXToY = function (calledExternally) {
	  return function (x) {
		  return function (y) {
			  return function (stateX) {
				  return function (stateY) {
					  return function () {
						  if (
							  calledExternally &&
							  (stateY.units[y].isSubgraph || stateY.units[y].isTumult)
						  ) {
							  return;
						  }
						  stateX.units[x].main.connect(stateY.units[y].main);
						  stateX.units[x].outgoing.push({ unit: y, state: stateY });
						  stateY.units[y].incoming.push({ unit: x, state: stateX });
						  if (stateY.units[y].se) {
							  stateX.units[x].main.connect(stateY.units[y].se);
						  }
					  };
				  };
			  };
		  };
	  };
  };
  exports.connectXToY_ = function (x) {
	  return function (state) {
		  return connectXToY(true)(x.fromId)(x.toId)(state)(state);
	  };
  };
  var disconnectXFromY = function (calledExternally) {
	  return function (x) {
		  return function (y) {
			  return function (stateX) {
				  return function (stateY) {
					  return function () {
						  if (
							  calledExternally &&
							  (stateY.units[y].isSubgraph || stateY.units[y].isTumult)
						  ) {
							  return;
						  }
						  stateX.units[x].main.disconnect(stateY.units[y].main);
						  stateX.units[x].outgoing = stateX.units[x].outgoing.filter(
							  function (i) {
								  return !(i.unit === y && i.state.unqidfr === stateY.unqidfr);
							  }
						  );
						  stateY.units[y].incoming = stateY.units[y].incoming.filter(
							  function (i) {
								  return !(i.unit === x && i.state.unqidfr === stateX.unqidfr);
							  }
						  );
						  if (stateY.units[y].se) {
							  stateX.units[x].main.disconnect(stateY.units[y].se);
						  }
					  };
				  };
			  };
		  };
	  };
  };
  exports.disconnectXFromY_ = function (x) {
	  return function (state) {
		  return disconnectXFromY(true)(x.fromId)(x.toId)(state)(state);
	  };
  };
  exports.destroyUnit_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  // hack for recorder
			  if (state.units[ptr].recorder) {
				  state.units[ptr].recorder.stop();
			  }
			  // hack for analyser
			  if (state.units[ptr].analyser) {
				  // effectful unsubscribe
				  state.units[ptr].analyser();
			  }
			  if (state.units[ptr].input) {
				  // input sources are never disconnected on disconnect, so we have to manually trigger this
				  disconnectXFromY(false)(state.units[ptr].input)(ptr)(
					  state.units[ptr].parent
				  )(state)();
			  }
			  delete state.units[ptr];
		  };
	  };
  };
  exports.renderAudio = function (arrayToApply) {
	  return function () {
		  for (var i = 0; i < arrayToApply.length; i++) {
			  arrayToApply[i]();
		  }
	  };
  };
  exports.getAudioClockTime = function (ctx) {
	  return function () {
		  return ctx.currentTime;
	  };
  };
  exports.makeAllpass_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  main: state.context.createBiquadFilter(),
			  };
			  state.units[ptr].main.type = "allpass";
			  genericStarter(state.units[ptr].main, "frequency", a.freq);
			  genericStarter(state.units[ptr].main, "Q", a.q);
		  };
	  };
  };
  exports.makeAnalyser_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  var analyserSideEffectFunction = a.cb;
			  var dest = state.context.createAnalyser();
			  // todo - unhardcode?
			  dest.fftSize = 2048;
			  // unsubscribe is effect unit
			  var unsubscribe = analyserSideEffectFunction(dest)();
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  analyserOrig: analyserSideEffectFunction,
				  analyser: unsubscribe,
				  main: state.context.createGain(),
				  se: dest,
			  };
		  };
	  };
  };
  exports.setAnalyserNodeCb_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.cb;
			  if (state.units[ptr].analyserOrig === a) {
				  return;
			  }
			  // first, unsubscribe
			  state.units[ptr].analyser && state.units[ptr].analyser();
			  state.units[ptr].analyser = a(state.units[ptr].se)();
			  state.units[ptr].analyserOrig = a;
		  };
	  };
  };
  var isCancellation = function (a) {
	  return a.type === CANCELLATION;
  };
  exports.makeAudioWorkletNode_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.options;
			  var parameterData = {};
			  var keys = Object.keys(a.parameterData);
			  for (var i = 0; i < keys.length; i++) {
				  if (a.parameterData[keys[i]].type === SINGLE_NUMBER) {
					  parameterData[keys[i]] = a.parameterData[keys[i]].value.param;
				  }
			  }
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  main: new AudioWorkletNode(state.context, a.name, {
					  numberOfInputs: a.numberOfInputs,
					  numberOfOutputs: a.numberOfOutputs,
					  outputChannelCount: a.outputChannelCount,
					  parameterData: parameterData,
					  processorOptions: a.processorOptions,
				  }),
			  };
		  };
	  };
  };
  exports.makeBandpass_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  main: state.context.createBiquadFilter(),
			  };
			  state.units[ptr].main.type = "bandpass";
			  genericStarter(state.units[ptr].main, "frequency", a.freq);
			  genericStarter(state.units[ptr].main, "Q", a.q);
		  };
	  };
  };
  exports.makeConstant_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var onOff = aa.onOff;
			  var a = aa.offset;
			  var createFunction = function () {
				  var unit = state.context.createConstantSource();
				  return unit;
			  };
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  resumeClosure: {
					  offset: function (i) {
						  genericStarter(i, "offset", a);
					  },
				  },
				  createFunction: createFunction,
				  main: createFunction(),
			  };
			  applyResumeClosure(state.units[ptr]);
			  if (isOn(onOff.onOff)) {
				  state.units[ptr].main.start(state.writeHead + onOff.timeOffset);
			  }
			  state.units[ptr].onOff = isOn(onOff.onOff);
		  };
	  };
  };

  exports.makeConvolver_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  main: state.context.createConvolver(),
			  };
			  state.units[ptr].main.buffer = a.buffer;
		  };
	  };
  };

  exports.makePassthroughConvolver_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  main: state.context.createConvolver(),
			  };
		  };
	  };
  };
  exports.makeDelay_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  main: state.context.createDelay(),
			  };
			  genericStarter(state.units[ptr].main, "delayTime", a.delayTime);
		  };
	  };
  };
  exports.makeDynamicsCompressor_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  state.units[ptr] = {
				  main: state.context.createDynamicsCompressor(),
				  outgoing: [],
				  incoming: [],
			  };
			  genericStarter(state.units[ptr].main, "threshold", a.threshold);
			  genericStarter(state.units[ptr].main, "knee", a.knee);
			  genericStarter(state.units[ptr].main, "ratio", a.ratio);
			  genericStarter(state.units[ptr].main, "attack", a.attack);
			  genericStarter(state.units[ptr].main, "release", a.release);
		  };
	  };
  };
  exports.makeGain_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  main: state.context.createGain(),
			  };
			  genericStarter(state.units[ptr].main, "gain", a.gain);
		  };
	  };
  };
  exports.makeHighpass_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  main: state.context.createBiquadFilter(),
			  };
			  state.units[ptr].main.type = "highpass";
			  genericStarter(state.units[ptr].main, "frequency", a.freq);
			  genericStarter(state.units[ptr].main, "Q", a.q);
		  };
	  };
  };
  exports.makeHighshelf_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  main: state.context.createBiquadFilter(),
			  };
			  state.units[ptr].main.type = "highshelf";
			  genericStarter(state.units[ptr].main, "frequency", a.freq);
			  genericStarter(state.units[ptr].main, "gain", a.gain);
		  };
	  };
  };
  exports.makeLoopBufWithDeferredBuffer_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  var createFunction = function () {
				  var unit = state.context.createBufferSource();
				  unit.loop = true;
				  return unit;
			  };
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  createFunction: createFunction,
				  resumeClosure: {},
				  main: createFunction(),
			  };
		  };
	  };
  };
  exports.makeLoopBuf_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var onOff = aa.onOff;
			  var a = aa.buffer;
			  var b = aa.playbackRate;
			  var c = aa.loopStart;
			  var d = aa.loopEnd;
			  var createFunction = function () {
				  var unit = state.context.createBufferSource();
				  unit.loop = true;
				  return unit;
			  };
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  createFunction: createFunction,
				  resumeClosure: {
					  playbackRate: function (i) {
						  genericStarter(i, "playbackRate", b);
					  },
					  loopStart: function (i) {
						  i.loopStart = c;
					  },
					  loopEnd: function (i) {
						  i.loopEnd = d;
					  },
					  buffer: function (i) {
						  i.buffer = a;
					  },
				  },
				  main: createFunction(),
			  };
			  if (isOn(onOff.onOff)) {
				  applyResumeClosure(state.units[ptr]);
				  state.units[ptr].main.start(state.writeHead + onOff.timeOffset, c);
			  }
			  state.units[ptr].onOff = isOn(onOff.onOff);
		  };
	  };
  };
  exports.makeLowpass_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  main: state.context.createBiquadFilter(),
			  };
			  state.units[ptr].main.type = "lowpass";
			  genericStarter(state.units[ptr].main, "frequency", a.freq);
			  genericStarter(state.units[ptr].main, "Q", a.q);
		  };
	  };
  };
  exports.makeLowshelf_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  main: state.context.createBiquadFilter(),
			  };
			  state.units[ptr].main.type = "lowshelf";
			  genericStarter(state.units[ptr].main, "frequency", a.freq);
			  genericStarter(state.units[ptr].main, "gain", a.gain);
		  };
	  };
  };
  exports.makeMediaElement_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  var elt = a.element;
			  var createFunction = function () {
				  var unit = state.context.createMediaElementSource(elt);
				  return unit;
			  };
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  createFunction: createFunction,
				  resumeClosure: {},
				  main: createFunction(),
			  };
		  };
	  };
  };

  exports.makeMicrophone_ = function (a) {
	  return function (state) {
		  return function () {
			  state.units["microphone"] = {
				  main: state.context.createMediaStreamSource(a.microphone),
				  outgoing: [],
				  incoming: [],
			  };
		  };
	  };
  };
  exports.makeNotch_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  main: state.context.createBiquadFilter(),
			  };
			  state.units[ptr].main.type = "notch";
			  genericStarter(state.units[ptr].main, "frequency", a.freq);
			  genericStarter(state.units[ptr].main, "Q", a.q);
		  };
	  };
  };

  exports.makePeaking_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  main: state.context.createBiquadFilter(),
			  };
			  state.units[ptr].main.type = "peaking";
			  genericStarter(state.units[ptr].main, "frequency", a.freq);
			  genericStarter(state.units[ptr].main, "Q", a.q);
			  genericStarter(state.units[ptr].main, "gain", a.gain);
		  };
	  };
  };

  exports.makePeriodicOscWithDeferredOsc_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  var createFunction = function () {
				  var unit = state.context.createOscillator();
				  return unit;
			  };
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  createFunction: createFunction,
				  resumeClosure: {},
				  main: createFunction(),
			  };
		  };
	  };
  };

  exports.makePeriodicOsc_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.wave;
			  var onOff = aa.onOff;
			  var b = aa.freq;
			  var createFunction = function () {
				  var unit = state.context.createOscillator();
				  return unit;
			  };
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  createFunction: createFunction,
				  resumeClosure: {
					  frequency: function (i) {
						  genericStarter(i, "frequency", b);
					  },
					  periodicOsc: function (i) {
						  i.setPeriodicWave(a);
					  },
				  },
				  main: createFunction(),
			  };
			  applyResumeClosure(state.units[ptr]);
			  if (isOn(onOff.onOff)) {
				  state.units[ptr].main.start(state.writeHead + onOff.timeOffset);
			  }
			  state.units[ptr].onOff = isOn(onOff.onOff);
		  };
	  };
  };
  exports.makePeriodicOscV_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.realImg;
			  var onOff = aa.onOff;
			  var b = aa.freq;

			  var createFunction = function () {
				  var unit = state.context.createOscillator();
				  return unit;
			  };
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  createFunction: createFunction,
				  resumeClosure: {
					  frequency: function (i) {
						  genericStarter(i, "frequency", b);
					  },
					  periodicOsc: function (i) {
						  i.setPeriodicWave(
							  makePeriodicWaveImpl(state.context)(a.real)(a.img)()
						  );
					  },
				  },
				  main: createFunction(),
			  };
			  applyResumeClosure(state.units[ptr]);
			  if (isOn(onOff.onOff)) {
				  state.units[ptr].main.start(state.writeHead + onOff.timeOffset);
			  }
			  state.units[ptr].onOff = isOn(onOff.onOff);
		  };
	  };
  };
  exports.makePlayBufWithDeferredBuffer_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  var createFunction = function () {
				  var unit = state.context.createBufferSource();
				  return unit;
			  };
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  createFunction: createFunction,
				  resumeClosure: {},
				  main: createFunction(),
			  };
		  };
	  };
  };
  exports.makeInput_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  main: state.context.createGain(),
				  parent: state.parent,
				  input: a.input,
			  };
			  connectXToY(false)(a.input)(ptr)(state.parent)(state)();
			  state.units[ptr].main.gain.value = 1.0;
		  };
	  };
  };
  /**
 *
 *   String
  -> String
  -> Array (Pie index env)
  -> (index -> scene)
  -> ( env
       -> scene
       -> { instructions :: Array (FFIAudioSnapshot -> Effect Unit)
          , nextScene :: scene
          }
     )
  -> FFIAudioSnapshot
  -> Effect Unit} ptr
 * @returns
 */  
  exports.makeSubgraph_ = function (ptr) {
	  return function (terminalPtr) {
		  return function (envs) {
			  return function (sceneM) {
				  return function (funkyFx) {
					  return function (state) {
						  return function () {
							  /*
							var children = [];
							var scenes = [];
							for (var i = 0; i < envs.length; i++) {
								children[i] = {
									context: state.context,
									writeHead: state.writeHead,
									units: {},
									unqidfr: makeid(10),
									parent: state,
								};
								scenes[i] = sceneM(i);
							}
							state.units[ptr] = {
								outgoing: [],
								incoming: [],
								main: state.context.createGain(),
								children: children,
								funk: funk,
								isSubgraph: true,
								scenes: scenes,
							};
							state.units[ptr].main.gain.value = 1.0;
							for (var i = 0; i < scenes.length; i++) {
								var applied = funk(envs[i])(scenes[i]);
								for (var j = 0; j < applied.instructions.length; j++) {
									// thunk
									applied.instructions[j](children[i])();
								}
								scenes[i] = applied.nextScene;
							}
							for (var i = 0; i < children.length; i++) {
								connectXToY(false)(terminalPtr)(ptr)(children[i])(state)();
							}*/  
							  var children = {};
							  var scenes = {};
							  var funk = {};
							  state.units[ptr] = {
								  outgoing: [],
								  incoming: [],
								  sceneM: sceneM,
								  main: state.context.createGain(),
								  funkyFx: funkyFx,
								  terminalPtr: terminalPtr,
								  isSubgraph: true,
								  scenes: scenes,
								  children: children,
								  funk: funk,
							  };
							  setSubgraph_(ptr)(envs)(state)();
						  };
					  };
				  };
			  };
		  };
	  };
  };
  /**
 *
 * String
  -> String
  -> Array (Set Instruction)
  -> Maybe (Set Instruction)
  -> (Set Instruction -> Maybe (Set Instruction))
  -> (Set Instruction -> Maybe (Set Instruction) -> Array (FFIAudioSnapshot' -> Effect Unit))
  -> FFIAudioSnapshot'
  -> Effect Unit
 */  
  exports.makeTumult_ = function (ptr) {
	  return function (terminalPtr) {
		  return function (scenes) {
			  return function (nothing) {
				  return function () {
					  return function (arrMaker) {
						  return function (state) {
							  return function () {
								  var children = [];
								  for (var i = 0; i < scenes.length; i++) {
									  children[i] = {
										  context: state.context,
										  writeHead: state.writeHead,
										  units: {},
										  parent: state,
										  unqidfr: makeid(10),
									  };
								  }
								  state.units[ptr] = {
									  outgoing: [],
									  incoming: [],
									  main: state.context.createGain(),
									  children: children,
									  isTumult: true,
									  scenes: scenes,
								  };
								  state.units[ptr].main.gain.value = 1.0;
								  for (var i = 0; i < scenes.length; i++) {
									  var curScene = arrMaker(scenes[i])(nothing);
									  for (var j = 0; j < curScene.length; j++) {
										  // thunk
										  curScene[j](children[i])();
									  }
								  }
								  var heads = [];
								  for (var i = 0; i < children.length; i++) {
									  heads[i] = children[i].units[terminalPtr];
								  }
								  state.units[ptr].heads = heads;
								  for (var i = 0; i < children.length; i++) {
									  connectXToY(false)(terminalPtr)(ptr)(children[i])(state)();
								  }
							  };
						  };
					  };
				  };
			  };
		  };
	  };
  };
  exports.makePlayBuf_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.buffer;
			  var b = aa.bufferOffset;
			  var onOff = aa.onOff;
			  var c = aa.playbackRate;
			  var createFunction = function () {
				  var unit = state.context.createBufferSource();
				  return unit;
			  };
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  bufferOffset: b,
				  createFunction: createFunction,
				  resumeClosure: {
					  playbackRate: function (i) {
						  genericStarter(i, "playbackRate", c);
					  },
					  buffer: function (i) {
						  i.buffer = a;
					  },
				  },
				  main: createFunction(),
			  };
			  if (isOn(onOff.onOff)) {
				  applyResumeClosure(state.units[ptr]);
				  state.units[ptr].main.start(state.writeHead + onOff.timeOffset, b);
			  }
			  state.units[ptr].onOff = isOn(onOff.onOff);
		  };
	  };
  };
  exports.makeRecorder_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var mediaRecorderSideEffectFn = aa.cb;
			  var dest = state.context.createMediaStreamDestination();
			  var mediaRecorder = new MediaRecorder(dest.stream);
			  mediaRecorderSideEffectFn(mediaRecorder)();
			  mediaRecorder.start();
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  recorderOrig: mediaRecorderSideEffectFn,
				  recorder: mediaRecorder,
				  main: state.context.createGain(),
				  se: dest,
			  };
		  };
	  };
  };
  // setting makes us stop the previous one if it exists
  exports.setMediaRecorderCb_ = function (aa) {
	  return function (state) {
		  return function () {
			  var a = aa.cb;
			  var ptr = aa.id;
			  if (state.units[ptr].recorderOrig === a) {
				  return;
			  }
			  state.units[ptr].recorder && state.units[ptr].recorder.stop();
			  var mediaRecorderSideEffectFn = a;
			  state.units[ptr].recorderOrig = a;
			  var mediaRecorder = new MediaRecorder(state.units[ptr].se);
			  mediaRecorderSideEffectFn(mediaRecorder)();
			  mediaRecorder.start();
		  };
	  };
  };

  exports.makeSawtoothOsc_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var onOff = aa.onOff;
			  var a = aa.freq;
			  var createFunction = function () {
				  var unit = state.context.createOscillator();
				  unit.type = "sawtooth";
				  return unit;
			  };
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  createFunction: createFunction,
				  resumeClosure: {
					  frequency: function (i) {
						  genericStarter(i, "frequency", a);
					  },
				  },
				  main: createFunction(),
			  };
			  applyResumeClosure(state.units[ptr]);
			  if (isOn(onOff.onOff)) {
				  state.units[ptr].main.start(state.writeHead + onOff.timeOffset);
			  }
			  state.units[ptr].onOff = isOn(onOff.onOff);
		  };
	  };
  };
  exports.makeSinOsc_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var onOff = aa.onOff;
			  var a = aa.freq;

			  var createFunction = function () {
				  var unit = state.context.createOscillator();
				  unit.type = "sine";
				  return unit;
			  };
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  createFunction: createFunction,
				  resumeClosure: {
					  frequency: function (i) {
						  genericStarter(i, "frequency", a);
					  },
				  },
				  main: createFunction(),
			  };
			  applyResumeClosure(state.units[ptr]);
			  if (isOn(onOff.onOff)) {
				  state.units[ptr].main.start(state.writeHead + onOff.timeOffset);
			  }
			  state.units[ptr].onOff = isOn(onOff.onOff);
		  };
	  };
  };

  exports.makeSpeaker_ = function (state) {
	  return function () {
		  state.units["speaker"] = {
			  outgoing: [],
			  incoming: [],
			  main: state.context.createGain(),
			  se: state.context.destination,
		  };
	  };
  };

  exports.makeSquareOsc_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var onOff = aa.onOff;
			  var a = aa.freq;

			  var createFunction = function () {
				  var unit = state.context.createOscillator();
				  unit.type = "square";
				  return unit;
			  };
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  createFunction: createFunction,
				  resumeClosure: {
					  frequency: function (i) {
						  genericStarter(i, "frequency", a);
					  },
				  },
				  main: createFunction(),
			  };
			  applyResumeClosure(state.units[ptr]);
			  if (isOn(onOff.onOff)) {
				  state.units[ptr].main.start(state.writeHead + onOff.timeOffset);
			  }
			  state.units[ptr].onOff = isOn(onOff.onOff);
		  };
	  };
  };

  exports.makeStereoPanner_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.pan;
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  main: state.context.createStereoPanner(),
			  };
			  genericStarter(state.units[ptr].main, "pan", a);
		  };
	  };
  };
  exports.makeTriangleOsc_ = function (aa) {
	  return function (state) {
		  var ptr = aa.id;
		  var onOff = aa.onOff;
		  var a = aa.freq;

		  return function () {
			  var createFunction = function () {
				  var unit = state.context.createOscillator();
				  unit.type = "triangle";
				  return unit;
			  };
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  createFunction: createFunction,
				  resumeClosure: {
					  frequency: function (i) {
						  genericStarter(i, "frequency", a);
					  },
				  },
				  main: createFunction(),
			  };
			  applyResumeClosure(state.units[ptr]);
			  if (isOn(onOff.onOff)) {
				  state.units[ptr].main.start(state.writeHead + onOff.timeOffset);
			  }
			  state.units[ptr].onOff = isOn(onOff.onOff);
		  };
	  };
  };

  exports.makeWaveShaper_ = function (aa) {
	  return function (state) {
		  var ptr = aa.id;
		  var a = aa.curve;
		  var b = aa.oversample;
		  return function () {
			  state.units[ptr] = {
				  outgoing: [],
				  incoming: [],
				  main: state.context.createWaveShaper(),
			  };
			  state.units[ptr].main.curve = a;
			  // .type because it's a key-only variant
			  state.units[ptr].main.oversample = b.type;
		  };
	  };
  };

  exports.setWaveShaperCurve_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.curve;
			  state.units[ptr].main.curve = a;
		  };
	  };
  };

  exports.setBuffer_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var buffer = aa.buffer;
			  state.units[ptr].resumeClosure.buffer = function (i) {
				  i.buffer = buffer;
			  };
		  };
	  };
  };

  exports.setInput_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.input;
			  if (state.units[ptr].input && state.units[ptr].input === a) {
				  return;
			  }
			  if (state.units[ptr].input) {
				  disconnectXFromY(false)(
					  state.units[ptr].input,
					  ptr,
					  state.parent,
					  state
				  );
			  }
			  state.units[ptr].input = a;
			  connectXToY(false)(a)(ptr)(state.parent)(state)();
			  state.units[ptr].main.gain.value = 1.0;
		  };
	  };
  };

  var setSubgraph_ = function (ptr) {
	  return function (envs) {
		  return function (state) {
			  return function () {
				  // for (var i = 0; i < envs.length; i++) {
				  // 	state.units[ptr].children[i].writeHead = state.writeHead;
				  // }
				  // var scenes = state.units[ptr].scenes;
				  // var children = state.units[ptr].children;
				  // for (var i = 0; i < scenes.length; i++) {
				  // 	var applied = state.units[ptr].funk(envs[i])(scenes[i]);
				  // 	for (var j = 0; j < applied.instructions.length; j++) {
				  // 		// thunk
				  // 		applied.instructions[j](children[i])();
				  // 	}
				  // 	scenes[i] = applied.nextScene;
				  // }
				  var scenes = state.units[ptr].scenes;
				  var children = state.units[ptr].children;
				  var funk = state.units[ptr].funk;
				  var needsConnecting = [];
				  for (var i = 0; i < envs.length; i++) {
					  var j = envs[i].pos;
					  if (envs[i].env === null && scenes[j] === undefined) {
					  } else if (envs[i].env !== null && scenes[j] !== undefined) {
					  } else if (envs[i].env !== null && scenes[j] === undefined) {
						  children[j] = {
							  units: {},
							  unqidfr: makeid(10),
							  parent: state,
							  context: state.context,
							  writeHead: state.writeHead,
						  };
						  scenes[j] = state.units[ptr].sceneM(envs[i].index);
						  var funkworthy = state.units[ptr].funkyFx;
						  // todo: this is copied from deku, but as
						  // the creation of funk[j] is not effectful,
						  // this seems like one layer of indirection
						  // too much. funkyFx currently never changes
						  // so we can likely get away with nixing it.
						  funk[j] = funkworthy;
						  needsConnecting.push(j);
					  } else {
						  disconnectXFromY(false)(state.units[ptr].terminalPtr)(ptr)(
							  children[j]
						  )(state)();
						  // delete unused
						  delete scenes[j];
						  delete children[j];
						  delete funk[j];
					  }
				  }
				  var sortable = [];
				  for (var m = 0; m < envs.length; m++) {
					  if (envs[m].env === null) {
						  continue;
					  }
					  var i = envs[m].pos;
					  var applied = funk[i](envs[m].env)(scenes[i]);
					  for (var j = 0; j < applied.instructions.length; j++) {
						  // thunk
						  applied.instructions[j](children[i])();
					  }
					  scenes[i] = applied.nextScene;
				  }
				  for (var i = 0; i < needsConnecting.length; i++) {
					  var j = needsConnecting[i];
					  connectXToY(false)(state.units[ptr].terminalPtr)(ptr)(children[j])(
						  state
					  )();
				  }
			  };
		  };
	  };
  };
  exports.setSubgraph_ = setSubgraph_;
  exports.setTumult_ = function (ptr) {
	  return function (terminalPtr) {
		  return function (scenes) {
			  return function (nothing) {
				  return function (just) {
					  return function (arrMaker) {
						  return function (state) {
							  return function () {
								  var needsCreation = !(
									  state.units[ptr] &&
									  state.units[ptr].children &&
									  state.units[ptr].scenes
								  );
								  if (needsCreation) {
									  var children = [];
									  for (var i = 0; i < scenes.length; i++) {
										  children[i] = {
											  context: state.context,
											  writeHead: state.writeHead,
											  units: {},
											  parent: state,
											  unqidfr: makeid(10),
										  };
									  }
									  state.units[ptr].incoming = [];
									  state.units[ptr].outgoing = [];
									  state.units[ptr].children = children;
									  state.units[ptr].isTumult = true;
								  } else {
									  for (var i = 0; i < scenes.length; i++) {
										  state.units[ptr].children[i].writeHead = state.writeHead;
									  }
								  }
								  var oldScenes = state.units[ptr].scenes;
								  var children = state.units[ptr].children;
								  for (var i = 0; i < scenes.length; i++) {
									  var oldScene =
										  oldScenes && oldScenes[i] ? just(oldScenes[i]) : nothing;
									  var curScene = arrMaker(scenes[i])(oldScene);
									  for (var j = 0; j < curScene.length; j++) {
										  // thunk
										  curScene[j](children[i])();
									  }
								  }
								  state.units[ptr].scenes = scenes;
								  // todo - add this logic to subgraph
								  var heads = [];
								  for (var i = 0; i < children.length; i++) {
									  heads[i] = children[i].units[terminalPtr];
									  if (state.units[ptr].heads[i] !== heads[i]) {
										  var tmp = { units: {} };
										  tmp.units[terminalPtr] = state.units[ptr].heads[i];
										  disconnectXFromY(false)(terminalPtr)(ptr)(tmp)(state)();
										  connectXToY(false)(terminalPtr)(ptr)(children[i])(state)();
									  }
								  }
								  state.units[ptr].heads = heads;
								  if (needsCreation) {
									  for (var i = 0; i < children.length; i++) {
										  connectXToY(false)(terminalPtr)(ptr)(children[i])(state)();
									  }
								  }
							  };
						  };
					  };
				  };
			  };
		  };
	  };
  };
  exports.setConvolverBuffer_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var buffer = aa.buffer;
			  state.units[ptr].main.buffer = buffer;
		  };
	  };
  };
  exports.setPeriodicOsc_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var periodicOsc = aa.wave;
			  state.units[ptr].resumeClosure.periodicOsc = function (i) {
				  i.setPeriodicWave(periodicOsc);
			  };
		  };
	  };
  };

  exports.setPeriodicOscV_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var periodicOsc = aa.realImg;
			  state.units[ptr].resumeClosure.periodicOsc = function (i) {
				  i.setPeriodicWave(
					  makePeriodicWaveImpl(state.context)(periodicOsc.real)(
						  periodicOsc.img
					  )()
				  );
			  };
		  };
	  };
  };

  var applyResumeClosure = function (i) {
	  for (var key in i.resumeClosure) {
		  if (i.resumeClosure.hasOwnProperty(key)) {
			  i.resumeClosure[key](i.main);
		  }
	  }
  };

  exports.setOnOff_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var onOff = aa.onOff;
			  if (onOff.onOff.type === "on") {
				  setOn_(ptr)(onOff)(state)();
			  } else if (onOff.onOff.type === "off") {
				  setOff_(ptr)(onOff)(state)();
			  } else if (onOff.onOff.type === "offOn") {
				  setOff_(ptr)({ onOff: { type: "off" }, timeOffset: 0.0 })(state)();
				  setOn_(ptr)({ onOff: { type: "on" }, timeOffset: onOff.timeOffset })(
					  state
				  )();
			  }
		  };
	  };
  };

  var setOn_ = function (ptr) {
	  return function (onOffInstr) {
		  return function (state) {
			  return function () {
				  if (state.units[ptr].onOff) {
					  return;
				  }
				  state.units[ptr].onOff = true;
				  if (state.units[ptr].resumeClosure) {
					  applyResumeClosure(state.units[ptr]);
				  }
				  if (state.units[ptr].bufferOffset) {
					  state.units[ptr].main.start(
						  state.writeHead + onOffInstr.timeOffset,
						  state.units[ptr].bufferOffset
					  );
				  } else {
					  state.units[ptr].main.start(state.writeHead + onOffInstr.timeOffset);
				  }
			  };
		  };
	  };
  };

  var setOff_ = function (ptr) {
	  return function (onOffInstr) {
		  return function (state) {
			  return function () {
				  if (!state.units[ptr].onOff) {
					  return;
				  }
				  state.units[ptr].onOff = false;
				  var oldMain = state.units[ptr].main;
				  var oldOutgoing = state.units[ptr].outgoing.slice();
				  oldMain.stop(state.writeHead + onOffInstr.timeOffset);
				  // defer disconnection until stop has happened
				  setTimeout(() => {
					  for (var i = 0; i < oldOutgoing.length; i++) {
						  var oogi = oldOutgoing[i];
						  try {
							  oldMain.disconnect(oogi.state.units[oogi.unit].main);
							  if (oogi.state.units[oogi.unit].se) {
								  oldMain.disconnect(oogi.state.units[oogi.unit].se);
							  }
						  } catch (e) {
							  console.log(e);
							  // fail silently, as it means the unit is no longer available, but
							  // as we are disconnecting it doesn't matter
							  continue;
						  }
					  }
				  }, 1000.0 * (state.writeHead + onOffInstr.timeOffset + 0.2 - state.context.currentTime));
				  state.units[ptr].main = state.units[ptr].createFunction();
				  for (var i = 0; i < state.units[ptr].outgoing.length; i++) {
					  var ogi = state.units[ptr].outgoing[i];
					  state.units[ptr].main.connect(ogi.state.units[ogi.unit].main);
					  if (ogi.state.units[ogi.unit].se) {
						  state.units[ptr].main.connect(ogi.state.units[ogi.unit].se);
					  }
				  }
			  };
		  };
	  };
  };
  exports.setLoopStart_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.loopStart;
			  state.units[ptr].main.loopStart = a;
			  state.units[ptr].resumeClosure.loopStart = function (i) {
				  i.loopStart = a;
			  };
		  };
	  };
  };

  exports.setBufferOffset_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.bufferOffset;
			  state.units[ptr].bufferOffset = a;
		  };
	  };
  };
  exports.setLoopEnd_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.loopEnd;

			  state.units[ptr].main.loopEnd = a;
			  state.units[ptr].resumeClosure.loopEnd = function (i) {
				  i.loopEnd = a;
			  };
		  };
	  };
  };

  exports.setRatio_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.ratio;
			  genericSetter(state.units[ptr].main, "ratio", state.writeHead, a);
		  };
	  };
  };

  exports.setOffset_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.offset;

			  genericSetter(state.units[ptr].main, "offset", state.writeHead, a);
			  state.units[ptr].resumeClosure.offset = function (i) {
				  genericStarter(i, "offset", a);
			  };
		  };
	  };
  };

  exports.setAttack_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.attack;

			  genericSetter(state.units[ptr].main, "attack", state.writeHead, a);
		  };
	  };
  };

  exports.setAudioWorkletParameter_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.paramName;
			  var b = aa.paramValue;
			  workletSetter(state.units[ptr].main, a, state.writeHead, b);
		  };
	  };
  };
  exports.setGain_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.gain;
			  // TODO: test removing this hack
			  // this was added at a time when there was a bug in the
			  // transition names. the FFI was getting incorrect name strings
			  // and, as a result, wound up always using linear transitions
			  // this sounded fine except in cases when the transition was
			  // immediate, in which case no transition happened.
			  // now that that bug is fixed, this may no longer be needed
			  // a way to test would be any of the synth-intensive works
			  // like a fast back prelude or fugue
			  // if you remove this and they are click free
			  // then it is safe to remove
			  if (!state.units[ptr].main.gain.value && a.param) {
				  state.units[ptr].main.gain.value = 0.0;
			  }
			  genericSetter(state.units[ptr].main, "gain", state.writeHead, a);
		  };
	  };
  };

  exports.setQ_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.q;
			  genericSetter(state.units[ptr].main, "Q", state.writeHead, a);
		  };
	  };
  };
  exports.setPan_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.pan;
			  genericSetter(state.units[ptr].main, "pan", state.writeHead, a);
		  };
	  };
  };
  exports.setThreshold_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.threshold;
			  genericSetter(state.units[ptr].main, "threshold", state.writeHead, a);
		  };
	  };
  };
  exports.setRelease_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.release;
			  genericSetter(state.units[ptr].main, "release", state.writeHead, a);
		  };
	  };
  };
  exports.setKnee_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.knee;
			  genericSetter(state.units[ptr].main, "knee", state.writeHead, a);
		  };
	  };
  };
  exports.setDelay_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.delay;
			  genericSetter(state.units[ptr].main, "delayTime", state.writeHead, a);
		  };
	  };
  };
  exports.setPlaybackRate_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.playbackRate;
			  genericSetter(state.units[ptr].main, "playbackRate", state.writeHead, a);
			  state.units[ptr].resumeClosure.playbackRate = function (i) {
				  genericStarter(i, "playbackRate", a);
			  };
		  };
	  };
  };
  exports.setFrequency_ = function (aa) {
	  return function (state) {
		  return function () {
			  var ptr = aa.id;
			  var a = aa.frequency;
			  genericSetter(state.units[ptr].main, "frequency", state.writeHead, a);
			  // frequency defined for some non-generators
			  // so check first for existence of resumeClosure
			  if (state.units[ptr].resumeClosure) {
				  state.units[ptr].resumeClosure.frequency = function (i) {
					  genericStarter(i, "frequency", a);
				  };
			  }
		  };
	  };
  };
  exports.fetchArrayBuffer = function (s) {
	  return function () {
		  {
			  return fetch(s).then(
				  function (b) {
					  return b.arrayBuffer();
				  },
				  function (e) {
					  console.error("Error fetching buffer", e);
					  return Promise.reject(e);
				  }
			  );
		  }
	  };
  };
  exports.decodeAudioDataFromArrayBuffer = function (ctx) {
	  return function (b) {
		  return function () {
			  return ctx.decodeAudioData(b);
		  };
	  };
  };
  exports.audioWorkletAddModule_ = function (ctx) {
	  return function (s) {
		  return function () {
			  {
				  return ctx.audioWorklet.addModule(s);
			  }
		  };
	  };
  };

  var makePeriodicWaveImpl = function (ctx) {
	  return function (real_) {
		  return function (imag_) {
			  return function () {
				  var real = new Float32Array(real_.length);
				  var imag = new Float32Array(imag_.length);
				  for (var i = 0; i < real_.length; i++) {
					  real[i] = real_[i];
				  }
				  for (var i = 0; i < imag_.length; i++) {
					  imag[i] = imag_[i];
				  }
				  return ctx.createPeriodicWave(real, imag, {
					  disableNormalization: true,
				  });
			  };
		  };
	  };
  };
  exports.makePeriodicWaveImpl = makePeriodicWaveImpl;
  exports.makeFloatArray = function (fa) {
	  return function () {
		  var r = new Float32Array(fa.length);
		  for (var i = 0; i < fa.length; i++) {
			  r[i] = fa[i];
		  }
		  return r;
	  };
  };
  // currently, there is no unsubscription logic to the media recorder
  // in the case where a second subscriber is called, it will simply
  // overwrite the first subscriber
  // because of this, care needs to be taken in calling the "setMediaRecorderCb" function
  // it will unset the previous one, which will result in the recording starting from the moment
  // of being set
  // if it is set in a loop, then there will effectively be no recording, as it will only capture the
  // last couple milliseconds of the loop
  exports.mediaRecorderToBlob = function (mimeType) {
	  return function (handler) {
		  return function (mediaRecorder) {
			  return function () {
				  var chunks = [];
				  mediaRecorder.ondataavailable = function (evt) {
					  chunks.push(evt.data);
				  };

				  mediaRecorder.onstop = function () {
					  var blob = new Blob(chunks, { type: mimeType });
					  handler(blob)();
					  chunks = null;
				  };
			  };
		  };
	  };
  };
  exports.getBrowserMediaStreamImpl = function (audio) {
	  return function (video) {
		  return function () {
			  return navigator.mediaDevices.getUserMedia({
				  audio: audio,
				  video: video,
			  });
		  };
	  };
  };

  // https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/getByteFrequencyData
  exports.getByteFrequencyData = function (analyserNode) {
	  return function () {
		  var dataArray = new Uint8Array(analyserNode.frequencyBinCount);
		  analyserNode.getByteFrequencyData(dataArray);
		  return dataArray;
	  };
  };
  exports.bufferDuration = function (buffer) {
	  return buffer.duration;
  };
})(PS["WAGS.Interpret"] = PS["WAGS.Interpret"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.WebAPI"] = $PS["WAGS.WebAPI"] || {};
  var exports = $PS["WAGS.WebAPI"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Unsafe_Reference = $PS["Unsafe.Reference"];
  var showMediaRecorderCb = {
      show: Data_Function["const"]("<MediaRecorderCb>")
  };
  var showBrowserPeriodicWave = {
      show: Data_Function["const"]("<BrowserPeriodicWave>")
  };
  var showBrowserMicrophone = {
      show: Data_Function["const"]("<BrowserMicrophone>")
  };
  var showBrowserMediaElement = {
      show: Data_Function["const"]("<BrowserMediaElement>")
  };
  var showBrowserFloatArray = {
      show: Data_Function["const"]("<BrowserFloatArray>")
  };
  var showBrowserAudioBuffer = {
      show: Data_Function["const"]("<BrowserAudioBuffer>")
  };
  var showAnalyserNodeCb = {
      show: Data_Function["const"]("<AnalyserNodeCb>")
  };
  var eqMediaRecorderCb = {
      eq: Data_Function.on(Unsafe_Reference.unsafeRefEq)(Data_Newtype.unwrap())
  };
  var ordMediaRecorderCb = {
      compare: function (a) {
          return function (b) {
              var $0 = Data_Eq.eq(eqMediaRecorderCb)(a)(b);
              if ($0) {
                  return Data_Ordering.EQ.value;
              };
              return Data_Ordering.LT.value;
          };
      },
      Eq0: function () {
          return eqMediaRecorderCb;
      }
  };
  var eqBrowserPeriodicWave = {
      eq: Unsafe_Reference.unsafeRefEq
  };
  var ordBrowserPeriodicWave = {
      compare: function (a) {
          return function (b) {
              var $1 = Data_Eq.eq(eqBrowserPeriodicWave)(a)(b);
              if ($1) {
                  return Data_Ordering.EQ.value;
              };
              return Data_Ordering.LT.value;
          };
      },
      Eq0: function () {
          return eqBrowserPeriodicWave;
      }
  };
  var eqBrowserMicrophone = {
      eq: Unsafe_Reference.unsafeRefEq
  };
  var ordBrowserMicrophone = {
      compare: Data_Function["const"](Data_Function["const"](Data_Ordering.EQ.value)),
      Eq0: function () {
          return eqBrowserMicrophone;
      }
  };
  var eqBrowserMediaElement = {
      eq: Unsafe_Reference.unsafeRefEq
  };
  var ordBrowserMediaElement = {
      compare: function (a) {
          return function (b) {
              var $2 = Data_Eq.eq(eqBrowserMediaElement)(a)(b);
              if ($2) {
                  return Data_Ordering.EQ.value;
              };
              return Data_Ordering.LT.value;
          };
      },
      Eq0: function () {
          return eqBrowserMediaElement;
      }
  };
  var eqBrowserFloatArray = {
      eq: Unsafe_Reference.unsafeRefEq
  };
  var ordBrowserFloatArray = {
      compare: function (a) {
          return function (b) {
              var $3 = Data_Eq.eq(eqBrowserFloatArray)(a)(b);
              if ($3) {
                  return Data_Ordering.EQ.value;
              };
              return Data_Ordering.LT.value;
          };
      },
      Eq0: function () {
          return eqBrowserFloatArray;
      }
  };
  var eqBrowserAudioBuffer = {
      eq: Unsafe_Reference.unsafeRefEq
  };
  var ordBrowserAudioBuffer = {
      compare: function (a) {
          return function (b) {
              var $4 = Data_Eq.eq(eqBrowserAudioBuffer)(a)(b);
              if ($4) {
                  return Data_Ordering.EQ.value;
              };
              return Data_Ordering.LT.value;
          };
      },
      Eq0: function () {
          return eqBrowserAudioBuffer;
      }
  };
  var eqAnalyserNodeCb = {
      eq: Data_Function.on(Unsafe_Reference.unsafeRefEq)(Data_Newtype.unwrap())
  };
  var ordAnalyserNodeCb = {
      compare: function (a) {
          return function (b) {
              var $5 = Data_Eq.eq(eqAnalyserNodeCb)(a)(b);
              if ($5) {
                  return Data_Ordering.EQ.value;
              };
              return Data_Ordering.LT.value;
          };
      },
      Eq0: function () {
          return eqAnalyserNodeCb;
      }
  };
  exports["showAnalyserNodeCb"] = showAnalyserNodeCb;
  exports["eqAnalyserNodeCb"] = eqAnalyserNodeCb;
  exports["ordAnalyserNodeCb"] = ordAnalyserNodeCb;
  exports["showMediaRecorderCb"] = showMediaRecorderCb;
  exports["eqMediaRecorderCb"] = eqMediaRecorderCb;
  exports["ordMediaRecorderCb"] = ordMediaRecorderCb;
  exports["showBrowserPeriodicWave"] = showBrowserPeriodicWave;
  exports["eqBrowserPeriodicWave"] = eqBrowserPeriodicWave;
  exports["ordBrowserPeriodicWave"] = ordBrowserPeriodicWave;
  exports["showBrowserAudioBuffer"] = showBrowserAudioBuffer;
  exports["eqBrowserAudioBuffer"] = eqBrowserAudioBuffer;
  exports["ordBrowserAudioBuffer"] = ordBrowserAudioBuffer;
  exports["showBrowserFloatArray"] = showBrowserFloatArray;
  exports["eqBrowserFloatArray"] = eqBrowserFloatArray;
  exports["ordBrowserFloatArray"] = ordBrowserFloatArray;
  exports["showBrowserMicrophone"] = showBrowserMicrophone;
  exports["eqBrowserMicrophone"] = eqBrowserMicrophone;
  exports["ordBrowserMicrophone"] = ordBrowserMicrophone;
  exports["showBrowserMediaElement"] = showBrowserMediaElement;
  exports["eqBrowserMediaElement"] = eqBrowserMediaElement;
  exports["ordBrowserMediaElement"] = ordBrowserMediaElement;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Rendered"] = $PS["WAGS.Rendered"] || {};
  var exports = $PS["WAGS.Rendered"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Lazy = $PS["Data.Lazy"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Variant = $PS["Data.Variant"];
  var Data_Variant_Internal = $PS["Data.Variant.Internal"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Simple_JSON = $PS["Simple.JSON"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_WebAPI = $PS["WAGS.WebAPI"];
  var PeriodicOscSpec = function (x) {
      return x;
  };
  var Instruction = function (x) {
      return x;
  };
  var showRealImg = Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "img";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "real";
      }
  })(Data_Show.showRecordFieldsNil)(Data_Show.showArray(Data_Show.showNumber)))(Data_Show.showArray(Data_Show.showNumber)));
  var showPeriodicOscSpec = Data_Variant.showVariant()(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsNil)({
      reflectSymbol: function () {
          return "wave";
      }
  }))({
      reflectSymbol: function () {
          return "realImg";
      }
  }))(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantNil)(WAGS_WebAPI.showBrowserPeriodicWave))(showRealImg));
  var showAudioWorkletNodeOptions_ = {
      show: function (v) {
          return "AudioWorkletNodeOptions < " + (v.name + (", " + (Data_Show.show(Data_Show.showInt)(v.numberOfInputs) + (", " + (Data_Show.show(Data_Show.showInt)(v.numberOfOutputs) + (", " + (Data_Show.show(Data_Show.showArray(Data_Show.showInt))(v.outputChannelCount) + (", " + (Data_Show.show(Foreign_Object.showObject(WAGS_Graph_Parameter.showAudioParameter))(v.parameterData) + (", " + (Simple_JSON.writeJSON(Simple_JSON.writeForeignInt)(v.numberOfInputs) + " >")))))))))));
      }
  };
  var oTwoX = Data_Variant.inj()({
      reflectSymbol: function () {
          return "2x";
      }
  })(Type_Proxy["Proxy"].value)(Data_Unit.unit);
  var instructionWeight = function (v) {
      return Data_Variant.match()()()({
          disconnectXFromY: Data_Function["const"](0),
          destroyUnit: Data_Function["const"](1),
          makeAllpass: Data_Function["const"](2),
          makeAnalyser: Data_Function["const"](2),
          makeAudioWorkletNode: Data_Function["const"](2),
          makeBandpass: Data_Function["const"](2),
          makeConstant: Data_Function["const"](2),
          makePassthroughConvolver: Data_Function["const"](2),
          makeConvolver: Data_Function["const"](2),
          makeDelay: Data_Function["const"](2),
          makeDynamicsCompressor: Data_Function["const"](2),
          makeGain: Data_Function["const"](2),
          makeHighpass: Data_Function["const"](2),
          makeHighshelf: Data_Function["const"](2),
          makeInput: Data_Function["const"](2),
          makeLoopBuf: Data_Function["const"](2),
          makeLoopBufWithDeferredBuffer: Data_Function["const"](2),
          makeLowpass: Data_Function["const"](2),
          makeLowshelf: Data_Function["const"](2),
          makeMediaElement: Data_Function["const"](2),
          makeMicrophone: Data_Function["const"](2),
          makeNotch: Data_Function["const"](2),
          makePeaking: Data_Function["const"](2),
          makePeriodicOscWithDeferredOsc: Data_Function["const"](2),
          makePeriodicOsc: Data_Function["const"](2),
          makePlayBuf: Data_Function["const"](2),
          makePlayBufWithDeferredBuffer: Data_Function["const"](2),
          makeRecorder: Data_Function["const"](2),
          makeSawtoothOsc: Data_Function["const"](2),
          makeSinOsc: Data_Function["const"](2),
          makeSquareOsc: Data_Function["const"](2),
          makeSpeaker: Data_Function["const"](2),
          makeStereoPanner: Data_Function["const"](2),
          makeTriangleOsc: Data_Function["const"](2),
          makeWaveShaper: Data_Function["const"](2),
          makeSubgraph: Data_Function["const"](3),
          makeTumult: Data_Function["const"](4),
          connectXToY: Data_Function["const"](5),
          setAnalyserNodeCb: Data_Function["const"](6),
          setMediaRecorderCb: Data_Function["const"](6),
          setAudioWorkletParameter: Data_Function["const"](6),
          setBuffer: Data_Function["const"](6),
          setConvolverBuffer: Data_Function["const"](6),
          setPeriodicOsc: Data_Function["const"](6),
          setOnOff: Data_Function["const"](6),
          setBufferOffset: Data_Function["const"](6),
          setLoopStart: Data_Function["const"](6),
          setLoopEnd: Data_Function["const"](6),
          setRatio: Data_Function["const"](6),
          setOffset: Data_Function["const"](6),
          setAttack: Data_Function["const"](6),
          setGain: Data_Function["const"](6),
          setQ: Data_Function["const"](6),
          setPan: Data_Function["const"](6),
          setThreshold: Data_Function["const"](6),
          setRelease: Data_Function["const"](6),
          setKnee: Data_Function["const"](6),
          setDelay: Data_Function["const"](6),
          setPlaybackRate: Data_Function["const"](6),
          setFrequency: Data_Function["const"](6),
          setWaveShaperCurve: Data_Function["const"](6),
          setInput: Data_Function["const"](6),
          setSubgraph: Data_Function["const"](7),
          setTumult: Data_Function["const"](9)
      })(v);
  };
  var instructionId = function (v) {
      return Data_Variant.match()()()({
          disconnectXFromY: function (v2) {
              return v2.fromId;
          },
          destroyUnit: function (v2) {
              return v2.id;
          },
          makeAllpass: function (v2) {
              return v2.id;
          },
          makeAnalyser: function (v2) {
              return v2.id;
          },
          makeAudioWorkletNode: function (v2) {
              return v2.id;
          },
          makeBandpass: function (v2) {
              return v2.id;
          },
          makeConstant: function (v2) {
              return v2.id;
          },
          makePassthroughConvolver: function (v2) {
              return v2.id;
          },
          makeConvolver: function (v2) {
              return v2.id;
          },
          makeDelay: function (v2) {
              return v2.id;
          },
          makeDynamicsCompressor: function (v2) {
              return v2.id;
          },
          makeGain: function (v2) {
              return v2.id;
          },
          makeHighpass: function (v2) {
              return v2.id;
          },
          makeHighshelf: function (v2) {
              return v2.id;
          },
          makeInput: function (v2) {
              return v2.id;
          },
          makeLoopBuf: function (v2) {
              return v2.id;
          },
          makeLoopBufWithDeferredBuffer: function (v2) {
              return v2.id;
          },
          makeLowpass: function (v2) {
              return v2.id;
          },
          makeLowshelf: function (v2) {
              return v2.id;
          },
          makeMediaElement: function (v2) {
              return v2.id;
          },
          makeMicrophone: Data_Function["const"]("microphone"),
          makeNotch: function (v2) {
              return v2.id;
          },
          makePeaking: function (v2) {
              return v2.id;
          },
          makePeriodicOscWithDeferredOsc: function (v2) {
              return v2.id;
          },
          makePeriodicOsc: function (v2) {
              return v2.id;
          },
          makePlayBuf: function (v2) {
              return v2.id;
          },
          makePlayBufWithDeferredBuffer: function (v2) {
              return v2.id;
          },
          makeRecorder: function (v2) {
              return v2.id;
          },
          makeSawtoothOsc: function (v2) {
              return v2.id;
          },
          makeSinOsc: function (v2) {
              return v2.id;
          },
          makeSquareOsc: function (v2) {
              return v2.id;
          },
          makeSpeaker: Data_Function["const"]("speaker"),
          makeStereoPanner: function (v2) {
              return v2.id;
          },
          makeTriangleOsc: function (v2) {
              return v2.id;
          },
          makeWaveShaper: function (v2) {
              return v2.id;
          },
          makeSubgraph: function (v2) {
              return v2.id;
          },
          makeTumult: function (v2) {
              return v2.id;
          },
          connectXToY: function (v2) {
              return v2.fromId;
          },
          setAnalyserNodeCb: function (v2) {
              return v2.id;
          },
          setMediaRecorderCb: function (v2) {
              return v2.id;
          },
          setAudioWorkletParameter: function (v2) {
              return v2.id;
          },
          setBuffer: function (v2) {
              return v2.id;
          },
          setConvolverBuffer: function (v2) {
              return v2.id;
          },
          setPeriodicOsc: function (v2) {
              return v2.id;
          },
          setOnOff: function (v2) {
              return v2.id;
          },
          setBufferOffset: function (v2) {
              return v2.id;
          },
          setLoopStart: function (v2) {
              return v2.id;
          },
          setLoopEnd: function (v2) {
              return v2.id;
          },
          setRatio: function (v2) {
              return v2.id;
          },
          setOffset: function (v2) {
              return v2.id;
          },
          setAttack: function (v2) {
              return v2.id;
          },
          setGain: function (v2) {
              return v2.id;
          },
          setQ: function (v2) {
              return v2.id;
          },
          setPan: function (v2) {
              return v2.id;
          },
          setThreshold: function (v2) {
              return v2.id;
          },
          setRelease: function (v2) {
              return v2.id;
          },
          setKnee: function (v2) {
              return v2.id;
          },
          setDelay: function (v2) {
              return v2.id;
          },
          setPlaybackRate: function (v2) {
              return v2.id;
          },
          setFrequency: function (v2) {
              return v2.id;
          },
          setWaveShaperCurve: function (v2) {
              return v2.id;
          },
          setInput: function (v2) {
              return v2.id;
          },
          setSubgraph: function (v2) {
              return v2.id;
          },
          setTumult: function (v2) {
              return v2.id;
          }
      })(v);
  };
  var iWave = (function () {
      var $126 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "wave";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($127) {
          return PeriodicOscSpec($126($127));
      };
  })();
  var iSetWaveShaperCurve = (function () {
      var $128 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setWaveShaperCurve";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($129) {
          return Instruction($128($129));
      };
  })();
  var iSetTumult = (function () {
      var $130 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setTumult";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($131) {
          return Instruction($130($131));
      };
  })();
  var iSetThreshold = (function () {
      var $132 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setThreshold";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($133) {
          return Instruction($132($133));
      };
  })();
  var iSetSubgraph = (function () {
      var $134 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setSubgraph";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($135) {
          return Instruction($134($135));
      };
  })();
  var iSetRelease = (function () {
      var $136 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setRelease";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($137) {
          return Instruction($136($137));
      };
  })();
  var iSetRatio = (function () {
      var $138 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setRatio";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($139) {
          return Instruction($138($139));
      };
  })();
  var iSetQ = (function () {
      var $140 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setQ";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($141) {
          return Instruction($140($141));
      };
  })();
  var iSetPlaybackRate = (function () {
      var $142 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setPlaybackRate";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($143) {
          return Instruction($142($143));
      };
  })();
  var iSetPeriodicOsc = (function () {
      var $144 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setPeriodicOsc";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($145) {
          return Instruction($144($145));
      };
  })();
  var iSetPan = (function () {
      var $146 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setPan";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($147) {
          return Instruction($146($147));
      };
  })();
  var iSetOnOff = (function () {
      var $148 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setOnOff";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($149) {
          return Instruction($148($149));
      };
  })();
  var iSetOffset = (function () {
      var $150 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setOffset";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($151) {
          return Instruction($150($151));
      };
  })();
  var iSetMediaRecorderCb = (function () {
      var $152 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setMediaRecorderCb";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($153) {
          return Instruction($152($153));
      };
  })();
  var iSetLoopStart = (function () {
      var $154 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setLoopStart";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($155) {
          return Instruction($154($155));
      };
  })();
  var iSetLoopEnd = (function () {
      var $156 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setLoopEnd";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($157) {
          return Instruction($156($157));
      };
  })();
  var iSetKnee = (function () {
      var $158 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setKnee";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($159) {
          return Instruction($158($159));
      };
  })();
  var iSetInput = (function () {
      var $160 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setInput";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($161) {
          return Instruction($160($161));
      };
  })();
  var iSetGain = (function () {
      var $162 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setGain";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($163) {
          return Instruction($162($163));
      };
  })();
  var iSetFrequency = (function () {
      var $164 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setFrequency";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($165) {
          return Instruction($164($165));
      };
  })();
  var iSetDelay = (function () {
      var $166 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setDelay";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($167) {
          return Instruction($166($167));
      };
  })();
  var iSetConvolverBuffer = (function () {
      var $168 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setConvolverBuffer";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($169) {
          return Instruction($168($169));
      };
  })();
  var iSetBufferOffset = (function () {
      var $170 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setBufferOffset";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($171) {
          return Instruction($170($171));
      };
  })();
  var iSetBuffer = (function () {
      var $172 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setBuffer";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($173) {
          return Instruction($172($173));
      };
  })();
  var iSetAudioWorkletParameter = (function () {
      var $174 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setAudioWorkletParameter";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($175) {
          return Instruction($174($175));
      };
  })();
  var iSetAttack = (function () {
      var $176 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setAttack";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($177) {
          return Instruction($176($177));
      };
  })();
  var iSetAnalyserNodeCb = (function () {
      var $178 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "setAnalyserNodeCb";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($179) {
          return Instruction($178($179));
      };
  })();
  var iRealImg = (function () {
      var $180 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "realImg";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($181) {
          return PeriodicOscSpec($180($181));
      };
  })();
  var iMakeWaveShaper = (function () {
      var $182 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeWaveShaper";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($183) {
          return Instruction($182($183));
      };
  })();
  var iMakeTumult = (function () {
      var $184 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeTumult";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($185) {
          return Instruction($184($185));
      };
  })();
  var iMakeTriangleOsc = (function () {
      var $186 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeTriangleOsc";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($187) {
          return Instruction($186($187));
      };
  })();
  var iMakeSubgraph = (function () {
      var $188 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeSubgraph";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($189) {
          return Instruction($188($189));
      };
  })();
  var iMakeStereoPanner = (function () {
      var $190 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeStereoPanner";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($191) {
          return Instruction($190($191));
      };
  })();
  var iMakeSquareOsc = (function () {
      var $192 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeSquareOsc";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($193) {
          return Instruction($192($193));
      };
  })();
  var iMakeSpeaker = Instruction(Data_Variant.inj()({
      reflectSymbol: function () {
          return "makeSpeaker";
      }
  })(Type_Proxy["Proxy"].value)(Data_Unit.unit));
  var iMakeSinOsc = (function () {
      var $194 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeSinOsc";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($195) {
          return Instruction($194($195));
      };
  })();
  var iMakeSawtoothOsc = (function () {
      var $196 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeSawtoothOsc";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($197) {
          return Instruction($196($197));
      };
  })();
  var iMakeRecorder = (function () {
      var $198 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeRecorder";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($199) {
          return Instruction($198($199));
      };
  })();
  var iMakePlayBufWithDeferredBuffer = (function () {
      var $200 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makePlayBufWithDeferredBuffer";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($201) {
          return Instruction($200($201));
      };
  })();
  var iMakePlayBuf = (function () {
      var $202 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makePlayBuf";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($203) {
          return Instruction($202($203));
      };
  })();
  var iMakePeriodicOscWithDeferredOsc = (function () {
      var $204 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makePeriodicOscWithDeferredOsc";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($205) {
          return Instruction($204($205));
      };
  })();
  var iMakePeriodicOsc = (function () {
      var $206 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makePeriodicOsc";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($207) {
          return Instruction($206($207));
      };
  })();
  var iMakePeaking = (function () {
      var $208 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makePeaking";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($209) {
          return Instruction($208($209));
      };
  })();
  var iMakePassthroughConvolver = (function () {
      var $210 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makePassthroughConvolver";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($211) {
          return Instruction($210($211));
      };
  })();
  var iMakeNotch = (function () {
      var $212 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeNotch";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($213) {
          return Instruction($212($213));
      };
  })();
  var iMakeMicrophone = (function () {
      var $214 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeMicrophone";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($215) {
          return Instruction($214($215));
      };
  })();
  var iMakeMediaElement = (function () {
      var $216 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeMediaElement";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($217) {
          return Instruction($216($217));
      };
  })();
  var iMakeLowshelf = (function () {
      var $218 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeLowshelf";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($219) {
          return Instruction($218($219));
      };
  })();
  var iMakeLowpass = (function () {
      var $220 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeLowpass";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($221) {
          return Instruction($220($221));
      };
  })();
  var iMakeLoopBufWithDeferredBuffer = (function () {
      var $222 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeLoopBufWithDeferredBuffer";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($223) {
          return Instruction($222($223));
      };
  })();
  var iMakeLoopBuf = (function () {
      var $224 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeLoopBuf";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($225) {
          return Instruction($224($225));
      };
  })();
  var iMakeInput = (function () {
      var $226 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeInput";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($227) {
          return Instruction($226($227));
      };
  })();
  var iMakeHighshelf = (function () {
      var $228 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeHighshelf";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($229) {
          return Instruction($228($229));
      };
  })();
  var iMakeHighpass = (function () {
      var $230 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeHighpass";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($231) {
          return Instruction($230($231));
      };
  })();
  var iMakeGain = (function () {
      var $232 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeGain";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($233) {
          return Instruction($232($233));
      };
  })();
  var iMakeDynamicsCompressor = (function () {
      var $234 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeDynamicsCompressor";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($235) {
          return Instruction($234($235));
      };
  })();
  var iMakeDelay = (function () {
      var $236 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeDelay";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($237) {
          return Instruction($236($237));
      };
  })();
  var iMakeConvolver = (function () {
      var $238 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeConvolver";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($239) {
          return Instruction($238($239));
      };
  })();
  var iMakeConstant = (function () {
      var $240 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeConstant";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($241) {
          return Instruction($240($241));
      };
  })();
  var iMakeBandpass = (function () {
      var $242 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeBandpass";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($243) {
          return Instruction($242($243));
      };
  })();
  var iMakeAudioWorkletNode = (function () {
      var $244 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeAudioWorkletNode";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($245) {
          return Instruction($244($245));
      };
  })();
  var iMakeAnalyser = (function () {
      var $246 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeAnalyser";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($247) {
          return Instruction($246($247));
      };
  })();
  var iMakeAllpass = (function () {
      var $248 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "makeAllpass";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($249) {
          return Instruction($248($249));
      };
  })();
  var iDisconnectXFromY = (function () {
      var $250 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "disconnectXFromY";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($251) {
          return Instruction($250($251));
      };
  })();
  var iDestroyUnit = (function () {
      var $252 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "destroyUnit";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($253) {
          return Instruction($252($253));
      };
  })();
  var iConnectXToY = (function () {
      var $254 = Data_Variant.inj()({
          reflectSymbol: function () {
              return "connectXToY";
          }
      })(Type_Proxy["Proxy"].value);
      return function ($255) {
          return Instruction($254($255));
      };
  })();
  var genericOversample = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showOversample = {
      show: Data_Show_Generic.genericShow(genericOversample)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Variant.showVariant()(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsNil)({
          reflectSymbol: function () {
              return "none";
          }
      }))({
          reflectSymbol: function () {
              return "4x";
          }
      }))({
          reflectSymbol: function () {
              return "2x";
          }
      }))(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantNil)(Data_Unit.showUnit))(Data_Unit.showUnit))(Data_Unit.showUnit))))({
          reflectSymbol: function () {
              return "Oversample";
          }
      }))
  };
  var showInstruction = {
      show: function (v) {
          return Data_Show.show(Data_Variant.showVariant()(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsNil)({
              reflectSymbol: function () {
                  return "setWaveShaperCurve";
              }
          }))({
              reflectSymbol: function () {
                  return "setTumult";
              }
          }))({
              reflectSymbol: function () {
                  return "setThreshold";
              }
          }))({
              reflectSymbol: function () {
                  return "setSubgraph";
              }
          }))({
              reflectSymbol: function () {
                  return "setRelease";
              }
          }))({
              reflectSymbol: function () {
                  return "setRatio";
              }
          }))({
              reflectSymbol: function () {
                  return "setQ";
              }
          }))({
              reflectSymbol: function () {
                  return "setPlaybackRate";
              }
          }))({
              reflectSymbol: function () {
                  return "setPeriodicOsc";
              }
          }))({
              reflectSymbol: function () {
                  return "setPan";
              }
          }))({
              reflectSymbol: function () {
                  return "setOnOff";
              }
          }))({
              reflectSymbol: function () {
                  return "setOffset";
              }
          }))({
              reflectSymbol: function () {
                  return "setMediaRecorderCb";
              }
          }))({
              reflectSymbol: function () {
                  return "setLoopStart";
              }
          }))({
              reflectSymbol: function () {
                  return "setLoopEnd";
              }
          }))({
              reflectSymbol: function () {
                  return "setKnee";
              }
          }))({
              reflectSymbol: function () {
                  return "setInput";
              }
          }))({
              reflectSymbol: function () {
                  return "setGain";
              }
          }))({
              reflectSymbol: function () {
                  return "setFrequency";
              }
          }))({
              reflectSymbol: function () {
                  return "setDelay";
              }
          }))({
              reflectSymbol: function () {
                  return "setConvolverBuffer";
              }
          }))({
              reflectSymbol: function () {
                  return "setBufferOffset";
              }
          }))({
              reflectSymbol: function () {
                  return "setBuffer";
              }
          }))({
              reflectSymbol: function () {
                  return "setAudioWorkletParameter";
              }
          }))({
              reflectSymbol: function () {
                  return "setAttack";
              }
          }))({
              reflectSymbol: function () {
                  return "setAnalyserNodeCb";
              }
          }))({
              reflectSymbol: function () {
                  return "makeWaveShaper";
              }
          }))({
              reflectSymbol: function () {
                  return "makeTumult";
              }
          }))({
              reflectSymbol: function () {
                  return "makeTriangleOsc";
              }
          }))({
              reflectSymbol: function () {
                  return "makeSubgraph";
              }
          }))({
              reflectSymbol: function () {
                  return "makeStereoPanner";
              }
          }))({
              reflectSymbol: function () {
                  return "makeSquareOsc";
              }
          }))({
              reflectSymbol: function () {
                  return "makeSpeaker";
              }
          }))({
              reflectSymbol: function () {
                  return "makeSinOsc";
              }
          }))({
              reflectSymbol: function () {
                  return "makeSawtoothOsc";
              }
          }))({
              reflectSymbol: function () {
                  return "makeRecorder";
              }
          }))({
              reflectSymbol: function () {
                  return "makePlayBufWithDeferredBuffer";
              }
          }))({
              reflectSymbol: function () {
                  return "makePlayBuf";
              }
          }))({
              reflectSymbol: function () {
                  return "makePeriodicOscWithDeferredOsc";
              }
          }))({
              reflectSymbol: function () {
                  return "makePeriodicOsc";
              }
          }))({
              reflectSymbol: function () {
                  return "makePeaking";
              }
          }))({
              reflectSymbol: function () {
                  return "makePassthroughConvolver";
              }
          }))({
              reflectSymbol: function () {
                  return "makeNotch";
              }
          }))({
              reflectSymbol: function () {
                  return "makeMicrophone";
              }
          }))({
              reflectSymbol: function () {
                  return "makeMediaElement";
              }
          }))({
              reflectSymbol: function () {
                  return "makeLowshelf";
              }
          }))({
              reflectSymbol: function () {
                  return "makeLowpass";
              }
          }))({
              reflectSymbol: function () {
                  return "makeLoopBufWithDeferredBuffer";
              }
          }))({
              reflectSymbol: function () {
                  return "makeLoopBuf";
              }
          }))({
              reflectSymbol: function () {
                  return "makeInput";
              }
          }))({
              reflectSymbol: function () {
                  return "makeHighshelf";
              }
          }))({
              reflectSymbol: function () {
                  return "makeHighpass";
              }
          }))({
              reflectSymbol: function () {
                  return "makeGain";
              }
          }))({
              reflectSymbol: function () {
                  return "makeDynamicsCompressor";
              }
          }))({
              reflectSymbol: function () {
                  return "makeDelay";
              }
          }))({
              reflectSymbol: function () {
                  return "makeConvolver";
              }
          }))({
              reflectSymbol: function () {
                  return "makeConstant";
              }
          }))({
              reflectSymbol: function () {
                  return "makeBandpass";
              }
          }))({
              reflectSymbol: function () {
                  return "makeAudioWorkletNode";
              }
          }))({
              reflectSymbol: function () {
                  return "makeAnalyser";
              }
          }))({
              reflectSymbol: function () {
                  return "makeAllpass";
              }
          }))({
              reflectSymbol: function () {
                  return "disconnectXFromY";
              }
          }))({
              reflectSymbol: function () {
                  return "destroyUnit";
              }
          }))({
              reflectSymbol: function () {
                  return "connectXToY";
              }
          }))(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantCons(Data_Variant.showVariantNil)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "curve";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(WAGS_WebAPI.showBrowserFloatArray))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "instructions";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "terminus";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showArray(Data_Show.showArray(showInstruction))))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "threshold";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioParameter))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "release";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioParameter))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "ratio";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioParameter))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "q";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioParameter))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "playbackRate";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioParameter))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "periodicOsc";
              }
          })(Data_Show.showRecordFieldsNil)(showPeriodicOscSpec))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "pan";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioParameter))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "onOff";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioOnOff))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "offset";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioParameter))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "cb";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(WAGS_WebAPI.showMediaRecorderCb))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "loopStart";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "loopEnd";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "knee";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioParameter))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "source";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "gain";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(WAGS_Graph_Parameter.showAudioParameter))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "frequency";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(WAGS_Graph_Parameter.showAudioParameter))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "delay";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(WAGS_Graph_Parameter.showAudioParameter))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "buffer";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(WAGS_WebAPI.showBrowserAudioBuffer))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "bufferOffset";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showNumber))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "buffer";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(WAGS_WebAPI.showBrowserAudioBuffer))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "paramName";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "paramValue";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioParameter))(Data_Show.showString))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "attack";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(WAGS_Graph_Parameter.showAudioParameter))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "cb";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(WAGS_WebAPI.showAnalyserNodeCb))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "curve";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "oversample";
              }
          })(Data_Show.showRecordFieldsNil)(showOversample))(Data_Show.showString))(WAGS_WebAPI.showBrowserFloatArray))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "instructions";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "terminus";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showArray(Data_Show.showArray(showInstruction))))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "freq";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "onOff";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioOnOff))(Data_Show.showString))(WAGS_Graph_Parameter.showAudioParameter))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "instructions";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Lazy.showLazy(Data_Show.showArray(Data_Show.showArray(showInstruction)))))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "pan";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioParameter))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "freq";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "onOff";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioOnOff))(Data_Show.showString))(WAGS_Graph_Parameter.showAudioParameter))))(Data_Unit.showUnit))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "freq";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "onOff";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioOnOff))(Data_Show.showString))(WAGS_Graph_Parameter.showAudioParameter))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "freq";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "onOff";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioOnOff))(Data_Show.showString))(WAGS_Graph_Parameter.showAudioParameter))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "cb";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(WAGS_WebAPI.showMediaRecorderCb))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "buffer";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "bufferOffset";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "onOff";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "playbackRate";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioParameter))(WAGS_Graph_Parameter.showAudioOnOff))(Data_Show.showString))(Data_Show.showNumber))(WAGS_WebAPI.showBrowserAudioBuffer))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "freq";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "onOff";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "spec";
              }
          })(Data_Show.showRecordFieldsNil)(showPeriodicOscSpec))(WAGS_Graph_Parameter.showAudioOnOff))(Data_Show.showString))(WAGS_Graph_Parameter.showAudioParameter))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "freq";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "gain";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "q";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioParameter))(Data_Show.showString))(WAGS_Graph_Parameter.showAudioParameter))(WAGS_Graph_Parameter.showAudioParameter))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "freq";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "q";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioParameter))(Data_Show.showString))(WAGS_Graph_Parameter.showAudioParameter))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "microphone";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_WebAPI.showBrowserMicrophone))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "element";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(WAGS_WebAPI.showBrowserMediaElement))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "freq";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "gain";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(WAGS_Graph_Parameter.showAudioParameter))(WAGS_Graph_Parameter.showAudioParameter))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "freq";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "q";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioParameter))(Data_Show.showString))(WAGS_Graph_Parameter.showAudioParameter))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "buffer";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "loopEnd";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "loopStart";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "onOff";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "playbackRate";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioParameter))(WAGS_Graph_Parameter.showAudioOnOff))(Data_Show.showNumber))(Data_Show.showNumber))(Data_Show.showString))(WAGS_WebAPI.showBrowserAudioBuffer))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "input";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "freq";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "gain";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(WAGS_Graph_Parameter.showAudioParameter))(WAGS_Graph_Parameter.showAudioParameter))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "freq";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "q";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioParameter))(Data_Show.showString))(WAGS_Graph_Parameter.showAudioParameter))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "gain";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(WAGS_Graph_Parameter.showAudioParameter))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "attack";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "knee";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "ratio";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "release";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "threshold";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioParameter))(WAGS_Graph_Parameter.showAudioParameter))(WAGS_Graph_Parameter.showAudioParameter))(WAGS_Graph_Parameter.showAudioParameter))(Data_Show.showString))(WAGS_Graph_Parameter.showAudioParameter))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "delayTime";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(WAGS_Graph_Parameter.showAudioParameter))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "buffer";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(WAGS_WebAPI.showBrowserAudioBuffer))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "offset";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "onOff";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioOnOff))(WAGS_Graph_Parameter.showAudioParameter))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "freq";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "q";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioParameter))(Data_Show.showString))(WAGS_Graph_Parameter.showAudioParameter))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "options";
              }
          })(Data_Show.showRecordFieldsNil)(showAudioWorkletNodeOptions_))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "cb";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(WAGS_WebAPI.showAnalyserNodeCb))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "freq";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "q";
              }
          })(Data_Show.showRecordFieldsNil)(WAGS_Graph_Parameter.showAudioParameter))(Data_Show.showString))(WAGS_Graph_Parameter.showAudioParameter))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "fromId";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "fromUnit";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "toId";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "toUnit";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showString))(Data_Show.showString))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "id";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "unit";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showString))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "fromId";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "fromUnit";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "toId";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "toUnit";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showString))(Data_Show.showString))(Data_Show.showString)))))(v);
      }
  };
  var eqRealImg = {
      eq: function (x) {
          return function (y) {
              return Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqNumber))(x.img)(y.img) && Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqNumber))(x.real)(y.real);
          };
      }
  };
  var ordRealImg = {
      compare: function (x) {
          return function (y) {
              var v = Data_Ord.compare(Data_Ord.ordArray(Data_Ord.ordNumber))(x.img)(y.img);
              if (v instanceof Data_Ordering.LT) {
                  return Data_Ordering.LT.value;
              };
              if (v instanceof Data_Ordering.GT) {
                  return Data_Ordering.GT.value;
              };
              return Data_Ord.compare(Data_Ord.ordArray(Data_Ord.ordNumber))(x.real)(y.real);
          };
      },
      Eq0: function () {
          return eqRealImg;
      }
  };
  var ordPeriodicOscSpec = Data_Variant.ordVariant()(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsNil)({
      reflectSymbol: function () {
          return "wave";
      }
  }))({
      reflectSymbol: function () {
          return "realImg";
      }
  }))(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantNil)(WAGS_WebAPI.eqBrowserPeriodicWave))(eqRealImg))(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantNil)(WAGS_WebAPI.ordBrowserPeriodicWave))(ordRealImg));
  var eqPeriodicOscSpec = Data_Variant.eqVariant()(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsNil)({
      reflectSymbol: function () {
          return "wave";
      }
  }))({
      reflectSymbol: function () {
          return "realImg";
      }
  }))(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantNil)(WAGS_WebAPI.eqBrowserPeriodicWave))(eqRealImg));
  var eqOversample = {
      eq: function (x) {
          return function (y) {
              return Data_Eq.eq(Data_Variant.eqVariant()(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsNil)({
                  reflectSymbol: function () {
                      return "none";
                  }
              }))({
                  reflectSymbol: function () {
                      return "4x";
                  }
              }))({
                  reflectSymbol: function () {
                      return "2x";
                  }
              }))(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantNil)(Data_Eq.eqUnit))(Data_Eq.eqUnit))(Data_Eq.eqUnit)))(x)(y);
          };
      }
  };
  var ordOversample = {
      compare: function (x) {
          return function (y) {
              return Data_Ord.compare(Data_Variant.ordVariant()(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsNil)({
                  reflectSymbol: function () {
                      return "none";
                  }
              }))({
                  reflectSymbol: function () {
                      return "4x";
                  }
              }))({
                  reflectSymbol: function () {
                      return "2x";
                  }
              }))(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantNil)(Data_Eq.eqUnit))(Data_Eq.eqUnit))(Data_Eq.eqUnit))(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantNil)(Data_Ord.ordUnit))(Data_Ord.ordUnit))(Data_Ord.ordUnit)))(x)(y);
          };
      },
      Eq0: function () {
          return eqOversample;
      }
  };
  var audioWorkletNodeOptionsForInstances = function (v) {
      return {
          name: v.name,
          numberOfInputs: v.numberOfInputs,
          numberOfOutputs: v.numberOfOutputs,
          outputChannelCount: v.outputChannelCount,
          parameterData: v.parameterData,
          processorOptions: Simple_JSON.writeJSON(Simple_JSON.writeForeignForeign)(v.processorOptions)
      };
  };
  var eqAudioWorkletNodeOptions_ = {
      eq: Data_Function.on(Data_Eq.eq(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
          reflectSymbol: function () {
              return "processorOptions";
          }
      })(Data_Eq.eqString))()({
          reflectSymbol: function () {
              return "parameterData";
          }
      })(Foreign_Object.eqObject(WAGS_Graph_Parameter.eqAudioParameter)))()({
          reflectSymbol: function () {
              return "outputChannelCount";
          }
      })(Data_Eq.eqArray(Data_Eq.eqInt)))()({
          reflectSymbol: function () {
              return "numberOfOutputs";
          }
      })(Data_Eq.eqInt))()({
          reflectSymbol: function () {
              return "numberOfInputs";
          }
      })(Data_Eq.eqInt))()({
          reflectSymbol: function () {
              return "name";
          }
      })(Data_Eq.eqString))))((function () {
          var $256 = Data_Newtype.unwrap();
          return function ($257) {
              return audioWorkletNodeOptionsForInstances($256($257));
          };
      })())
  };
  var eqInstruction = {
      eq: function (x) {
          return function (y) {
              return Data_Eq.eq(Data_Variant.eqVariant()(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsNil)({
                  reflectSymbol: function () {
                      return "setWaveShaperCurve";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setTumult";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setThreshold";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setSubgraph";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setRelease";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setRatio";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setQ";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setPlaybackRate";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setPeriodicOsc";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setPan";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setOnOff";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setOffset";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setMediaRecorderCb";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setLoopStart";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setLoopEnd";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setKnee";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setInput";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setGain";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setFrequency";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setDelay";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setConvolverBuffer";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setBufferOffset";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setBuffer";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setAudioWorkletParameter";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setAttack";
                  }
              }))({
                  reflectSymbol: function () {
                      return "setAnalyserNodeCb";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeWaveShaper";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeTumult";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeTriangleOsc";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeSubgraph";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeStereoPanner";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeSquareOsc";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeSpeaker";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeSinOsc";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeSawtoothOsc";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeRecorder";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makePlayBufWithDeferredBuffer";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makePlayBuf";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makePeriodicOscWithDeferredOsc";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makePeriodicOsc";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makePeaking";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makePassthroughConvolver";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeNotch";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeMicrophone";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeMediaElement";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeLowshelf";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeLowpass";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeLoopBufWithDeferredBuffer";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeLoopBuf";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeInput";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeHighshelf";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeHighpass";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeGain";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeDynamicsCompressor";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeDelay";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeConvolver";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeConstant";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeBandpass";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeAudioWorkletNode";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeAnalyser";
                  }
              }))({
                  reflectSymbol: function () {
                      return "makeAllpass";
                  }
              }))({
                  reflectSymbol: function () {
                      return "disconnectXFromY";
                  }
              }))({
                  reflectSymbol: function () {
                      return "destroyUnit";
                  }
              }))({
                  reflectSymbol: function () {
                      return "connectXToY";
                  }
              }))(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantNil)(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "curve";
                  }
              })(WAGS_WebAPI.eqBrowserFloatArray))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "terminus";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "instructions";
                  }
              })(Data_Eq.eqArray(Data_Eq.eqArray(eqInstruction))))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "threshold";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "release";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "ratio";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "q";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "playbackRate";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "periodicOsc";
                  }
              })(eqPeriodicOscSpec))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "pan";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })(WAGS_Graph_Parameter.eqAudioOnOff))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "offset";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "cb";
                  }
              })(WAGS_WebAPI.eqMediaRecorderCb))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "loopStart";
                  }
              })(Data_Eq.eqNumber))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "loopEnd";
                  }
              })(Data_Eq.eqNumber))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "knee";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "source";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "gain";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "frequency";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "delay";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "buffer";
                  }
              })(WAGS_WebAPI.eqBrowserAudioBuffer))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "bufferOffset";
                  }
              })(Data_Eq.eqNumber))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "buffer";
                  }
              })(WAGS_WebAPI.eqBrowserAudioBuffer))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "paramValue";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "paramName";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "attack";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "cb";
                  }
              })(WAGS_WebAPI.eqAnalyserNodeCb))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "oversample";
                  }
              })(eqOversample))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "curve";
                  }
              })(WAGS_WebAPI.eqBrowserFloatArray))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "terminus";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "instructions";
                  }
              })(Data_Eq.eqArray(Data_Eq.eqArray(eqInstruction))))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })(WAGS_Graph_Parameter.eqAudioOnOff))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "instructions";
                  }
              })(Data_Lazy.eqLazy(Data_Eq.eqArray(Data_Eq.eqArray(eqInstruction)))))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "pan";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })(WAGS_Graph_Parameter.eqAudioOnOff))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqUnit))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })(WAGS_Graph_Parameter.eqAudioOnOff))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })(WAGS_Graph_Parameter.eqAudioOnOff))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "cb";
                  }
              })(WAGS_WebAPI.eqMediaRecorderCb))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "playbackRate";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })(WAGS_Graph_Parameter.eqAudioOnOff))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "bufferOffset";
                  }
              })(Data_Eq.eqNumber))()({
                  reflectSymbol: function () {
                      return "buffer";
                  }
              })(WAGS_WebAPI.eqBrowserAudioBuffer))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "spec";
                  }
              })(eqPeriodicOscSpec))()({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })(WAGS_Graph_Parameter.eqAudioOnOff))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "q";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "gain";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "q";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "microphone";
                  }
              })(WAGS_WebAPI.eqBrowserMicrophone))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "element";
                  }
              })(WAGS_WebAPI.eqBrowserMediaElement))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "gain";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "q";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "playbackRate";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })(WAGS_Graph_Parameter.eqAudioOnOff))()({
                  reflectSymbol: function () {
                      return "loopStart";
                  }
              })(Data_Eq.eqNumber))()({
                  reflectSymbol: function () {
                      return "loopEnd";
                  }
              })(Data_Eq.eqNumber))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "buffer";
                  }
              })(WAGS_WebAPI.eqBrowserAudioBuffer))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "input";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "gain";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "q";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "gain";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "threshold";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "release";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "ratio";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "knee";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "attack";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "delayTime";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "buffer";
                  }
              })(WAGS_WebAPI.eqBrowserAudioBuffer))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })(WAGS_Graph_Parameter.eqAudioOnOff))()({
                  reflectSymbol: function () {
                      return "offset";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "q";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "options";
                  }
              })(eqAudioWorkletNodeOptions_))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "cb";
                  }
              })(WAGS_WebAPI.eqAnalyserNodeCb))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "q";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "toUnit";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "toId";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "fromUnit";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "fromId";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "unit";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "id";
                  }
              })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                  reflectSymbol: function () {
                      return "toUnit";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "toId";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "fromUnit";
                  }
              })(Data_Eq.eqString))()({
                  reflectSymbol: function () {
                      return "fromId";
                  }
              })(Data_Eq.eqString)))))(x)(y);
          };
      }
  };
  var ordAudioWorkletNodeOptions_ = {
      compare: Data_Function.on(Data_Ord.compare(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
          reflectSymbol: function () {
              return "processorOptions";
          }
      })(Data_Ord.ordString))()({
          reflectSymbol: function () {
              return "parameterData";
          }
      })(Foreign_Object.ordObject(WAGS_Graph_Parameter.ordAudioParameter)))()({
          reflectSymbol: function () {
              return "outputChannelCount";
          }
      })(Data_Ord.ordArray(Data_Ord.ordInt)))()({
          reflectSymbol: function () {
              return "numberOfOutputs";
          }
      })(Data_Ord.ordInt))()({
          reflectSymbol: function () {
              return "numberOfInputs";
          }
      })(Data_Ord.ordInt))()({
          reflectSymbol: function () {
              return "name";
          }
      })(Data_Ord.ordString))))((function () {
          var $258 = Data_Newtype.unwrap();
          return function ($259) {
              return audioWorkletNodeOptionsForInstances($258($259));
          };
      })()),
      Eq0: function () {
          return eqAudioWorkletNodeOptions_;
      }
  };
  var ordInstruction = {
      compare: function (v) {
          return function (v1) {
              var w2 = instructionWeight(v1);
              var w1 = instructionWeight(v);
              var c2 = function (v3) {
                  var i2 = instructionId(v1);
                  var i1 = instructionId(v);
                  var v4 = Data_Ord.compare(Data_Ord.ordString)(i1)(i2);
                  if (v4 instanceof Data_Ordering.EQ) {
                      return Data_Ord.compare(Data_Variant.ordVariant()(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsCons(Data_Variant_Internal.variantTagsNil)({
                          reflectSymbol: function () {
                              return "setWaveShaperCurve";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setTumult";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setThreshold";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setSubgraph";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setRelease";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setRatio";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setQ";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setPlaybackRate";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setPeriodicOsc";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setPan";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setOnOff";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setOffset";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setMediaRecorderCb";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setLoopStart";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setLoopEnd";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setKnee";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setInput";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setGain";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setFrequency";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setDelay";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setConvolverBuffer";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setBufferOffset";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setBuffer";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setAudioWorkletParameter";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setAttack";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "setAnalyserNodeCb";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeWaveShaper";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeTumult";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeTriangleOsc";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeSubgraph";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeStereoPanner";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeSquareOsc";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeSpeaker";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeSinOsc";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeSawtoothOsc";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeRecorder";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makePlayBufWithDeferredBuffer";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makePlayBuf";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makePeriodicOscWithDeferredOsc";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makePeriodicOsc";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makePeaking";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makePassthroughConvolver";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeNotch";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeMicrophone";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeMediaElement";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeLowshelf";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeLowpass";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeLoopBufWithDeferredBuffer";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeLoopBuf";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeInput";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeHighshelf";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeHighpass";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeGain";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeDynamicsCompressor";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeDelay";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeConvolver";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeConstant";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeBandpass";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeAudioWorkletNode";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeAnalyser";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "makeAllpass";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "disconnectXFromY";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "destroyUnit";
                          }
                      }))({
                          reflectSymbol: function () {
                              return "connectXToY";
                          }
                      }))(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantCons(Data_Variant.eqVariantNil)(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "curve";
                          }
                      })(WAGS_WebAPI.eqBrowserFloatArray))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "terminus";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "instructions";
                          }
                      })(Data_Eq.eqArray(Data_Eq.eqArray(eqInstruction))))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "threshold";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "release";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "ratio";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "q";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "playbackRate";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "periodicOsc";
                          }
                      })(eqPeriodicOscSpec))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "pan";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "onOff";
                          }
                      })(WAGS_Graph_Parameter.eqAudioOnOff))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "offset";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "cb";
                          }
                      })(WAGS_WebAPI.eqMediaRecorderCb))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "loopStart";
                          }
                      })(Data_Eq.eqNumber))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "loopEnd";
                          }
                      })(Data_Eq.eqNumber))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "knee";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "source";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "gain";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "frequency";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "delay";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "buffer";
                          }
                      })(WAGS_WebAPI.eqBrowserAudioBuffer))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "bufferOffset";
                          }
                      })(Data_Eq.eqNumber))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "buffer";
                          }
                      })(WAGS_WebAPI.eqBrowserAudioBuffer))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "paramValue";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "paramName";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "attack";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "cb";
                          }
                      })(WAGS_WebAPI.eqAnalyserNodeCb))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "oversample";
                          }
                      })(eqOversample))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "curve";
                          }
                      })(WAGS_WebAPI.eqBrowserFloatArray))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "terminus";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "instructions";
                          }
                      })(Data_Eq.eqArray(Data_Eq.eqArray(eqInstruction))))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "onOff";
                          }
                      })(WAGS_Graph_Parameter.eqAudioOnOff))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "instructions";
                          }
                      })(Data_Lazy.eqLazy(Data_Eq.eqArray(Data_Eq.eqArray(eqInstruction)))))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "pan";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "onOff";
                          }
                      })(WAGS_Graph_Parameter.eqAudioOnOff))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqUnit))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "onOff";
                          }
                      })(WAGS_Graph_Parameter.eqAudioOnOff))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "onOff";
                          }
                      })(WAGS_Graph_Parameter.eqAudioOnOff))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "cb";
                          }
                      })(WAGS_WebAPI.eqMediaRecorderCb))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "playbackRate";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "onOff";
                          }
                      })(WAGS_Graph_Parameter.eqAudioOnOff))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "bufferOffset";
                          }
                      })(Data_Eq.eqNumber))()({
                          reflectSymbol: function () {
                              return "buffer";
                          }
                      })(WAGS_WebAPI.eqBrowserAudioBuffer))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "spec";
                          }
                      })(eqPeriodicOscSpec))()({
                          reflectSymbol: function () {
                              return "onOff";
                          }
                      })(WAGS_Graph_Parameter.eqAudioOnOff))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "q";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "gain";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "q";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "microphone";
                          }
                      })(WAGS_WebAPI.eqBrowserMicrophone))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "element";
                          }
                      })(WAGS_WebAPI.eqBrowserMediaElement))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "gain";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "q";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "playbackRate";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "onOff";
                          }
                      })(WAGS_Graph_Parameter.eqAudioOnOff))()({
                          reflectSymbol: function () {
                              return "loopStart";
                          }
                      })(Data_Eq.eqNumber))()({
                          reflectSymbol: function () {
                              return "loopEnd";
                          }
                      })(Data_Eq.eqNumber))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "buffer";
                          }
                      })(WAGS_WebAPI.eqBrowserAudioBuffer))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "input";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "gain";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "q";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "gain";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "threshold";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "release";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "ratio";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "knee";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "attack";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "delayTime";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "buffer";
                          }
                      })(WAGS_WebAPI.eqBrowserAudioBuffer))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "onOff";
                          }
                      })(WAGS_Graph_Parameter.eqAudioOnOff))()({
                          reflectSymbol: function () {
                              return "offset";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "q";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "options";
                          }
                      })(eqAudioWorkletNodeOptions_))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "cb";
                          }
                      })(WAGS_WebAPI.eqAnalyserNodeCb))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "q";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.eqAudioParameter))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "toUnit";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "toId";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "fromUnit";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "fromId";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "unit";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Eq.eqString))))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                          reflectSymbol: function () {
                              return "toUnit";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "toId";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "fromUnit";
                          }
                      })(Data_Eq.eqString))()({
                          reflectSymbol: function () {
                              return "fromId";
                          }
                      })(Data_Eq.eqString))))(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantCons(Data_Variant.ordVariantNil)(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "curve";
                          }
                      })(WAGS_WebAPI.ordBrowserFloatArray))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "terminus";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "instructions";
                          }
                      })(Data_Ord.ordArray(Data_Ord.ordArray(ordInstruction))))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "threshold";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "release";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "ratio";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "q";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "playbackRate";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "periodicOsc";
                          }
                      })(ordPeriodicOscSpec))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "pan";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "onOff";
                          }
                      })(WAGS_Graph_Parameter.ordAudioOnOff))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "offset";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "cb";
                          }
                      })(WAGS_WebAPI.ordMediaRecorderCb))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "loopStart";
                          }
                      })(Data_Ord.ordNumber))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "loopEnd";
                          }
                      })(Data_Ord.ordNumber))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "knee";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "source";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "gain";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "frequency";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "delay";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "buffer";
                          }
                      })(WAGS_WebAPI.ordBrowserAudioBuffer))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "bufferOffset";
                          }
                      })(Data_Ord.ordNumber))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "buffer";
                          }
                      })(WAGS_WebAPI.ordBrowserAudioBuffer))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "paramValue";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "paramName";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "attack";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "cb";
                          }
                      })(WAGS_WebAPI.ordAnalyserNodeCb))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "oversample";
                          }
                      })(ordOversample))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "curve";
                          }
                      })(WAGS_WebAPI.ordBrowserFloatArray))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "terminus";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "instructions";
                          }
                      })(Data_Ord.ordArray(Data_Ord.ordArray(ordInstruction))))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "onOff";
                          }
                      })(WAGS_Graph_Parameter.ordAudioOnOff))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "instructions";
                          }
                      })(Data_Lazy.ordLazy(Data_Ord.ordArray(Data_Ord.ordArray(ordInstruction)))))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "pan";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "onOff";
                          }
                      })(WAGS_Graph_Parameter.ordAudioOnOff))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))))(Data_Ord.ordUnit))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "onOff";
                          }
                      })(WAGS_Graph_Parameter.ordAudioOnOff))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "onOff";
                          }
                      })(WAGS_Graph_Parameter.ordAudioOnOff))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "cb";
                          }
                      })(WAGS_WebAPI.ordMediaRecorderCb))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "playbackRate";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "onOff";
                          }
                      })(WAGS_Graph_Parameter.ordAudioOnOff))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "bufferOffset";
                          }
                      })(Data_Ord.ordNumber))()({
                          reflectSymbol: function () {
                              return "buffer";
                          }
                      })(WAGS_WebAPI.ordBrowserAudioBuffer))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "spec";
                          }
                      })(ordPeriodicOscSpec))()({
                          reflectSymbol: function () {
                              return "onOff";
                          }
                      })(WAGS_Graph_Parameter.ordAudioOnOff))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "q";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "gain";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "q";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "microphone";
                          }
                      })(WAGS_WebAPI.ordBrowserMicrophone))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "element";
                          }
                      })(WAGS_WebAPI.ordBrowserMediaElement))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "gain";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "q";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "playbackRate";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "onOff";
                          }
                      })(WAGS_Graph_Parameter.ordAudioOnOff))()({
                          reflectSymbol: function () {
                              return "loopStart";
                          }
                      })(Data_Ord.ordNumber))()({
                          reflectSymbol: function () {
                              return "loopEnd";
                          }
                      })(Data_Ord.ordNumber))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "buffer";
                          }
                      })(WAGS_WebAPI.ordBrowserAudioBuffer))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "input";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "gain";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "q";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "gain";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "threshold";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "release";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "ratio";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "knee";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "attack";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "delayTime";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "buffer";
                          }
                      })(WAGS_WebAPI.ordBrowserAudioBuffer))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "onOff";
                          }
                      })(WAGS_Graph_Parameter.ordAudioOnOff))()({
                          reflectSymbol: function () {
                              return "offset";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "q";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "options";
                          }
                      })(ordAudioWorkletNodeOptions_))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "cb";
                          }
                      })(WAGS_WebAPI.ordAnalyserNodeCb))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "q";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "freq";
                          }
                      })(WAGS_Graph_Parameter.ordAudioParameter))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "toUnit";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "toId";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "fromUnit";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "fromId";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "unit";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "id";
                          }
                      })(Data_Ord.ordString))))(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "toUnit";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "toId";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "fromUnit";
                          }
                      })(Data_Ord.ordString))()({
                          reflectSymbol: function () {
                              return "fromId";
                          }
                      })(Data_Ord.ordString)))))(v)(v1);
                  };
                  return v4;
              };
              var v3 = Data_Ord.compare(Data_Ord.ordInt)(w1)(w2);
              if (v3 instanceof Data_Ordering.EQ) {
                  return c2(Data_Unit.unit);
              };
              return v3;
          };
      },
      Eq0: function () {
          return eqInstruction;
      }
  };
  exports["iWave"] = iWave;
  exports["iRealImg"] = iRealImg;
  exports["iDisconnectXFromY"] = iDisconnectXFromY;
  exports["iDestroyUnit"] = iDestroyUnit;
  exports["iMakeAllpass"] = iMakeAllpass;
  exports["iMakeAnalyser"] = iMakeAnalyser;
  exports["iMakeAudioWorkletNode"] = iMakeAudioWorkletNode;
  exports["iMakeBandpass"] = iMakeBandpass;
  exports["iMakeConstant"] = iMakeConstant;
  exports["iMakePassthroughConvolver"] = iMakePassthroughConvolver;
  exports["iMakeConvolver"] = iMakeConvolver;
  exports["iMakeDelay"] = iMakeDelay;
  exports["iMakeDynamicsCompressor"] = iMakeDynamicsCompressor;
  exports["iMakeGain"] = iMakeGain;
  exports["iMakeHighpass"] = iMakeHighpass;
  exports["iMakeHighshelf"] = iMakeHighshelf;
  exports["iMakeInput"] = iMakeInput;
  exports["iMakeLoopBuf"] = iMakeLoopBuf;
  exports["iMakeLoopBufWithDeferredBuffer"] = iMakeLoopBufWithDeferredBuffer;
  exports["iMakeLowpass"] = iMakeLowpass;
  exports["iMakeLowshelf"] = iMakeLowshelf;
  exports["iMakeMediaElement"] = iMakeMediaElement;
  exports["iMakeMicrophone"] = iMakeMicrophone;
  exports["iMakeNotch"] = iMakeNotch;
  exports["iMakePeaking"] = iMakePeaking;
  exports["iMakePeriodicOscWithDeferredOsc"] = iMakePeriodicOscWithDeferredOsc;
  exports["iMakePeriodicOsc"] = iMakePeriodicOsc;
  exports["iMakePlayBuf"] = iMakePlayBuf;
  exports["iMakePlayBufWithDeferredBuffer"] = iMakePlayBufWithDeferredBuffer;
  exports["iMakeRecorder"] = iMakeRecorder;
  exports["iMakeSawtoothOsc"] = iMakeSawtoothOsc;
  exports["iMakeSinOsc"] = iMakeSinOsc;
  exports["iMakeSquareOsc"] = iMakeSquareOsc;
  exports["iMakeSpeaker"] = iMakeSpeaker;
  exports["iMakeStereoPanner"] = iMakeStereoPanner;
  exports["iMakeTriangleOsc"] = iMakeTriangleOsc;
  exports["iMakeWaveShaper"] = iMakeWaveShaper;
  exports["iMakeSubgraph"] = iMakeSubgraph;
  exports["iMakeTumult"] = iMakeTumult;
  exports["iConnectXToY"] = iConnectXToY;
  exports["iSetAnalyserNodeCb"] = iSetAnalyserNodeCb;
  exports["iSetMediaRecorderCb"] = iSetMediaRecorderCb;
  exports["iSetAudioWorkletParameter"] = iSetAudioWorkletParameter;
  exports["iSetBuffer"] = iSetBuffer;
  exports["iSetConvolverBuffer"] = iSetConvolverBuffer;
  exports["iSetPeriodicOsc"] = iSetPeriodicOsc;
  exports["iSetOnOff"] = iSetOnOff;
  exports["iSetBufferOffset"] = iSetBufferOffset;
  exports["iSetLoopStart"] = iSetLoopStart;
  exports["iSetLoopEnd"] = iSetLoopEnd;
  exports["iSetRatio"] = iSetRatio;
  exports["iSetOffset"] = iSetOffset;
  exports["iSetAttack"] = iSetAttack;
  exports["iSetGain"] = iSetGain;
  exports["iSetQ"] = iSetQ;
  exports["iSetPan"] = iSetPan;
  exports["iSetThreshold"] = iSetThreshold;
  exports["iSetRelease"] = iSetRelease;
  exports["iSetKnee"] = iSetKnee;
  exports["iSetDelay"] = iSetDelay;
  exports["iSetPlaybackRate"] = iSetPlaybackRate;
  exports["iSetFrequency"] = iSetFrequency;
  exports["iSetWaveShaperCurve"] = iSetWaveShaperCurve;
  exports["iSetInput"] = iSetInput;
  exports["iSetSubgraph"] = iSetSubgraph;
  exports["iSetTumult"] = iSetTumult;
  exports["oTwoX"] = oTwoX;
  exports["ordInstruction"] = ordInstruction;
  exports["showInstruction"] = showInstruction;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Tumult.Reconciliation"] = $PS["WAGS.Tumult.Reconciliation"] || {};
  var exports = $PS["WAGS.Tumult.Reconciliation"];
  var Control_Category = $PS["Control.Category"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Set = $PS["Data.Set"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Data_Variant = $PS["Data.Variant"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Rendered = $PS["WAGS.Rendered"];                
  var du = function (u) {
      var $60 = Data_Set.insert(WAGS_Rendered.ordInstruction);
      return function ($61) {
          return $60(WAGS_Rendered.iDestroyUnit((function (v) {
              return {
                  unit: u,
                  id: v
              };
          })((function (v) {
              return v.id;
          })($61))));
      };
  };
  var derogative = (function () {
      var $62 = Data_Variant.match()()()({
          disconnectXFromY: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          destroyUnit: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          makeAllpass: du("Allpass"),
          makeAnalyser: du("Analyser"),
          makeAudioWorkletNode: du("AudioWorkletNode"),
          makeBandpass: du("Bandpass"),
          makeConstant: du("Constant"),
          makePassthroughConvolver: du("Convolver"),
          makeConvolver: du("Convolver"),
          makeDelay: du("Delay"),
          makeDynamicsCompressor: du("DynamicsCompressor"),
          makeGain: du("Gain"),
          makeHighpass: du("Highpass"),
          makeHighshelf: du("Highshelf"),
          makeInput: du("Input"),
          makeLoopBuf: du("LoopBuf"),
          makeLoopBufWithDeferredBuffer: du("LoopBuf"),
          makeLowpass: du("Lowpass"),
          makeLowshelf: du("Lowshelf"),
          makeMediaElement: du("MediaElement"),
          makeMicrophone: function (v) {
              return Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iDestroyUnit({
                  id: "microphone",
                  unit: "Microphone"
              }));
          },
          makeNotch: du("Notch"),
          makePeaking: du("Peaking"),
          makePeriodicOscWithDeferredOsc: du("PeriodicOsc"),
          makePeriodicOsc: du("PeriodicOsc"),
          makePlayBuf: du("PlayBuf"),
          makePlayBufWithDeferredBuffer: du("PlayBuf"),
          makeRecorder: du("Recorder"),
          makeSawtoothOsc: du("SawtoothOsc"),
          makeSinOsc: du("SinOsc"),
          makeSquareOsc: du("SquareOsc"),
          makeSpeaker: function (v) {
              return Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iDestroyUnit({
                  id: "speaker",
                  unit: "Microphone"
              }));
          },
          makeStereoPanner: du("StereoPanner"),
          makeTriangleOsc: du("TriangleOsc"),
          makeWaveShaper: du("WaveShaper"),
          makeSubgraph: du("Subgraph"),
          makeTumult: du("Tumult"),
          connectXToY: (function () {
              var $65 = Data_Set.insert(WAGS_Rendered.ordInstruction);
              return function ($66) {
                  return $65(WAGS_Rendered.iDisconnectXFromY($66));
              };
          })(),
          setAnalyserNodeCb: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setMediaRecorderCb: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setAudioWorkletParameter: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setBuffer: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setConvolverBuffer: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setPeriodicOsc: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setOnOff: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setBufferOffset: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setLoopStart: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setLoopEnd: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setRatio: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setOffset: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setAttack: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setGain: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setQ: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setPan: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setThreshold: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setRelease: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setKnee: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setDelay: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setPlaybackRate: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setFrequency: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setWaveShaperCurve: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setInput: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setSubgraph: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)),
          setTumult: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn))
      });
      var $63 = Data_Newtype.unwrap();
      return function ($64) {
          return $62($63($64));
      };
  })();
  var reconcileTumult = function ($$new) {
      return function (old) {
          var secondus = Data_List.fromFoldable(Data_Set.foldableSet)(old);
          var primus = Data_List.fromFoldable(Data_Set.foldableSet)($$new);
          var usingDefault = function (l0) {
              return function (h0) {
                  return function (t0) {
                      return function (l1) {
                          return function (h1) {
                              return function (t1) {
                                  return function (set) {
                                      return function (v) {
                                          var v1 = Data_Ord.compare(WAGS_Rendered.ordInstruction)(h0)(h1);
                                          if (v1 instanceof Data_Ordering.LT) {
                                              return go(t0)(l1)(Data_Set.insert(WAGS_Rendered.ordInstruction)(h0)(set));
                                          };
                                          if (v1 instanceof Data_Ordering.GT) {
                                              return go(l0)(t1)(derogative(h1)(set));
                                          };
                                          if (v1 instanceof Data_Ordering.EQ) {
                                              return go(t0)(t1)(set);
                                          };
                                          throw new Error("Failed pattern match at WAGS.Tumult.Reconciliation (line 114, column 5 - line 117, column 25): " + [ v1.constructor.name ]);
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
          var go = function (v) {
              return function (v1) {
                  return function (set) {
                      if (v instanceof Data_List_Types.Nil && v1 instanceof Data_List_Types.Nil) {
                          return set;
                      };
                      if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Nil) {
                          return go(v.value1)(Data_List_Types.Nil.value)(Data_Set.insert(WAGS_Rendered.ordInstruction)(v.value0)(set));
                      };
                      if (v instanceof Data_List_Types.Nil && v1 instanceof Data_List_Types.Cons) {
                          return go(Data_List_Types.Nil.value)(v1.value1)(derogative(v1.value0)(set));
                      };
                      if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                          var udef = usingDefault(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set);
                          return Data_Variant.match()()()({
                              connectXToY: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "connectXToY";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      var o = (function () {
                                          if (a.fromId < b.fromId) {
                                              return go(v.value1)(v1)(Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iConnectXToY(a))(set));
                                          };
                                          if (a.fromId > b.fromId) {
                                              return go(v)(v1.value1)(Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iDisconnectXFromY(b))(set));
                                          };
                                          if (a.toId < b.toId) {
                                              return go(v.value1)(v1)(Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iConnectXToY(a))(set));
                                          };
                                          if (a.toId > b.toId) {
                                              return go(v)(v1.value1)(Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iDisconnectXFromY(b))(set));
                                          };
                                          if (a.fromUnit !== b.fromUnit) {
                                              return go(v)(v1.value1)(Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iDisconnectXFromY(b))(Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iConnectXToY(a))(set)));
                                          };
                                          if (a.toUnit !== b.toUnit) {
                                              return go(v)(v1.value1)(Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iDisconnectXFromY(b))(Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iConnectXToY(a))(set)));
                                          };
                                          if (Data_Boolean.otherwise) {
                                              return go(v.value1)(v1.value1)(set);
                                          };
                                          throw new Error("Failed pattern match at WAGS.Tumult.Reconciliation (line 159, column 23 - line 178, column 51): " + [  ]);
                                      })();
                                      return o;
                                  })(udef)(v1.value0);
                              },
                              makeAllpass: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeAllpass";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)((function () {
                                          var $67 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetFrequency({
                                              id: a.id,
                                              frequency: a.freq
                                          }));
                                          var $68 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetQ({
                                              id: a.id,
                                              q: a.q
                                          }));
                                          return function ($69) {
                                              return $67($68($69));
                                          };
                                      })());
                                  })(udef)(v1.value0);
                              },
                              makeAnalyser: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeAllpass";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)(Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetAnalyserNodeCb({
                                          id: a.id,
                                          cb: a.cb
                                      })));
                                  })(udef)(v1.value0);
                              },
                              disconnectXFromY: function (v2) {
                                  return udef(v1.value0);
                              },
                              destroyUnit: function (v2) {
                                  return udef(v1.value0);
                              },
                              makeAudioWorkletNode: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeAudioWorkletNode";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)((function () {
                                          var fn = Data_Tuple.uncurry(function (paramName) {
                                              return function (paramValue) {
                                                  return WAGS_Rendered.iSetAudioWorkletParameter({
                                                      id: a.id,
                                                      paramName: paramName,
                                                      paramValue: paramValue
                                                  });
                                              };
                                          });
                                          return Data_Set.union(WAGS_Rendered.ordInstruction)(Data_Set.fromFoldable(Data_Foldable.foldableArray)(WAGS_Rendered.ordInstruction)(Control_Category.identity(Control_Category.categoryFn)(Data_Functor.map(Data_Functor.functorArray)(fn)(Foreign_Object.toUnfoldable(Data_Unfoldable.unfoldableArray)((Data_Newtype.unwrap()(a.options)).parameterData)))));
                                      })());
                                  })(udef)(v1.value0);
                              },
                              makeBandpass: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeBandpass";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)((function () {
                                          var $70 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetFrequency({
                                              id: a.id,
                                              frequency: a.freq
                                          }));
                                          var $71 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetQ({
                                              id: a.id,
                                              q: a.q
                                          }));
                                          return function ($72) {
                                              return $70($71($72));
                                          };
                                      })());
                                  })(udef)(v1.value0);
                              },
                              makeConstant: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeConstant";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)(Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetOffset({
                                          id: a.id,
                                          offset: a.offset
                                      })));
                                  })(udef)(v1.value0);
                              },
                              makePassthroughConvolver: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeConvolver";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)(Control_Category.identity(Control_Category.categoryFn));
                                  })(udef)(v1.value0);
                              },
                              makeConvolver: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeConvolver";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)(Control_Category.identity(Control_Category.categoryFn));
                                  })(udef)(v1.value0);
                              },
                              makeDelay: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeDelay";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)(Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetDelay({
                                          id: a.id,
                                          delay: a.delayTime
                                      })));
                                  })(udef)(v1.value0);
                              },
                              makeDynamicsCompressor: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeDynamicsCompressor";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)((function () {
                                          var $73 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetAttack({
                                              id: a.id,
                                              attack: a.attack
                                          }));
                                          var $74 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetRelease({
                                              id: a.id,
                                              release: a.release
                                          }));
                                          var $75 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetThreshold({
                                              id: a.id,
                                              threshold: a.threshold
                                          }));
                                          var $76 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetRatio({
                                              id: a.id,
                                              ratio: a.ratio
                                          }));
                                          var $77 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetKnee({
                                              id: a.id,
                                              knee: a.knee
                                          }));
                                          return function ($78) {
                                              return $73($74($75($76($77($78)))));
                                          };
                                      })());
                                  })(udef)(v1.value0);
                              },
                              makeGain: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeGain";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)(Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetGain({
                                          id: a.id,
                                          gain: a.gain
                                      })));
                                  })(udef)(v1.value0);
                              },
                              makeHighpass: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeHighpass";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)((function () {
                                          var $79 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetFrequency({
                                              id: a.id,
                                              frequency: a.freq
                                          }));
                                          var $80 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetQ({
                                              id: a.id,
                                              q: a.q
                                          }));
                                          return function ($81) {
                                              return $79($80($81));
                                          };
                                      })());
                                  })(udef)(v1.value0);
                              },
                              makeHighshelf: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeHighshelf";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)((function () {
                                          var $82 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetFrequency({
                                              id: a.id,
                                              frequency: a.freq
                                          }));
                                          var $83 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetGain({
                                              id: a.id,
                                              gain: a.gain
                                          }));
                                          return function ($84) {
                                              return $82($83($84));
                                          };
                                      })());
                                  })(udef)(v1.value0);
                              },
                              makeInput: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeInput";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)(Control_Category.identity(Control_Category.categoryFn));
                                  })(udef)(v1.value0);
                              },
                              makeLoopBuf: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeLoopBuf";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)((function () {
                                          var $85 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetBuffer({
                                              id: a.id,
                                              buffer: a.buffer
                                          }));
                                          var $86 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetOnOff({
                                              id: a.id,
                                              onOff: a.onOff
                                          }));
                                          var $87 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetPlaybackRate({
                                              id: a.id,
                                              playbackRate: a.playbackRate
                                          }));
                                          var $88 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetLoopStart({
                                              id: a.id,
                                              loopStart: a.loopStart
                                          }));
                                          var $89 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetLoopEnd({
                                              id: a.id,
                                              loopEnd: a.loopEnd
                                          }));
                                          return function ($90) {
                                              return $85($86($87($88($89($90)))));
                                          };
                                      })());
                                  })(udef)(v1.value0);
                              },
                              makeLoopBufWithDeferredBuffer: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeLoopBufWithDeferredBuffer";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)(Control_Category.identity(Control_Category.categoryFn));
                                  })(udef)(v1.value0);
                              },
                              makeLowpass: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeLowpass";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)((function () {
                                          var $91 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetFrequency({
                                              id: a.id,
                                              frequency: a.freq
                                          }));
                                          var $92 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetQ({
                                              id: a.id,
                                              q: a.q
                                          }));
                                          return function ($93) {
                                              return $91($92($93));
                                          };
                                      })());
                                  })(udef)(v1.value0);
                              },
                              makeLowshelf: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeLowshelf";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)((function () {
                                          var $94 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetFrequency({
                                              id: a.id,
                                              frequency: a.freq
                                          }));
                                          var $95 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetGain({
                                              id: a.id,
                                              gain: a.gain
                                          }));
                                          return function ($96) {
                                              return $94($95($96));
                                          };
                                      })());
                                  })(udef)(v1.value0);
                              },
                              makeMediaElement: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeMediaElement";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)(Control_Category.identity(Control_Category.categoryFn));
                                  })(udef)(v1.value0);
                              },
                              makeMicrophone: function (v2) {
                                  return udef(v1.value0);
                              },
                              makePeaking: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeNotch";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)((function () {
                                          var $97 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetFrequency({
                                              id: a.id,
                                              frequency: a.freq
                                          }));
                                          var $98 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetQ({
                                              id: a.id,
                                              q: a.q
                                          }));
                                          var $99 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetGain({
                                              id: a.id,
                                              gain: a.gain
                                          }));
                                          return function ($100) {
                                              return $97($98($99($100)));
                                          };
                                      })());
                                  })(udef)(v1.value0);
                              },
                              makeNotch: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeNotch";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)((function () {
                                          var $101 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetFrequency({
                                              id: a.id,
                                              frequency: a.freq
                                          }));
                                          var $102 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetQ({
                                              id: a.id,
                                              q: a.q
                                          }));
                                          return function ($103) {
                                              return $101($102($103));
                                          };
                                      })());
                                  })(udef)(v1.value0);
                              },
                              makePeriodicOscWithDeferredOsc: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makePeriodicOscWithDeferredOsc";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)(Control_Category.identity(Control_Category.categoryFn));
                                  })(udef)(v1.value0);
                              },
                              makePeriodicOsc: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makePeriodicOsc";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)((function () {
                                          var $104 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetPeriodicOsc({
                                              id: a.id,
                                              periodicOsc: a.spec
                                          }));
                                          var $105 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetOnOff({
                                              id: a.id,
                                              onOff: a.onOff
                                          }));
                                          var $106 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetFrequency({
                                              id: a.id,
                                              frequency: a.freq
                                          }));
                                          return function ($107) {
                                              return $104($105($106($107)));
                                          };
                                      })());
                                  })(udef)(v1.value0);
                              },
                              makePlayBuf: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makePlayBuf";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)((function () {
                                          var $108 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetBuffer({
                                              id: a.id,
                                              buffer: a.buffer
                                          }));
                                          var $109 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetOnOff({
                                              id: a.id,
                                              onOff: a.onOff
                                          }));
                                          var $110 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetPlaybackRate({
                                              id: a.id,
                                              playbackRate: a.playbackRate
                                          }));
                                          var $111 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetBufferOffset({
                                              id: a.id,
                                              bufferOffset: a.bufferOffset
                                          }));
                                          return function ($112) {
                                              return $108($109($110($111($112))));
                                          };
                                      })());
                                  })(udef)(v1.value0);
                              },
                              makePlayBufWithDeferredBuffer: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makePlayBufWithDeferredBuffer";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)(Control_Category.identity(Control_Category.categoryFn));
                                  })(udef)(v1.value0);
                              },
                              makeRecorder: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeRecorder";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)(Control_Category.identity(Control_Category.categoryFn));
                                  })(udef)(v1.value0);
                              },
                              makeSawtoothOsc: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeSawtoothOsc";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)((function () {
                                          var $113 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetOnOff({
                                              id: a.id,
                                              onOff: a.onOff
                                          }));
                                          var $114 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetFrequency({
                                              id: a.id,
                                              frequency: a.freq
                                          }));
                                          return function ($115) {
                                              return $113($114($115));
                                          };
                                      })());
                                  })(udef)(v1.value0);
                              },
                              makeSinOsc: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeSinOsc";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)((function () {
                                          var $116 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetOnOff({
                                              id: a.id,
                                              onOff: a.onOff
                                          }));
                                          var $117 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetFrequency({
                                              id: a.id,
                                              frequency: a.freq
                                          }));
                                          return function ($118) {
                                              return $116($117($118));
                                          };
                                      })());
                                  })(udef)(v1.value0);
                              },
                              makeSquareOsc: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeSquareOsc";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)((function () {
                                          var $119 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetOnOff({
                                              id: a.id,
                                              onOff: a.onOff
                                          }));
                                          var $120 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetFrequency({
                                              id: a.id,
                                              frequency: a.freq
                                          }));
                                          return function ($121) {
                                              return $119($120($121));
                                          };
                                      })());
                                  })(udef)(v1.value0);
                              },
                              makeSpeaker: function (v2) {
                                  return udef(v1.value0);
                              },
                              makeStereoPanner: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeStereoPanner";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)(Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetPan({
                                          id: a.id,
                                          pan: a.pan
                                      })));
                                  })(udef)(v1.value0);
                              },
                              makeTriangleOsc: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeTriangleOsc";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)((function () {
                                          var $122 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetOnOff({
                                              id: a.id,
                                              onOff: a.onOff
                                          }));
                                          var $123 = Data_Set.insert(WAGS_Rendered.ordInstruction)(WAGS_Rendered.iSetFrequency({
                                              id: a.id,
                                              frequency: a.freq
                                          }));
                                          return function ($124) {
                                              return $122($123($124));
                                          };
                                      })());
                                  })(udef)(v1.value0);
                              },
                              makeWaveShaper: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeWaveShaper";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)(Control_Category.identity(Control_Category.categoryFn));
                                  })(udef)(v1.value0);
                              },
                              makeSubgraph: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeSubgraph";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)(Control_Category.identity(Control_Category.categoryFn));
                                  })(udef)(v1.value0);
                              },
                              makeTumult: function (a) {
                                  return Data_Variant.on()({
                                      reflectSymbol: function () {
                                          return "makeTumult";
                                      }
                                  })(Type_Proxy["Proxy"].value)(function (b) {
                                      return comparable(a)(b)(v)(v.value0)(v.value1)(v1)(v1.value0)(v1.value1)(set)(Control_Category.identity(Control_Category.categoryFn));
                                  })(udef)(v1.value0);
                              },
                              setAnalyserNodeCb: function (v2) {
                                  return udef(v1.value0);
                              },
                              setMediaRecorderCb: function (v2) {
                                  return udef(v1.value0);
                              },
                              setAudioWorkletParameter: function (v2) {
                                  return udef(v1.value0);
                              },
                              setBuffer: function (v2) {
                                  return udef(v1.value0);
                              },
                              setConvolverBuffer: function (v2) {
                                  return udef(v1.value0);
                              },
                              setPeriodicOsc: function (v2) {
                                  return udef(v1.value0);
                              },
                              setOnOff: function (v2) {
                                  return udef(v1.value0);
                              },
                              setBufferOffset: function (v2) {
                                  return udef(v1.value0);
                              },
                              setLoopStart: function (v2) {
                                  return udef(v1.value0);
                              },
                              setLoopEnd: function (v2) {
                                  return udef(v1.value0);
                              },
                              setRatio: function (v2) {
                                  return udef(v1.value0);
                              },
                              setOffset: function (v2) {
                                  return udef(v1.value0);
                              },
                              setAttack: function (v2) {
                                  return udef(v1.value0);
                              },
                              setGain: function (v2) {
                                  return udef(v1.value0);
                              },
                              setQ: function (v2) {
                                  return udef(v1.value0);
                              },
                              setPan: function (v2) {
                                  return udef(v1.value0);
                              },
                              setThreshold: function (v2) {
                                  return udef(v1.value0);
                              },
                              setRelease: function (v2) {
                                  return udef(v1.value0);
                              },
                              setKnee: function (v2) {
                                  return udef(v1.value0);
                              },
                              setDelay: function (v2) {
                                  return udef(v1.value0);
                              },
                              setPlaybackRate: function (v2) {
                                  return udef(v1.value0);
                              },
                              setFrequency: function (v2) {
                                  return udef(v1.value0);
                              },
                              setWaveShaperCurve: function (v2) {
                                  return udef(v1.value0);
                              },
                              setInput: function (v2) {
                                  return udef(v1.value0);
                              },
                              setSubgraph: function (v2) {
                                  return udef(v1.value0);
                              },
                              setTumult: function (v2) {
                                  return udef(v1.value0);
                              }
                          })(v.value0);
                      };
                      throw new Error("Failed pattern match at WAGS.Tumult.Reconciliation (line 141, column 3 - line 145, column 23): " + [ v.constructor.name, v1.constructor.name, set.constructor.name ]);
                  };
              };
          };
          var comparable = function (a) {
              return function (b) {
                  return function (l0) {
                      return function (h0) {
                          return function (t0) {
                              return function (l1) {
                                  return function (h1) {
                                      return function (t1) {
                                          return function (set) {
                                              return function (setf) {
                                                  if (a.id < b.id) {
                                                      return go(t0)(l1)(Data_Set.insert(WAGS_Rendered.ordInstruction)(h0)(set));
                                                  };
                                                  if (b.id < a.id) {
                                                      return go(l0)(t1)(derogative(h1)(set));
                                                  };
                                                  if (Data_Boolean.otherwise) {
                                                      return go(t0)(t1)(setf(set));
                                                  };
                                                  throw new Error("Failed pattern match at WAGS.Tumult.Reconciliation (line 119, column 3 - line 135, column 23): " + [ a.constructor.name, b.constructor.name, l0.constructor.name, h0.constructor.name, t0.constructor.name, l1.constructor.name, h1.constructor.name, t1.constructor.name, set.constructor.name, setf.constructor.name ]);
                                              };
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
          var result = go(primus)(secondus)(Data_Set.empty);
          return result;
      };
  };
  exports["reconcileTumult"] = reconcileTumult;
})(PS);
(function(exports) {
  "use strict";

  exports.createObjectURL = function (blob) {
    return function () {
      return URL.createObjectURL(blob);
    };
  };
})(PS["Web.File.Url"] = PS["Web.File.Url"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Web.File.Url"] = $PS["Web.File.Url"] || {};
  var exports = $PS["Web.File.Url"];
  var $foreign = $PS["Web.File.Url"];
  exports["createObjectURL"] = $foreign.createObjectURL;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Interpret"] = $PS["WAGS.Interpret"] || {};
  var exports = $PS["WAGS.Interpret"];
  var $foreign = $PS["WAGS.Interpret"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Plus = $PS["Control.Plus"];
  var Control_Promise = $PS["Control.Promise"];
  var Data_Array = $PS["Data.Array"];
  var Data_Compactable = $PS["Data.Compactable"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lazy = $PS["Data.Lazy"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Set = $PS["Data.Set"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Typelevel_Undefined = $PS["Data.Typelevel.Undefined"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Variant = $PS["Data.Variant"];
  var Data_Variant_Maybe = $PS["Data.Variant.Maybe"];
  var Data_Vec = $PS["Data.Vec"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Rendered = $PS["WAGS.Rendered"];
  var WAGS_Tumult_Reconciliation = $PS["WAGS.Tumult.Reconciliation"];
  var Web_File_Url = $PS["Web.File.Url"];
  var setWaveShaperCurve = function (dict) {
      return dict.setWaveShaperCurve;
  };
  var setTumult = function (dict) {
      return dict.setTumult;
  };
  var setThreshold = function (dict) {
      return dict.setThreshold;
  };
  var setSubgraph = function (dict) {
      return dict.setSubgraph;
  };
  var setRelease = function (dict) {
      return dict.setRelease;
  };
  var setRatio = function (dict) {
      return dict.setRatio;
  };
  var setQ = function (dict) {
      return dict.setQ;
  };
  var setPlaybackRate = function (dict) {
      return dict.setPlaybackRate;
  };
  var setPeriodicOscV = function (dict) {
      return dict.setPeriodicOscV;
  };
  var setPeriodicOsc = function (dict) {
      return dict.setPeriodicOsc;
  };
  var setPan = function (dict) {
      return dict.setPan;
  };
  var setOnOff = function (dict) {
      return dict.setOnOff;
  };
  var setOffset = function (dict) {
      return dict.setOffset;
  };
  var setMediaRecorderCb = function (dict) {
      return dict.setMediaRecorderCb;
  };
  var setLoopStart = function (dict) {
      return dict.setLoopStart;
  };
  var setLoopEnd = function (dict) {
      return dict.setLoopEnd;
  };
  var setKnee = function (dict) {
      return dict.setKnee;
  };
  var setInput = function (dict) {
      return dict.setInput;
  };
  var setGain = function (dict) {
      return dict.setGain;
  };
  var setFrequency = function (dict) {
      return dict.setFrequency;
  };
  var setDelay = function (dict) {
      return dict.setDelay;
  };
  var setConvolverBuffer = function (dict) {
      return dict.setConvolverBuffer;
  };
  var setBufferOffset = function (dict) {
      return dict.setBufferOffset;
  };
  var setBuffer = function (dict) {
      return dict.setBuffer;
  };
  var setAudioWorkletParameter = function (dict) {
      return dict.setAudioWorkletParameter;
  };
  var setAttack = function (dict) {
      return dict.setAttack;
  };
  var setAnalyserNodeCb = function (dict) {
      return dict.setAnalyserNodeCb;
  };
  var mediaRecorderToUrl = function (s) {
      return function (cb) {
          return function (mr) {
              return Data_Function.flip($foreign.mediaRecorderToBlob(s))(mr)((function () {
                  var $530 = Control_Bind.bindFlipped(Effect.bindEffect)(cb);
                  return function ($531) {
                      return $530(Web_File_Url.createObjectURL($531));
                  };
              })());
          };
      };
  };
  var makeWaveShaper = function (dict) {
      return dict.makeWaveShaper;
  };
  var makeTumult = function (dict) {
      return dict.makeTumult;
  };
  var makeTriangleOsc = function (dict) {
      return dict.makeTriangleOsc;
  };
  var makeSubgraph = function (dict) {
      return dict.makeSubgraph;
  };
  var makeStereoPanner = function (dict) {
      return dict.makeStereoPanner;
  };
  var makeSquareOsc = function (dict) {
      return dict.makeSquareOsc;
  };
  var makeSpeaker = function (dict) {
      return dict.makeSpeaker;
  };
  var makeSinOsc = function (dict) {
      return dict.makeSinOsc;
  };
  var makeSawtoothOsc = function (dict) {
      return dict.makeSawtoothOsc;
  };
  var makeRecorder = function (dict) {
      return dict.makeRecorder;
  };
  var makePlayBufWithDeferredBuffer = function (dict) {
      return dict.makePlayBufWithDeferredBuffer;
  };
  var makePlayBuf = function (dict) {
      return dict.makePlayBuf;
  };
  var makePeriodicWave = function (dictLt) {
      return function (ctx) {
          return function (a) {
              return function (b) {
                  return $foreign.makePeriodicWaveImpl(ctx)(Data_Vec.toArray(a))(Data_Vec.toArray(b));
              };
          };
      };
  };
  var makePeriodicOscWithDeferredOsc = function (dict) {
      return dict.makePeriodicOscWithDeferredOsc;
  };
  var makePeriodicOscV = function (dict) {
      return dict.makePeriodicOscV;
  };
  var makePeriodicOsc = function (dict) {
      return dict.makePeriodicOsc;
  };
  var makePeaking = function (dict) {
      return dict.makePeaking;
  };
  var makePassthroughConvolver = function (dict) {
      return dict.makePassthroughConvolver;
  };
  var makeNotch = function (dict) {
      return dict.makeNotch;
  };
  var makeMicrophone = function (dict) {
      return dict.makeMicrophone;
  };
  var makeMediaElement = function (dict) {
      return dict.makeMediaElement;
  };
  var makeLowshelf = function (dict) {
      return dict.makeLowshelf;
  };
  var makeLowpass = function (dict) {
      return dict.makeLowpass;
  };
  var makeLoopBufWithDeferredBuffer = function (dict) {
      return dict.makeLoopBufWithDeferredBuffer;
  };
  var makeLoopBuf = function (dict) {
      return dict.makeLoopBuf;
  };
  var makeInput = function (dict) {
      return dict.makeInput;
  };
  var makeHighshelf = function (dict) {
      return dict.makeHighshelf;
  };
  var makeHighpass = function (dict) {
      return dict.makeHighpass;
  };
  var makeGain = function (dict) {
      return dict.makeGain;
  };
  var makeDynamicsCompressor = function (dict) {
      return dict.makeDynamicsCompressor;
  };
  var makeDelay = function (dict) {
      return dict.makeDelay;
  };
  var makeConvolver = function (dict) {
      return dict.makeConvolver;
  };
  var makeConstant = function (dict) {
      return dict.makeConstant;
  };
  var makeBandpass = function (dict) {
      return dict.makeBandpass;
  };
  var makeAudioWorkletNode = function (dict) {
      return dict.makeAudioWorkletNode;
  };
  var makeAnalyser = function (dict) {
      return dict.makeAnalyser;
  };
  var makeAllpass = function (dict) {
      return dict.makeAllpass;
  };
  var handleSubgraph = function (f) {
      return function (v) {
          return Data_Function["const"](f({
              id: v.id,
              instructions: Data_Lazy.defer(function (v1) {
                  var subs = Data_Functor.map(Data_Functor.functorArray)(function (v2) {
                      return Data_Variant_Maybe.maybe(Data_Maybe.Nothing.value)(Data_Maybe.Just.create)(Data_Functor.map(Data_Variant_Maybe.functorMaybe)(WAGS_Control_Types.oneSubFrame(v.scenes(v2.index)))(v2.env));
                  })(v.envs);
                  return Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Functor.functorArray)(Data_Function.applyFlipped(Data_Unit.unit)))(Data_Functor.map(Data_Functor.functorArray)(function (v2) {
                      return v2.instructions;
                  })(Data_Compactable.compact(Data_Compactable.compactableArray)(subs)));
              })
          }));
      };
  };
  var freeAudioInterpret = {
      connectXToY: function ($532) {
          return Data_Function["const"](WAGS_Rendered.iConnectXToY($532));
      },
      disconnectXFromY: function ($533) {
          return Data_Function["const"](WAGS_Rendered.iDisconnectXFromY($533));
      },
      destroyUnit: function ($534) {
          return Data_Function["const"](WAGS_Rendered.iDestroyUnit($534));
      },
      makeAllpass: function ($535) {
          return Data_Function["const"](WAGS_Rendered.iMakeAllpass($535));
      },
      makeAnalyser: function ($536) {
          return Data_Function["const"](WAGS_Rendered.iMakeAnalyser($536));
      },
      makeAudioWorkletNode: function ($537) {
          return Data_Function["const"](WAGS_Rendered.iMakeAudioWorkletNode($537));
      },
      makeBandpass: function ($538) {
          return Data_Function["const"](WAGS_Rendered.iMakeBandpass($538));
      },
      makeConstant: function ($539) {
          return Data_Function["const"](WAGS_Rendered.iMakeConstant($539));
      },
      makePassthroughConvolver: function ($540) {
          return Data_Function["const"](WAGS_Rendered.iMakePassthroughConvolver($540));
      },
      makeConvolver: function ($541) {
          return Data_Function["const"](WAGS_Rendered.iMakeConvolver($541));
      },
      makeDelay: function ($542) {
          return Data_Function["const"](WAGS_Rendered.iMakeDelay($542));
      },
      makeInput: function ($543) {
          return Data_Function["const"](WAGS_Rendered.iMakeInput($543));
      },
      makeTumult: function ($544) {
          return Data_Function["const"](WAGS_Rendered.iMakeTumult($544));
      },
      makeSubgraph: function (dictIsSymbol) {
          return handleSubgraph(WAGS_Rendered.iMakeSubgraph);
      },
      makeDynamicsCompressor: function ($545) {
          return Data_Function["const"](WAGS_Rendered.iMakeDynamicsCompressor($545));
      },
      makeGain: function ($546) {
          return Data_Function["const"](WAGS_Rendered.iMakeGain($546));
      },
      makeHighpass: function ($547) {
          return Data_Function["const"](WAGS_Rendered.iMakeHighpass($547));
      },
      makeHighshelf: function ($548) {
          return Data_Function["const"](WAGS_Rendered.iMakeHighshelf($548));
      },
      makeLoopBufWithDeferredBuffer: function ($549) {
          return Data_Function["const"](WAGS_Rendered.iMakeLoopBufWithDeferredBuffer($549));
      },
      makeLoopBuf: function ($550) {
          return Data_Function["const"](WAGS_Rendered.iMakeLoopBuf($550));
      },
      makeLowpass: function ($551) {
          return Data_Function["const"](WAGS_Rendered.iMakeLowpass($551));
      },
      makeLowshelf: function ($552) {
          return Data_Function["const"](WAGS_Rendered.iMakeLowshelf($552));
      },
      makeMediaElement: function ($553) {
          return Data_Function["const"](WAGS_Rendered.iMakeMediaElement($553));
      },
      makeMicrophone: function ($554) {
          return Data_Function["const"](WAGS_Rendered.iMakeMicrophone($554));
      },
      makeNotch: function ($555) {
          return Data_Function["const"](WAGS_Rendered.iMakeNotch($555));
      },
      makePeaking: function ($556) {
          return Data_Function["const"](WAGS_Rendered.iMakePeaking($556));
      },
      makePeriodicOsc: function (v) {
          return Data_Function["const"](WAGS_Rendered.iMakePeriodicOsc({
              id: v.id,
              onOff: v.onOff,
              spec: WAGS_Rendered.iWave(v.wave),
              freq: v.freq
          }));
      },
      makePeriodicOscV: function (v) {
          return Data_Function["const"](WAGS_Rendered.iMakePeriodicOsc({
              id: v.id,
              onOff: v.onOff,
              spec: WAGS_Rendered.iRealImg(v.realImg),
              freq: v.freq
          }));
      },
      makePeriodicOscWithDeferredOsc: function ($557) {
          return Data_Function["const"](WAGS_Rendered.iMakePeriodicOscWithDeferredOsc($557));
      },
      makePlayBufWithDeferredBuffer: function ($558) {
          return Data_Function["const"](WAGS_Rendered.iMakePlayBufWithDeferredBuffer($558));
      },
      makePlayBuf: function ($559) {
          return Data_Function["const"](WAGS_Rendered.iMakePlayBuf($559));
      },
      makeRecorder: function ($560) {
          return Data_Function["const"](WAGS_Rendered.iMakeRecorder($560));
      },
      makeSawtoothOsc: function ($561) {
          return Data_Function["const"](WAGS_Rendered.iMakeSawtoothOsc($561));
      },
      makeSinOsc: function ($562) {
          return Data_Function["const"](WAGS_Rendered.iMakeSinOsc($562));
      },
      makeSpeaker: Data_Function["const"](WAGS_Rendered.iMakeSpeaker),
      makeSquareOsc: function ($563) {
          return Data_Function["const"](WAGS_Rendered.iMakeSquareOsc($563));
      },
      makeStereoPanner: function ($564) {
          return Data_Function["const"](WAGS_Rendered.iMakeStereoPanner($564));
      },
      makeTriangleOsc: function ($565) {
          return Data_Function["const"](WAGS_Rendered.iMakeTriangleOsc($565));
      },
      makeWaveShaper: function ($566) {
          return Data_Function["const"](WAGS_Rendered.iMakeWaveShaper($566));
      },
      setAudioWorkletParameter: function ($567) {
          return Data_Function["const"](WAGS_Rendered.iSetAudioWorkletParameter($567));
      },
      setBuffer: function ($568) {
          return Data_Function["const"](WAGS_Rendered.iSetBuffer($568));
      },
      setConvolverBuffer: function ($569) {
          return Data_Function["const"](WAGS_Rendered.iSetConvolverBuffer($569));
      },
      setPeriodicOsc: function (v) {
          return Data_Function["const"](WAGS_Rendered.iSetPeriodicOsc({
              id: v.id,
              periodicOsc: WAGS_Rendered.iWave(v.wave)
          }));
      },
      setPeriodicOscV: function (v) {
          return Data_Function["const"](WAGS_Rendered.iSetPeriodicOsc({
              id: v.id,
              periodicOsc: WAGS_Rendered.iRealImg(v.realImg)
          }));
      },
      setOnOff: function ($570) {
          return Data_Function["const"](WAGS_Rendered.iSetOnOff($570));
      },
      setMediaRecorderCb: function ($571) {
          return Data_Function["const"](WAGS_Rendered.iSetMediaRecorderCb($571));
      },
      setAnalyserNodeCb: function ($572) {
          return Data_Function["const"](WAGS_Rendered.iSetAnalyserNodeCb($572));
      },
      setBufferOffset: function ($573) {
          return Data_Function["const"](WAGS_Rendered.iSetBufferOffset($573));
      },
      setLoopStart: function ($574) {
          return Data_Function["const"](WAGS_Rendered.iSetLoopStart($574));
      },
      setLoopEnd: function ($575) {
          return Data_Function["const"](WAGS_Rendered.iSetLoopEnd($575));
      },
      setRatio: function ($576) {
          return Data_Function["const"](WAGS_Rendered.iSetRatio($576));
      },
      setOffset: function ($577) {
          return Data_Function["const"](WAGS_Rendered.iSetOffset($577));
      },
      setAttack: function ($578) {
          return Data_Function["const"](WAGS_Rendered.iSetAttack($578));
      },
      setGain: function ($579) {
          return Data_Function["const"](WAGS_Rendered.iSetGain($579));
      },
      setQ: function ($580) {
          return Data_Function["const"](WAGS_Rendered.iSetQ($580));
      },
      setPan: function ($581) {
          return Data_Function["const"](WAGS_Rendered.iSetPan($581));
      },
      setThreshold: function ($582) {
          return Data_Function["const"](WAGS_Rendered.iSetThreshold($582));
      },
      setRelease: function ($583) {
          return Data_Function["const"](WAGS_Rendered.iSetRelease($583));
      },
      setKnee: function ($584) {
          return Data_Function["const"](WAGS_Rendered.iSetKnee($584));
      },
      setDelay: function ($585) {
          return Data_Function["const"](WAGS_Rendered.iSetDelay($585));
      },
      setPlaybackRate: function ($586) {
          return Data_Function["const"](WAGS_Rendered.iSetPlaybackRate($586));
      },
      setFrequency: function ($587) {
          return Data_Function["const"](WAGS_Rendered.iSetFrequency($587));
      },
      setWaveShaperCurve: function ($588) {
          return Data_Function["const"](WAGS_Rendered.iSetWaveShaperCurve($588));
      },
      setInput: function ($589) {
          return Data_Function["const"](WAGS_Rendered.iSetInput($589));
      },
      setSubgraph: function (v) {
          return function (v1) {
              return WAGS_Rendered.iSetSubgraph({
                  id: v.id
              });
          };
      },
      setTumult: function ($590) {
          return Data_Function["const"](WAGS_Rendered.iSetTumult($590));
      }
  };
  var envsToFFI = (function () {
      var go = function (v) {
          return {
              pos: v.pos,
              index: v.index,
              env: Data_Nullable.toNullable(Data_Variant_Maybe.maybe(Data_Maybe.Nothing.value)(Data_Maybe.Just.create)(v.env))
          };
      };
      return Data_Functor.map(Data_Functor.functorArray)(go);
  })();
  var disconnectXFromY = function (dict) {
      return dict.disconnectXFromY;
  };
  var destroyUnit = function (dict) {
      return dict.destroyUnit;
  };
  var decodeAudioDataFromUri = function (ctx) {
      return function (s) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Control_Promise.toAffE($foreign.fetchArrayBuffer(s)))((function () {
              var $591 = $foreign.decodeAudioDataFromArrayBuffer(ctx);
              return function ($592) {
                  return Control_Promise.toAffE($591($592));
              };
          })());
      };
  };
  var connectXToY = function (dict) {
      return dict.connectXToY;
  };
  var interpretInstruction = function (dictAudioInterpret) {
      var $593 = Data_Variant.match()()()({
          disconnectXFromY: function (a) {
              return disconnectXFromY(dictAudioInterpret)(a);
          },
          destroyUnit: function (a) {
              return destroyUnit(dictAudioInterpret)(a);
          },
          makeAllpass: function (a) {
              return makeAllpass(dictAudioInterpret)(a);
          },
          makeAnalyser: function (a) {
              return makeAnalyser(dictAudioInterpret)(a);
          },
          makeAudioWorkletNode: function (a) {
              return makeAudioWorkletNode(dictAudioInterpret)(a);
          },
          makeBandpass: function (a) {
              return makeBandpass(dictAudioInterpret)(a);
          },
          makeConstant: function (a) {
              return makeConstant(dictAudioInterpret)(a);
          },
          makePassthroughConvolver: function (a) {
              return makePassthroughConvolver(dictAudioInterpret)(a);
          },
          makeConvolver: function (a) {
              return makeConvolver(dictAudioInterpret)(a);
          },
          makeDelay: function (a) {
              return makeDelay(dictAudioInterpret)(a);
          },
          makeDynamicsCompressor: function (a) {
              return makeDynamicsCompressor(dictAudioInterpret)(a);
          },
          makeGain: function (a) {
              return makeGain(dictAudioInterpret)(a);
          },
          makeHighpass: function (a) {
              return makeHighpass(dictAudioInterpret)(a);
          },
          makeHighshelf: function (a) {
              return makeHighshelf(dictAudioInterpret)(a);
          },
          makeInput: function (a) {
              return makeInput(dictAudioInterpret)(a);
          },
          makeLoopBuf: function (a) {
              return makeLoopBuf(dictAudioInterpret)(a);
          },
          makeLoopBufWithDeferredBuffer: function (a) {
              return makeLoopBufWithDeferredBuffer(dictAudioInterpret)(a);
          },
          makeLowpass: function (a) {
              return makeLowpass(dictAudioInterpret)(a);
          },
          makeLowshelf: function (a) {
              return makeLowshelf(dictAudioInterpret)(a);
          },
          makeMediaElement: function (a) {
              return makeMediaElement(dictAudioInterpret)(a);
          },
          makeMicrophone: function (a) {
              return makeMicrophone(dictAudioInterpret)(a);
          },
          makeNotch: function (a) {
              return makeNotch(dictAudioInterpret)(a);
          },
          makePeaking: function (a) {
              return makePeaking(dictAudioInterpret)(a);
          },
          makePeriodicOscWithDeferredOsc: function (a) {
              return makePeriodicOscWithDeferredOsc(dictAudioInterpret)(a);
          },
          makePeriodicOsc: function (v) {
              return Data_Variant.match()()()({
                  wave: function (wave) {
                      return makePeriodicOsc(dictAudioInterpret)({
                          id: v.id,
                          wave: wave,
                          onOff: v.onOff,
                          freq: v.freq
                      });
                  },
                  realImg: function (realImg) {
                      return makePeriodicOscV(dictAudioInterpret)({
                          id: v.id,
                          realImg: realImg,
                          onOff: v.onOff,
                          freq: v.freq
                      });
                  }
              })(Data_Newtype.unwrap()(v.spec));
          },
          makePlayBuf: function (a) {
              return makePlayBuf(dictAudioInterpret)(a);
          },
          makePlayBufWithDeferredBuffer: function (a) {
              return makePlayBufWithDeferredBuffer(dictAudioInterpret)(a);
          },
          makeRecorder: function (a) {
              return makeRecorder(dictAudioInterpret)(a);
          },
          makeSawtoothOsc: function (a) {
              return makeSawtoothOsc(dictAudioInterpret)(a);
          },
          makeSinOsc: function (a) {
              return makeSinOsc(dictAudioInterpret)(a);
          },
          makeSquareOsc: function (a) {
              return makeSquareOsc(dictAudioInterpret)(a);
          },
          makeSpeaker: Data_Function["const"](makeSpeaker(dictAudioInterpret)),
          makeStereoPanner: function (a) {
              return makeStereoPanner(dictAudioInterpret)(a);
          },
          makeTriangleOsc: function (a) {
              return makeTriangleOsc(dictAudioInterpret)(a);
          },
          makeWaveShaper: function (a) {
              return makeWaveShaper(dictAudioInterpret)(a);
          },
          makeSubgraph: function (v) {
              return makeGain(dictAudioInterpret)({
                  id: v.id,
                  gain: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(1.0)
              });
          },
          makeTumult: function (v) {
              return makeGain(dictAudioInterpret)({
                  id: v.id,
                  gain: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(1.0)
              });
          },
          connectXToY: function (a) {
              return connectXToY(dictAudioInterpret)(a);
          },
          setAnalyserNodeCb: function (a) {
              return setAnalyserNodeCb(dictAudioInterpret)(a);
          },
          setMediaRecorderCb: function (a) {
              return setMediaRecorderCb(dictAudioInterpret)(a);
          },
          setAudioWorkletParameter: function (a) {
              return setAudioWorkletParameter(dictAudioInterpret)(a);
          },
          setBuffer: function (a) {
              return setBuffer(dictAudioInterpret)(a);
          },
          setConvolverBuffer: function (a) {
              return setConvolverBuffer(dictAudioInterpret)(a);
          },
          setPeriodicOsc: function (v) {
              return Data_Variant.match()()()({
                  wave: function (wave) {
                      return setPeriodicOsc(dictAudioInterpret)({
                          id: v.id,
                          wave: wave
                      });
                  },
                  realImg: function (realImg) {
                      return setPeriodicOscV(dictAudioInterpret)({
                          id: v.id,
                          realImg: realImg
                      });
                  }
              })(Data_Newtype.unwrap()(v.periodicOsc));
          },
          setOnOff: function (a) {
              return setOnOff(dictAudioInterpret)(a);
          },
          setBufferOffset: function (a) {
              return setBufferOffset(dictAudioInterpret)(a);
          },
          setLoopStart: function (a) {
              return setLoopStart(dictAudioInterpret)(a);
          },
          setLoopEnd: function (a) {
              return setLoopEnd(dictAudioInterpret)(a);
          },
          setRatio: function (a) {
              return setRatio(dictAudioInterpret)(a);
          },
          setOffset: function (a) {
              return setOffset(dictAudioInterpret)(a);
          },
          setAttack: function (a) {
              return setAttack(dictAudioInterpret)(a);
          },
          setGain: function (a) {
              return setGain(dictAudioInterpret)(a);
          },
          setQ: function (a) {
              return setQ(dictAudioInterpret)(a);
          },
          setPan: function (a) {
              return setPan(dictAudioInterpret)(a);
          },
          setThreshold: function (a) {
              return setThreshold(dictAudioInterpret)(a);
          },
          setRelease: function (a) {
              return setRelease(dictAudioInterpret)(a);
          },
          setKnee: function (a) {
              return setKnee(dictAudioInterpret)(a);
          },
          setDelay: function (a) {
              return setDelay(dictAudioInterpret)(a);
          },
          setPlaybackRate: function (a) {
              return setPlaybackRate(dictAudioInterpret)(a);
          },
          setFrequency: function (a) {
              return setFrequency(dictAudioInterpret)(a);
          },
          setWaveShaperCurve: function (a) {
              return setWaveShaperCurve(dictAudioInterpret)(a);
          },
          setInput: function (a) {
              return setInput(dictAudioInterpret)(a);
          },
          setSubgraph: function (v) {
              return setGain(dictAudioInterpret)({
                  id: v.id,
                  gain: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(1.0)
              });
          },
          setTumult: function (v) {
              return setGain(dictAudioInterpret)({
                  id: v.id,
                  gain: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(1.0)
              });
          }
      });
      var $594 = Data_Newtype.unwrap();
      return function ($595) {
          return $593($594($595));
      };
  };
  var makeInstructionsEffectful = function (a) {
      return function (v) {
          if (v instanceof Data_Maybe.Nothing) {
              return Data_Functor.map(Data_Functor.functorArray)(interpretInstruction(effectfulAudioInterpret))(a);
          };
          if (v instanceof Data_Maybe.Just) {
              return Data_Functor.map(Data_Functor.functorArray)(interpretInstruction(effectfulAudioInterpret))(Data_Array.fromFoldable(Data_Set.foldableSet)(WAGS_Tumult_Reconciliation.reconcileTumult(Data_Set.fromFoldable(Data_Foldable.foldableArray)(WAGS_Rendered.ordInstruction)(a))(Data_Set.fromFoldable(Data_Foldable.foldableArray)(WAGS_Rendered.ordInstruction)(v.value0))));
          };
          throw new Error("Failed pattern match at WAGS.Interpret (line 1027, column 31 - line 1032, column 6): " + [ v.constructor.name ]);
      };
  };
  var effectfulAudioInterpret = {
      connectXToY: $foreign.connectXToY_,
      disconnectXFromY: $foreign.disconnectXFromY_,
      destroyUnit: $foreign.destroyUnit_,
      makeInput: $foreign.makeInput_,
      makeAllpass: $foreign.makeAllpass_,
      makeAnalyser: $foreign.makeAnalyser_,
      makeAudioWorkletNode: $foreign.makeAudioWorkletNode_,
      makeBandpass: $foreign.makeBandpass_,
      makeConstant: $foreign.makeConstant_,
      makeConvolver: $foreign.makeConvolver_,
      makePassthroughConvolver: $foreign.makePassthroughConvolver_,
      makeDelay: $foreign.makeDelay_,
      makeDynamicsCompressor: $foreign.makeDynamicsCompressor_,
      makeGain: $foreign.makeGain_,
      makeHighpass: $foreign.makeHighpass_,
      makeHighshelf: $foreign.makeHighshelf_,
      makeLoopBufWithDeferredBuffer: $foreign.makeLoopBufWithDeferredBuffer_,
      makeLoopBuf: $foreign.makeLoopBuf_,
      makeLowpass: $foreign.makeLowpass_,
      makeLowshelf: $foreign.makeLowshelf_,
      makeMediaElement: $foreign.makeMediaElement_,
      makeMicrophone: $foreign.makeMicrophone_,
      makeNotch: $foreign.makeNotch_,
      makePeaking: $foreign.makePeaking_,
      makePeriodicOscWithDeferredOsc: $foreign.makePeriodicOscWithDeferredOsc_,
      makePeriodicOsc: $foreign.makePeriodicOsc_,
      makePeriodicOscV: $foreign.makePeriodicOscV_,
      makePlayBufWithDeferredBuffer: $foreign.makePlayBufWithDeferredBuffer_,
      makePlayBuf: $foreign.makePlayBuf_,
      makeRecorder: $foreign.makeRecorder_,
      makeSawtoothOsc: $foreign.makeSawtoothOsc_,
      makeSinOsc: $foreign.makeSinOsc_,
      makeSpeaker: $foreign.makeSpeaker_,
      makeSquareOsc: $foreign.makeSquareOsc_,
      makeStereoPanner: $foreign.makeStereoPanner_,
      makeSubgraph: function (dictIsSymbol) {
          return function (v) {
              return function (audio) {
                  return $foreign.makeSubgraph_(v.id)(Data_Symbol.reflectSymbol(dictIsSymbol)(v.terminus))(envsToFFI(v.envs))(v.scenes)(function (env) {
                      return function (scene) {
                          var res = WAGS_Control_Types.oneSubFrame(scene)(env);
                          return {
                              instructions: res.instructions,
                              nextScene: res.next
                          };
                      };
                  })(audio);
              };
          };
      },
      makeTumult: function (v) {
          return function (toFFI) {
              return $foreign.makeTumult_(v.id)(v.terminus)(v.instructions)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create)(makeInstructionsEffectful)(toFFI);
          };
      },
      makeTriangleOsc: $foreign.makeTriangleOsc_,
      makeWaveShaper: $foreign.makeWaveShaper_,
      setAudioWorkletParameter: $foreign.setAudioWorkletParameter_,
      setAnalyserNodeCb: $foreign.setAnalyserNodeCb_,
      setMediaRecorderCb: $foreign.setMediaRecorderCb_,
      setConvolverBuffer: $foreign.setConvolverBuffer_,
      setBuffer: $foreign.setBuffer_,
      setPeriodicOsc: $foreign.setPeriodicOsc_,
      setPeriodicOscV: $foreign.setPeriodicOscV_,
      setOnOff: $foreign.setOnOff_,
      setBufferOffset: $foreign.setBufferOffset_,
      setLoopStart: $foreign.setLoopStart_,
      setLoopEnd: $foreign.setLoopEnd_,
      setRatio: $foreign.setRatio_,
      setOffset: $foreign.setOffset_,
      setAttack: $foreign.setAttack_,
      setGain: $foreign.setGain_,
      setQ: $foreign.setQ_,
      setPan: $foreign.setPan_,
      setThreshold: $foreign.setThreshold_,
      setRelease: $foreign.setRelease_,
      setKnee: $foreign.setKnee_,
      setDelay: $foreign.setDelay_,
      setPlaybackRate: $foreign.setPlaybackRate_,
      setFrequency: $foreign.setFrequency_,
      setWaveShaperCurve: $foreign.setWaveShaperCurve_,
      setInput: $foreign.setInput_,
      setSubgraph: function (v) {
          return function (audio) {
              return $foreign.setSubgraph_(v.id)(envsToFFI(v.envs))(audio);
          };
      },
      setTumult: function (v) {
          return function (toFFI) {
              return $foreign.setTumult_(v.id)(v.terminus)(v.instructions)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create)(makeInstructionsEffectful)(toFFI);
          };
      }
  };
  var browserMediaStreamToBrowserMicrophone = Unsafe_Coerce.unsafeCoerce;
  var browserMediaStreamToBrowserCamera = Unsafe_Coerce.unsafeCoerce;
  var getMicrophoneAndCamera = function (audio) {
      return function (video) {
          return Data_Functor.map(Effect_Aff.functorAff)(function (i) {
              return {
                  microphone: (function () {
                      if (audio) {
                          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(browserMediaStreamToBrowserMicrophone(i));
                      };
                      return Control_Plus.empty(Data_Maybe.plusMaybe);
                  })(),
                  camera: (function () {
                      if (video) {
                          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(browserMediaStreamToBrowserCamera(i));
                      };
                      return Control_Plus.empty(Data_Maybe.plusMaybe);
                  })()
              };
          })(Control_Promise.toAffE($foreign.getBrowserMediaStreamImpl(audio)(video)));
      };
  };
  var audioWorkletAddModule = function (dictIsSymbol) {
      return function (dictNat) {
          return function (dictPos) {
              return function (dictValidateOutputChannelCount) {
                  return function (dictHomogeneous) {
                      return function (dictWriteForeign) {
                          return function (c) {
                              return function (px) {
                                  return function (v) {
                                      return Data_Functor.voidLeft(Effect_Aff.functorAff)(Control_Promise.toAffE($foreign.audioWorkletAddModule_(c)(px)))(Data_Unit.unit);
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var audioEngine2nd = function (v) {
      return function (env) {
          var eaA = v(env);
          return {
              instructions: Data_Functor.map(Data_Functor.functorArray)(function (f) {
                  return function (bSide) {
                      return Data_Tuple.snd(f(new Data_Tuple.Tuple(Data_Unit.unit, bSide)));
                  };
              })(eaA.instructions),
              res: eaA.res,
              next: audioEngine2nd(eaA.next)
          };
      };
  };
  var audioEngine1st = function (v) {
      return function (env) {
          var eaA = v(env);
          return {
              instructions: Data_Functor.map(Data_Functor.functorArray)(function (f) {
                  return function (aSide) {
                      return Data_Tuple.fst(f(new Data_Tuple.Tuple(aSide, Data_Typelevel_Undefined["undefined"])));
                  };
              })(eaA.instructions),
              res: eaA.res,
              next: audioEngine1st(eaA.next)
          };
      };
  };
  var mixedAudioInterpret = {
      connectXToY: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(connectXToY(freeAudioInterpret)(a)(v.value0), connectXToY(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      disconnectXFromY: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(disconnectXFromY(freeAudioInterpret)(a)(v.value0), disconnectXFromY(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      destroyUnit: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(destroyUnit(freeAudioInterpret)(a)(v.value0), destroyUnit(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeSubgraph: function (dictIsSymbol) {
          return function (v) {
              return function (v1) {
                  return new Data_Tuple.Tuple(makeSubgraph(freeAudioInterpret)(dictIsSymbol)({
                      id: v.id,
                      terminus: v.terminus,
                      envs: v.envs,
                      scenes: Data_Functor.map(Data_Functor.functorFn)(audioEngine1st)(v.scenes)
                  })(v1.value0), makeSubgraph(effectfulAudioInterpret)(dictIsSymbol)({
                      id: v.id,
                      terminus: v.terminus,
                      envs: v.envs,
                      scenes: Data_Functor.map(Data_Functor.functorFn)(audioEngine2nd)(v.scenes)
                  })(v1.value1));
              };
          };
      },
      makeInput: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeInput(freeAudioInterpret)(a)(v.value0), makeInput(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeAllpass: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeAllpass(freeAudioInterpret)(a)(v.value0), makeAllpass(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeAnalyser: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeAnalyser(freeAudioInterpret)(a)(v.value0), makeAnalyser(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeAudioWorkletNode: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeAudioWorkletNode(freeAudioInterpret)(a)(v.value0), makeAudioWorkletNode(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeBandpass: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeBandpass(freeAudioInterpret)(a)(v.value0), makeBandpass(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeConstant: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeConstant(freeAudioInterpret)(a)(v.value0), makeConstant(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makePassthroughConvolver: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makePassthroughConvolver(freeAudioInterpret)(a)(v.value0), makePassthroughConvolver(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeConvolver: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeConvolver(freeAudioInterpret)(a)(v.value0), makeConvolver(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeDelay: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeDelay(freeAudioInterpret)(a)(v.value0), makeDelay(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeDynamicsCompressor: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeDynamicsCompressor(freeAudioInterpret)(a)(v.value0), makeDynamicsCompressor(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeGain: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeGain(freeAudioInterpret)(a)(v.value0), makeGain(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeHighpass: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeHighpass(freeAudioInterpret)(a)(v.value0), makeHighpass(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeHighshelf: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeHighshelf(freeAudioInterpret)(a)(v.value0), makeHighshelf(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeLoopBufWithDeferredBuffer: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeLoopBufWithDeferredBuffer(freeAudioInterpret)(a)(v.value0), makeLoopBufWithDeferredBuffer(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeLoopBuf: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeLoopBuf(freeAudioInterpret)(a)(v.value0), makeLoopBuf(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeLowpass: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeLowpass(freeAudioInterpret)(a)(v.value0), makeLowpass(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeLowshelf: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeLowshelf(freeAudioInterpret)(a)(v.value0), makeLowshelf(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeMediaElement: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeMediaElement(freeAudioInterpret)(a)(v.value0), makeMediaElement(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeMicrophone: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeMicrophone(freeAudioInterpret)(a)(v.value0), makeMicrophone(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeNotch: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeNotch(freeAudioInterpret)(a)(v.value0), makeNotch(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makePeaking: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makePeaking(freeAudioInterpret)(a)(v.value0), makePeaking(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makePeriodicOsc: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makePeriodicOsc(freeAudioInterpret)(a)(v.value0), makePeriodicOsc(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makePeriodicOscV: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makePeriodicOscV(freeAudioInterpret)(a)(v.value0), makePeriodicOscV(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makePeriodicOscWithDeferredOsc: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makePeriodicOscWithDeferredOsc(freeAudioInterpret)(a)(v.value0), makePeriodicOscWithDeferredOsc(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makePlayBufWithDeferredBuffer: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makePlayBufWithDeferredBuffer(freeAudioInterpret)(a)(v.value0), makePlayBufWithDeferredBuffer(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makePlayBuf: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makePlayBuf(freeAudioInterpret)(a)(v.value0), makePlayBuf(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeRecorder: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeRecorder(freeAudioInterpret)(a)(v.value0), makeRecorder(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeSawtoothOsc: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeSawtoothOsc(freeAudioInterpret)(a)(v.value0), makeSawtoothOsc(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeSinOsc: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeSinOsc(freeAudioInterpret)(a)(v.value0), makeSinOsc(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeSpeaker: function (v) {
          return new Data_Tuple.Tuple(makeSpeaker(freeAudioInterpret)(v.value0), makeSpeaker(effectfulAudioInterpret)(v.value1));
      },
      makeSquareOsc: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeSquareOsc(freeAudioInterpret)(a)(v.value0), makeSquareOsc(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeStereoPanner: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeStereoPanner(freeAudioInterpret)(a)(v.value0), makeStereoPanner(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeTriangleOsc: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeTriangleOsc(freeAudioInterpret)(a)(v.value0), makeTriangleOsc(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeWaveShaper: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeWaveShaper(freeAudioInterpret)(a)(v.value0), makeWaveShaper(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      makeTumult: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(makeTumult(freeAudioInterpret)(a)(v.value0), makeTumult(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setAudioWorkletParameter: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setAudioWorkletParameter(freeAudioInterpret)(a)(v.value0), setAudioWorkletParameter(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setAnalyserNodeCb: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setAnalyserNodeCb(freeAudioInterpret)(a)(v.value0), setAnalyserNodeCb(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setMediaRecorderCb: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setMediaRecorderCb(freeAudioInterpret)(a)(v.value0), setMediaRecorderCb(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setBuffer: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setBuffer(freeAudioInterpret)(a)(v.value0), setBuffer(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setConvolverBuffer: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setConvolverBuffer(freeAudioInterpret)(a)(v.value0), setConvolverBuffer(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setPeriodicOsc: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setPeriodicOsc(freeAudioInterpret)(a)(v.value0), setPeriodicOsc(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setPeriodicOscV: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setPeriodicOscV(freeAudioInterpret)(a)(v.value0), setPeriodicOscV(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setOnOff: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setOnOff(freeAudioInterpret)(a)(v.value0), setOnOff(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setBufferOffset: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setBufferOffset(freeAudioInterpret)(a)(v.value0), setBufferOffset(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setLoopStart: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setLoopStart(freeAudioInterpret)(a)(v.value0), setLoopStart(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setLoopEnd: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setLoopEnd(freeAudioInterpret)(a)(v.value0), setLoopEnd(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setRatio: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setRatio(freeAudioInterpret)(a)(v.value0), setRatio(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setOffset: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setOffset(freeAudioInterpret)(a)(v.value0), setOffset(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setAttack: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setAttack(freeAudioInterpret)(a)(v.value0), setAttack(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setGain: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setGain(freeAudioInterpret)(a)(v.value0), setGain(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setQ: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setQ(freeAudioInterpret)(a)(v.value0), setQ(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setPan: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setPan(freeAudioInterpret)(a)(v.value0), setPan(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setThreshold: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setThreshold(freeAudioInterpret)(a)(v.value0), setThreshold(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setRelease: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setRelease(freeAudioInterpret)(a)(v.value0), setRelease(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setKnee: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setKnee(freeAudioInterpret)(a)(v.value0), setKnee(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setDelay: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setDelay(freeAudioInterpret)(a)(v.value0), setDelay(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setPlaybackRate: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setPlaybackRate(freeAudioInterpret)(a)(v.value0), setPlaybackRate(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setFrequency: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setFrequency(freeAudioInterpret)(a)(v.value0), setFrequency(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setWaveShaperCurve: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setWaveShaperCurve(freeAudioInterpret)(a)(v.value0), setWaveShaperCurve(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setInput: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setInput(freeAudioInterpret)(a)(v.value0), setInput(effectfulAudioInterpret)(a)(v.value1));
          };
      },
      setSubgraph: function (v) {
          return function (v1) {
              return new Data_Tuple.Tuple(setSubgraph(freeAudioInterpret)({
                  id: v.id,
                  envs: v.envs
              })(v1.value0), setSubgraph(effectfulAudioInterpret)({
                  id: v.id,
                  envs: v.envs
              })(v1.value1));
          };
      },
      setTumult: function (a) {
          return function (v) {
              return new Data_Tuple.Tuple(setTumult(freeAudioInterpret)(a)(v.value0), setTumult(effectfulAudioInterpret)(a)(v.value1));
          };
      }
  };
  exports["audioWorkletAddModule"] = audioWorkletAddModule;
  exports["connectXToY"] = connectXToY;
  exports["decodeAudioDataFromUri"] = decodeAudioDataFromUri;
  exports["destroyUnit"] = destroyUnit;
  exports["disconnectXFromY"] = disconnectXFromY;
  exports["getMicrophoneAndCamera"] = getMicrophoneAndCamera;
  exports["makeAllpass"] = makeAllpass;
  exports["makeAnalyser"] = makeAnalyser;
  exports["makeAudioWorkletNode"] = makeAudioWorkletNode;
  exports["makeBandpass"] = makeBandpass;
  exports["makeConstant"] = makeConstant;
  exports["makePassthroughConvolver"] = makePassthroughConvolver;
  exports["makeDelay"] = makeDelay;
  exports["makeDynamicsCompressor"] = makeDynamicsCompressor;
  exports["makeGain"] = makeGain;
  exports["makeHighpass"] = makeHighpass;
  exports["makeHighshelf"] = makeHighshelf;
  exports["makeLoopBuf"] = makeLoopBuf;
  exports["makeLowpass"] = makeLowpass;
  exports["makeLowshelf"] = makeLowshelf;
  exports["makeMicrophone"] = makeMicrophone;
  exports["makeNotch"] = makeNotch;
  exports["makePeaking"] = makePeaking;
  exports["makePeriodicOsc"] = makePeriodicOsc;
  exports["makePeriodicWave"] = makePeriodicWave;
  exports["makePlayBuf"] = makePlayBuf;
  exports["makePlayBufWithDeferredBuffer"] = makePlayBufWithDeferredBuffer;
  exports["makeRecorder"] = makeRecorder;
  exports["makeSawtoothOsc"] = makeSawtoothOsc;
  exports["makeSinOsc"] = makeSinOsc;
  exports["makeSpeaker"] = makeSpeaker;
  exports["makeSquareOsc"] = makeSquareOsc;
  exports["makeStereoPanner"] = makeStereoPanner;
  exports["makeTriangleOsc"] = makeTriangleOsc;
  exports["makeWaveShaper"] = makeWaveShaper;
  exports["mediaRecorderToUrl"] = mediaRecorderToUrl;
  exports["makeInput"] = makeInput;
  exports["makeTumult"] = makeTumult;
  exports["setAnalyserNodeCb"] = setAnalyserNodeCb;
  exports["setAudioWorkletParameter"] = setAudioWorkletParameter;
  exports["setBuffer"] = setBuffer;
  exports["setConvolverBuffer"] = setConvolverBuffer;
  exports["setPeriodicOsc"] = setPeriodicOsc;
  exports["setPeriodicOscV"] = setPeriodicOscV;
  exports["setAttack"] = setAttack;
  exports["setDelay"] = setDelay;
  exports["setFrequency"] = setFrequency;
  exports["setGain"] = setGain;
  exports["setKnee"] = setKnee;
  exports["setBufferOffset"] = setBufferOffset;
  exports["setLoopEnd"] = setLoopEnd;
  exports["setLoopStart"] = setLoopStart;
  exports["setOffset"] = setOffset;
  exports["setOnOff"] = setOnOff;
  exports["setPan"] = setPan;
  exports["setPlaybackRate"] = setPlaybackRate;
  exports["setQ"] = setQ;
  exports["setRatio"] = setRatio;
  exports["setRelease"] = setRelease;
  exports["setThreshold"] = setThreshold;
  exports["makeSubgraph"] = makeSubgraph;
  exports["setSubgraph"] = setSubgraph;
  exports["setTumult"] = setTumult;
  exports["freeAudioInterpret"] = freeAudioInterpret;
  exports["mixedAudioInterpret"] = mixedAudioInterpret;
  exports["makeFFIAudioSnapshot"] = $foreign.makeFFIAudioSnapshot;
  exports["contextFromSnapshot"] = $foreign.contextFromSnapshot;
  exports["advanceWriteHead"] = $foreign.advanceWriteHead;
  exports["close"] = $foreign.close;
  exports["context"] = $foreign.context;
  exports["contextState"] = $foreign.contextState;
  exports["contextResume"] = $foreign.contextResume;
  exports["getAudioClockTime"] = $foreign.getAudioClockTime;
  exports["getByteFrequencyData"] = $foreign.getByteFrequencyData;
  exports["makeFloatArray"] = $foreign.makeFloatArray;
  exports["renderAudio"] = $foreign.renderAudio;
  exports["bufferDuration"] = $foreign.bufferDuration;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Tumult"] = $PS["WAGS.Tumult"] || {};
  var exports = $PS["WAGS.Tumult"];                        
  var Tumultuous = function (x) {
      return x;
  };
  var unsafeTumult = Tumultuous;
  var safeUntumult = function (v) {
      return v;
  };
  exports["unsafeTumult"] = unsafeTumult;
  exports["safeUntumult"] = safeUntumult;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Change"] = $PS["WAGS.Change"] || {};
  var exports = $PS["WAGS.Change"];
  var Control_Comonad = $PS["Control.Comonad"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Homogeneous_Row_Options = $PS["Data.Homogeneous.Row.Options"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Row_Options = $PS["Data.Row.Options"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Vec = $PS["Data.Vec"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Record = $PS["Record"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Tumult = $PS["WAGS.Tumult"];
  var oneShotChangeStereoPanner = {
      oneShotChange: Data_Function["const"]((function () {
          var $825 = Data_Row_Options.options();
          return function ($826) {
              return WAGS_Graph_AudioUnit.XStereoPanner($825((function (v) {
                  return {
                      pan: v
                  };
              })($826)));
          };
      })()),
      Monoid0: function () {
          return WAGS_Graph_AudioUnit.monoidTStereoPanner;
      }
  };
  var oneShotChangeSquareOscOffset = {
      oneShotChange: Data_Function["const"]((function () {
          var $829 = Data_Row_Options.options();
          return function ($830) {
              return WAGS_Graph_AudioUnit.XSquareOsc($829((function (v) {
                  return {
                      freq: v
                  };
              })($830)));
          };
      })()),
      Monoid0: function () {
          return WAGS_Graph_AudioUnit.monoidTSquareOsc;
      }
  };
  var oneShotChangeSinOscOffset = {
      oneShotChange: Data_Function["const"]((function () {
          var $833 = Data_Row_Options.options();
          return function ($834) {
              return WAGS_Graph_AudioUnit.XSinOsc($833((function (v) {
                  return {
                      freq: v
                  };
              })($834)));
          };
      })()),
      Monoid0: function () {
          return WAGS_Graph_AudioUnit.monoidTSinOsc;
      }
  };
  var oneShotChangeSawtoothOscOffset = {
      oneShotChange: Data_Function["const"]((function () {
          var $837 = Data_Row_Options.options();
          return function ($838) {
              return WAGS_Graph_AudioUnit.XSawtoothOsc($837((function (v) {
                  return {
                      freq: v
                  };
              })($838)));
          };
      })()),
      Monoid0: function () {
          return WAGS_Graph_AudioUnit.monoidTSawtoothOsc;
      }
  };
  var oneShotChangePlayBufBuffer = {
      oneShotChange: Data_Function["const"]((function () {
          var $843 = Data_Row_Options.options();
          return function ($844) {
              return WAGS_Graph_AudioUnit.XPlayBuf($843((function (v) {
                  return {
                      buffer: v
                  };
              })($844)));
          };
      })()),
      Monoid0: function () {
          return WAGS_Graph_AudioUnit.monoidTPlayBuf;
      }
  };
  var oneShotChangePeaking = {
      oneShotChange: Data_Function["const"]((function () {
          var $855 = Data_Row_Options.options();
          return function ($856) {
              return WAGS_Graph_AudioUnit.XPeaking($855((function (v) {
                  return {
                      freq: v
                  };
              })($856)));
          };
      })()),
      Monoid0: function () {
          return WAGS_Graph_AudioUnit.monoidTPeaking;
      }
  };
  var oneShotChangeNotch = {
      oneShotChange: Data_Function["const"]((function () {
          var $857 = Data_Row_Options.options();
          return function ($858) {
              return WAGS_Graph_AudioUnit.XNotch($857((function (v) {
                  return {
                      freq: v
                  };
              })($858)));
          };
      })()),
      Monoid0: function () {
          return WAGS_Graph_AudioUnit.monoidTNotch;
      }
  };
  var oneShotChangeLowshelf = {
      oneShotChange: Data_Function["const"]((function () {
          var $859 = Data_Row_Options.options();
          return function ($860) {
              return WAGS_Graph_AudioUnit.XLowshelf($859((function (v) {
                  return {
                      freq: v
                  };
              })($860)));
          };
      })()),
      Monoid0: function () {
          return WAGS_Graph_AudioUnit.monoidTLowshelf;
      }
  };
  var oneShotChangeLowpass = {
      oneShotChange: Data_Function["const"]((function () {
          var $861 = Data_Row_Options.options();
          return function ($862) {
              return WAGS_Graph_AudioUnit.XLowpass($861((function (v) {
                  return {
                      freq: v
                  };
              })($862)));
          };
      })()),
      Monoid0: function () {
          return WAGS_Graph_AudioUnit.monoidTLowpass;
      }
  };
  var oneShotChangeHighshelf = {
      oneShotChange: Data_Function["const"]((function () {
          var $869 = Data_Row_Options.options();
          return function ($870) {
              return WAGS_Graph_AudioUnit.XHighshelf($869((function (v) {
                  return {
                      freq: v
                  };
              })($870)));
          };
      })()),
      Monoid0: function () {
          return WAGS_Graph_AudioUnit.monoidTHighshelf;
      }
  };
  var oneShotChangeHighpass = {
      oneShotChange: Data_Function["const"]((function () {
          var $871 = Data_Row_Options.options();
          return function ($872) {
              return WAGS_Graph_AudioUnit.XHighpass($871((function (v) {
                  return {
                      freq: v
                  };
              })($872)));
          };
      })()),
      Monoid0: function () {
          return WAGS_Graph_AudioUnit.monoidTHighpass;
      }
  };
  var oneShotChangeGain = {
      oneShotChange: Data_Function["const"]((function () {
          var $873 = Data_Row_Options.options();
          return function ($874) {
              return WAGS_Graph_AudioUnit.XGain($873((function (v) {
                  return {
                      gain: v
                  };
              })($874)));
          };
      })()),
      Monoid0: function () {
          return WAGS_Graph_AudioUnit.monoidTGain;
      }
  };
  var oneShotChangeDelay = {
      oneShotChange: Data_Function["const"]((function () {
          var $875 = Data_Row_Options.options();
          return function ($876) {
              return WAGS_Graph_AudioUnit.XDelay($875((function (v) {
                  return {
                      delayTime: v
                  };
              })($876)));
          };
      })()),
      Monoid0: function () {
          return WAGS_Graph_AudioUnit.monoidTDelay;
      }
  };
  var oneShotChangeConvolver = {
      oneShotChange: Data_Function["const"]((function () {
          var $877 = Data_Row_Options.options();
          return function ($878) {
              return WAGS_Graph_AudioUnit.XConvolver($877((function (v) {
                  return {
                      buffer: v
                  };
              })($878)));
          };
      })()),
      Monoid0: function () {
          return WAGS_Graph_AudioUnit.monoidTConvolver;
      }
  };
  var oneShotChangeConstantOffset = {
      oneShotChange: Data_Function["const"]((function () {
          var $881 = Data_Row_Options.options();
          return function ($882) {
              return WAGS_Graph_AudioUnit.XConstant($881((function (v) {
                  return {
                      offset: v
                  };
              })($882)));
          };
      })()),
      Monoid0: function () {
          return WAGS_Graph_AudioUnit.monoidTConstant;
      }
  };
  var oneShotChangeAllpass = {
      oneShotChange: Data_Function["const"]((function () {
          var $885 = Data_Row_Options.options();
          return function ($886) {
              return WAGS_Graph_AudioUnit.XAllpass($885((function (v) {
                  return {
                      freq: v
                  };
              })($886)));
          };
      })()),
      Monoid0: function () {
          return WAGS_Graph_AudioUnit.monoidTAllpass;
      }
  };
  var oneShotChange = function (dict) {
      return dict.oneShotChange;
  };                                  
  var interpretParametersNil = {
      interpretParameters: function (dictAudioInterpret) {
          return function (v) {
              return function (v1) {
                  return function (v2) {
                      return function (v3) {
                          return [  ];
                      };
                  };
              };
          };
      }
  };
  var interpretParameters = function (dict) {
      return dict.interpretParameters;
  };
  var interpretParametersCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictCons1) {
              return function (dictInterpretParameters) {
                  return {
                      interpretParameters: function (dictAudioInterpret) {
                          return function (id) {
                              return function (pd) {
                                  return function (v) {
                                      return function (p) {
                                          return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ WAGS_Interpret.setAudioWorkletParameter(dictAudioInterpret)({
                                              id: id,
                                              paramName: Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value),
                                              paramValue: Record.get(dictIsSymbol)()(Type_Proxy["Proxy"].value)(p)
                                          }) ])(interpretParameters(dictInterpretParameters)(dictAudioInterpret)(id)(pd)(Type_Proxy["Proxy"].value)(p));
                                      };
                                  };
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var changeXStereoPanner = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      return function (w) {
                          var v = WAGS_Control_Types.unsafeUnWAG(w);
                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                          var changes = Foreign_Object.values(Data_Homogeneous_Row_Options.objFromHomogeneous()(Data_Homogeneous_Row_Options.homogeneous()(Data_Row_Options.megamap()()(v.value)({
                              pan: (function () {
                                  var $891 = WAGS_Interpret.setPan(dictAudioInterpret);
                                  return function ($892) {
                                      return $891((function (v1) {
                                          return {
                                              id: id,
                                              pan: v1
                                          };
                                      })($892));
                                  };
                              })()
                          }))));
                          var o = WAGS_Control_Types.unsafeWAG({
                              context: {
                                  res: v.context.res,
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)(changes)
                              },
                              value: Data_Unit.unit
                          });
                          return o;
                      };
                  };
              }
          };
      };
  };
  var changeXSquareOsc = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      return function (w) {
                          var v = WAGS_Control_Types.unsafeUnWAG(w);
                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                          var changes = Foreign_Object.values(Data_Homogeneous_Row_Options.objFromHomogeneous()(Data_Homogeneous_Row_Options.homogeneous()(Data_Row_Options.megamap()()(v.value)({
                              freq: (function () {
                                  var $893 = WAGS_Interpret.setFrequency(dictAudioInterpret);
                                  return function ($894) {
                                      return $893((function (v1) {
                                          return {
                                              id: id,
                                              frequency: v1
                                          };
                                      })($894));
                                  };
                              })(),
                              onOff: (function () {
                                  var $895 = WAGS_Interpret.setOnOff(dictAudioInterpret);
                                  return function ($896) {
                                      return $895((function (v1) {
                                          return {
                                              id: id,
                                              onOff: v1
                                          };
                                      })($896));
                                  };
                              })()
                          }))));
                          var o = WAGS_Control_Types.unsafeWAG({
                              context: {
                                  res: v.context.res,
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)(changes)
                              },
                              value: Data_Unit.unit
                          });
                          return o;
                      };
                  };
              }
          };
      };
  };
  var changeXSinOsc = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      return function (w) {
                          var v = WAGS_Control_Types.unsafeUnWAG(w);
                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                          var changes = Foreign_Object.values(Data_Homogeneous_Row_Options.objFromHomogeneous()(Data_Homogeneous_Row_Options.homogeneous()(Data_Row_Options.megamap()()(v.value)({
                              freq: (function () {
                                  var $897 = WAGS_Interpret.setFrequency(dictAudioInterpret);
                                  return function ($898) {
                                      return $897((function (v1) {
                                          return {
                                              id: id,
                                              frequency: v1
                                          };
                                      })($898));
                                  };
                              })(),
                              onOff: (function () {
                                  var $899 = WAGS_Interpret.setOnOff(dictAudioInterpret);
                                  return function ($900) {
                                      return $899((function (v1) {
                                          return {
                                              id: id,
                                              onOff: v1
                                          };
                                      })($900));
                                  };
                              })()
                          }))));
                          var o = WAGS_Control_Types.unsafeWAG({
                              context: {
                                  res: v.context.res,
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)(changes)
                              },
                              value: Data_Unit.unit
                          });
                          return o;
                      };
                  };
              }
          };
      };
  };
  var changeXSawtoothOsc = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      return function (w) {
                          var v = WAGS_Control_Types.unsafeUnWAG(w);
                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                          var changes = Foreign_Object.values(Data_Homogeneous_Row_Options.objFromHomogeneous()(Data_Homogeneous_Row_Options.homogeneous()(Data_Row_Options.megamap()()(v.value)({
                              freq: (function () {
                                  var $901 = WAGS_Interpret.setFrequency(dictAudioInterpret);
                                  return function ($902) {
                                      return $901((function (v1) {
                                          return {
                                              id: id,
                                              frequency: v1
                                          };
                                      })($902));
                                  };
                              })(),
                              onOff: (function () {
                                  var $903 = WAGS_Interpret.setOnOff(dictAudioInterpret);
                                  return function ($904) {
                                      return $903((function (v1) {
                                          return {
                                              id: id,
                                              onOff: v1
                                          };
                                      })($904));
                                  };
                              })()
                          }))));
                          var o = WAGS_Control_Types.unsafeWAG({
                              context: {
                                  res: v.context.res,
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)(changes)
                              },
                              value: Data_Unit.unit
                          });
                          return o;
                      };
                  };
              }
          };
      };
  };
  var changeXPlayBuf = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      return function (w) {
                          var v = WAGS_Control_Types.unsafeUnWAG(w);
                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                          var changes = Foreign_Object.values(Data_Homogeneous_Row_Options.objFromHomogeneous()(Data_Homogeneous_Row_Options.homogeneous()(Data_Row_Options.megamap()()(v.value)({
                              buffer: (function () {
                                  var $907 = WAGS_Interpret.setBuffer(dictAudioInterpret);
                                  return function ($908) {
                                      return $907((function (v1) {
                                          return {
                                              id: id,
                                              buffer: v1
                                          };
                                      })($908));
                                  };
                              })(),
                              onOff: (function () {
                                  var $909 = WAGS_Interpret.setOnOff(dictAudioInterpret);
                                  return function ($910) {
                                      return $909((function (v1) {
                                          return {
                                              id: id,
                                              onOff: v1
                                          };
                                      })($910));
                                  };
                              })(),
                              playbackRate: (function () {
                                  var $911 = WAGS_Interpret.setPlaybackRate(dictAudioInterpret);
                                  return function ($912) {
                                      return $911((function (v1) {
                                          return {
                                              id: id,
                                              playbackRate: v1
                                          };
                                      })($912));
                                  };
                              })(),
                              bufferOffset: (function () {
                                  var $913 = WAGS_Interpret.setBufferOffset(dictAudioInterpret);
                                  return function ($914) {
                                      return $913((function (v1) {
                                          return {
                                              id: id,
                                              bufferOffset: v1
                                          };
                                      })($914));
                                  };
                              })()
                          }))));
                          var o = WAGS_Control_Types.unsafeWAG({
                              context: {
                                  res: v.context.res,
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)(changes)
                              },
                              value: Data_Unit.unit
                          });
                          return o;
                      };
                  };
              }
          };
      };
  };
  var changeXPeaking = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      return function (w) {
                          var v = WAGS_Control_Types.unsafeUnWAG(w);
                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                          var changes = Foreign_Object.values(Data_Homogeneous_Row_Options.objFromHomogeneous()(Data_Homogeneous_Row_Options.homogeneous()(Data_Row_Options.megamap()()(v.value)({
                              freq: (function () {
                                  var $915 = WAGS_Interpret.setFrequency(dictAudioInterpret);
                                  return function ($916) {
                                      return $915((function (v1) {
                                          return {
                                              id: id,
                                              frequency: v1
                                          };
                                      })($916));
                                  };
                              })(),
                              q: (function () {
                                  var $917 = WAGS_Interpret.setQ(dictAudioInterpret);
                                  return function ($918) {
                                      return $917((function (v1) {
                                          return {
                                              id: id,
                                              q: v1
                                          };
                                      })($918));
                                  };
                              })(),
                              gain: (function () {
                                  var $919 = WAGS_Interpret.setGain(dictAudioInterpret);
                                  return function ($920) {
                                      return $919((function (v1) {
                                          return {
                                              id: id,
                                              gain: v1
                                          };
                                      })($920));
                                  };
                              })()
                          }))));
                          var o = WAGS_Control_Types.unsafeWAG({
                              context: {
                                  res: v.context.res,
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)(changes)
                              },
                              value: Data_Unit.unit
                          });
                          return o;
                      };
                  };
              }
          };
      };
  };
  var changeXNotch = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      return function (w) {
                          var v = WAGS_Control_Types.unsafeUnWAG(w);
                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                          var changes = Foreign_Object.values(Data_Homogeneous_Row_Options.objFromHomogeneous()(Data_Homogeneous_Row_Options.homogeneous()(Data_Row_Options.megamap()()(v.value)({
                              freq: (function () {
                                  var $921 = WAGS_Interpret.setFrequency(dictAudioInterpret);
                                  return function ($922) {
                                      return $921((function (v1) {
                                          return {
                                              id: id,
                                              frequency: v1
                                          };
                                      })($922));
                                  };
                              })(),
                              q: (function () {
                                  var $923 = WAGS_Interpret.setQ(dictAudioInterpret);
                                  return function ($924) {
                                      return $923((function (v1) {
                                          return {
                                              id: id,
                                              q: v1
                                          };
                                      })($924));
                                  };
                              })()
                          }))));
                          var o = WAGS_Control_Types.unsafeWAG({
                              context: {
                                  res: v.context.res,
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)(changes)
                              },
                              value: Data_Unit.unit
                          });
                          return o;
                      };
                  };
              }
          };
      };
  };
  var changeXLowshelf = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      return function (w) {
                          var v = WAGS_Control_Types.unsafeUnWAG(w);
                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                          var changes = Foreign_Object.values(Data_Homogeneous_Row_Options.objFromHomogeneous()(Data_Homogeneous_Row_Options.homogeneous()(Data_Row_Options.megamap()()(v.value)({
                              freq: (function () {
                                  var $925 = WAGS_Interpret.setFrequency(dictAudioInterpret);
                                  return function ($926) {
                                      return $925((function (v1) {
                                          return {
                                              id: id,
                                              frequency: v1
                                          };
                                      })($926));
                                  };
                              })(),
                              gain: (function () {
                                  var $927 = WAGS_Interpret.setGain(dictAudioInterpret);
                                  return function ($928) {
                                      return $927((function (v1) {
                                          return {
                                              id: id,
                                              gain: v1
                                          };
                                      })($928));
                                  };
                              })()
                          }))));
                          var o = WAGS_Control_Types.unsafeWAG({
                              context: {
                                  res: v.context.res,
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)(changes)
                              },
                              value: Data_Unit.unit
                          });
                          return o;
                      };
                  };
              }
          };
      };
  };
  var changeXLowpass = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      return function (w) {
                          var v = WAGS_Control_Types.unsafeUnWAG(w);
                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                          var changes = Foreign_Object.values(Data_Homogeneous_Row_Options.objFromHomogeneous()(Data_Homogeneous_Row_Options.homogeneous()(Data_Row_Options.megamap()()(v.value)({
                              freq: (function () {
                                  var $929 = WAGS_Interpret.setFrequency(dictAudioInterpret);
                                  return function ($930) {
                                      return $929((function (v1) {
                                          return {
                                              id: id,
                                              frequency: v1
                                          };
                                      })($930));
                                  };
                              })(),
                              q: (function () {
                                  var $931 = WAGS_Interpret.setQ(dictAudioInterpret);
                                  return function ($932) {
                                      return $931((function (v1) {
                                          return {
                                              id: id,
                                              q: v1
                                          };
                                      })($932));
                                  };
                              })()
                          }))));
                          var o = WAGS_Control_Types.unsafeWAG({
                              context: {
                                  res: v.context.res,
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)(changes)
                              },
                              value: Data_Unit.unit
                          });
                          return o;
                      };
                  };
              }
          };
      };
  };
  var changeXLoopBuf = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      return function (w) {
                          var v = WAGS_Control_Types.unsafeUnWAG(w);
                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                          var changes = Foreign_Object.values(Data_Homogeneous_Row_Options.objFromHomogeneous()(Data_Homogeneous_Row_Options.homogeneous()(Data_Row_Options.megamap()()(v.value)({
                              buffer: (function () {
                                  var $933 = WAGS_Interpret.setBuffer(dictAudioInterpret);
                                  return function ($934) {
                                      return $933((function (v1) {
                                          return {
                                              id: id,
                                              buffer: v1
                                          };
                                      })($934));
                                  };
                              })(),
                              onOff: (function () {
                                  var $935 = WAGS_Interpret.setOnOff(dictAudioInterpret);
                                  return function ($936) {
                                      return $935((function (v1) {
                                          return {
                                              id: id,
                                              onOff: v1
                                          };
                                      })($936));
                                  };
                              })(),
                              playbackRate: (function () {
                                  var $937 = WAGS_Interpret.setPlaybackRate(dictAudioInterpret);
                                  return function ($938) {
                                      return $937((function (v1) {
                                          return {
                                              id: id,
                                              playbackRate: v1
                                          };
                                      })($938));
                                  };
                              })(),
                              loopStart: (function () {
                                  var $939 = WAGS_Interpret.setLoopStart(dictAudioInterpret);
                                  return function ($940) {
                                      return $939((function (v1) {
                                          return {
                                              id: id,
                                              loopStart: v1
                                          };
                                      })($940));
                                  };
                              })(),
                              loopEnd: (function () {
                                  var $941 = WAGS_Interpret.setLoopEnd(dictAudioInterpret);
                                  return function ($942) {
                                      return $941((function (v1) {
                                          return {
                                              id: id,
                                              loopEnd: v1
                                          };
                                      })($942));
                                  };
                              })()
                          }))));
                          var o = WAGS_Control_Types.unsafeWAG({
                              context: {
                                  res: v.context.res,
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)(changes)
                              },
                              value: Data_Unit.unit
                          });
                          return o;
                      };
                  };
              }
          };
      };
  };
  var changeXHighshelf = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      return function (w) {
                          var v = WAGS_Control_Types.unsafeUnWAG(w);
                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                          var changes = Foreign_Object.values(Data_Homogeneous_Row_Options.objFromHomogeneous()(Data_Homogeneous_Row_Options.homogeneous()(Data_Row_Options.megamap()()(v.value)({
                              freq: (function () {
                                  var $943 = WAGS_Interpret.setFrequency(dictAudioInterpret);
                                  return function ($944) {
                                      return $943((function (v1) {
                                          return {
                                              id: id,
                                              frequency: v1
                                          };
                                      })($944));
                                  };
                              })(),
                              gain: (function () {
                                  var $945 = WAGS_Interpret.setGain(dictAudioInterpret);
                                  return function ($946) {
                                      return $945((function (v1) {
                                          return {
                                              id: id,
                                              gain: v1
                                          };
                                      })($946));
                                  };
                              })()
                          }))));
                          var o = WAGS_Control_Types.unsafeWAG({
                              context: {
                                  res: v.context.res,
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)(changes)
                              },
                              value: Data_Unit.unit
                          });
                          return o;
                      };
                  };
              }
          };
      };
  };
  var changeXHighpass = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      return function (w) {
                          var v = WAGS_Control_Types.unsafeUnWAG(w);
                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                          var changes = Foreign_Object.values(Data_Homogeneous_Row_Options.objFromHomogeneous()(Data_Homogeneous_Row_Options.homogeneous()(Data_Row_Options.megamap()()(v.value)({
                              freq: (function () {
                                  var $947 = WAGS_Interpret.setFrequency(dictAudioInterpret);
                                  return function ($948) {
                                      return $947((function (v1) {
                                          return {
                                              id: id,
                                              frequency: v1
                                          };
                                      })($948));
                                  };
                              })(),
                              q: (function () {
                                  var $949 = WAGS_Interpret.setQ(dictAudioInterpret);
                                  return function ($950) {
                                      return $949((function (v1) {
                                          return {
                                              id: id,
                                              q: v1
                                          };
                                      })($950));
                                  };
                              })()
                          }))));
                          var o = WAGS_Control_Types.unsafeWAG({
                              context: {
                                  res: v.context.res,
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)(changes)
                              },
                              value: Data_Unit.unit
                          });
                          return o;
                      };
                  };
              }
          };
      };
  };
  var changeXGain = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      return function (w) {
                          var v = WAGS_Control_Types.unsafeUnWAG(w);
                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                          var changes = Foreign_Object.values(Data_Homogeneous_Row_Options.objFromHomogeneous()(Data_Homogeneous_Row_Options.homogeneous()(Data_Row_Options.megamap()()(v.value)({
                              gain: (function () {
                                  var $951 = WAGS_Interpret.setGain(dictAudioInterpret);
                                  return function ($952) {
                                      return $951((function (v1) {
                                          return {
                                              id: id,
                                              gain: v1
                                          };
                                      })($952));
                                  };
                              })()
                          }))));
                          var o = WAGS_Control_Types.unsafeWAG({
                              context: {
                                  res: v.context.res,
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)(changes)
                              },
                              value: Data_Unit.unit
                          });
                          return o;
                      };
                  };
              }
          };
      };
  };
  var changeXDelay = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      return function (w) {
                          var v = WAGS_Control_Types.unsafeUnWAG(w);
                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                          var changes = Foreign_Object.values(Data_Homogeneous_Row_Options.objFromHomogeneous()(Data_Homogeneous_Row_Options.homogeneous()(Data_Row_Options.megamap()()(v.value)({
                              delayTime: (function () {
                                  var $963 = WAGS_Interpret.setDelay(dictAudioInterpret);
                                  return function ($964) {
                                      return $963((function (v1) {
                                          return {
                                              id: id,
                                              delay: v1
                                          };
                                      })($964));
                                  };
                              })()
                          }))));
                          var o = WAGS_Control_Types.unsafeWAG({
                              context: {
                                  res: v.context.res,
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)(changes)
                              },
                              value: Data_Unit.unit
                          });
                          return o;
                      };
                  };
              }
          };
      };
  };
  var changeXConvolver = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      return function (w) {
                          var v = WAGS_Control_Types.unsafeUnWAG(w);
                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                          var changes = Foreign_Object.values(Data_Homogeneous_Row_Options.objFromHomogeneous()(Data_Homogeneous_Row_Options.homogeneous()(Data_Row_Options.megamap()()(v.value)({
                              buffer: (function () {
                                  var $965 = WAGS_Interpret.setConvolverBuffer(dictAudioInterpret);
                                  return function ($966) {
                                      return $965((function (v1) {
                                          return {
                                              id: id,
                                              buffer: v1
                                          };
                                      })($966));
                                  };
                              })()
                          }))));
                          var o = WAGS_Control_Types.unsafeWAG({
                              context: {
                                  res: v.context.res,
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)(changes)
                              },
                              value: Data_Unit.unit
                          });
                          return o;
                      };
                  };
              }
          };
      };
  };
  var changeXConstant = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      return function (w) {
                          var v = WAGS_Control_Types.unsafeUnWAG(w);
                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                          var changes = Foreign_Object.values(Data_Homogeneous_Row_Options.objFromHomogeneous()(Data_Homogeneous_Row_Options.homogeneous()(Data_Row_Options.megamap()()(v.value)({
                              offset: (function () {
                                  var $967 = WAGS_Interpret.setOffset(dictAudioInterpret);
                                  return function ($968) {
                                      return $967((function (v1) {
                                          return {
                                              id: id,
                                              offset: v1
                                          };
                                      })($968));
                                  };
                              })(),
                              onOff: (function () {
                                  var $969 = WAGS_Interpret.setOnOff(dictAudioInterpret);
                                  return function ($970) {
                                      return $969((function (v1) {
                                          return {
                                              id: id,
                                              onOff: v1
                                          };
                                      })($970));
                                  };
                              })()
                          }))));
                          var o = WAGS_Control_Types.unsafeWAG({
                              context: {
                                  res: v.context.res,
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)(changes)
                              },
                              value: Data_Unit.unit
                          });
                          return o;
                      };
                  };
              }
          };
      };
  };
  var changeXAllpass = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      return function (w) {
                          var v = WAGS_Control_Types.unsafeUnWAG(w);
                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                          var changes = Foreign_Object.values(Data_Homogeneous_Row_Options.objFromHomogeneous()(Data_Homogeneous_Row_Options.homogeneous()(Data_Row_Options.megamap()()(v.value)({
                              freq: (function () {
                                  var $975 = WAGS_Interpret.setFrequency(dictAudioInterpret);
                                  return function ($976) {
                                      return $975((function (v1) {
                                          return {
                                              id: id,
                                              frequency: v1
                                          };
                                      })($976));
                                  };
                              })(),
                              q: (function () {
                                  var $977 = WAGS_Interpret.setQ(dictAudioInterpret);
                                  return function ($978) {
                                      return $977((function (v1) {
                                          return {
                                              id: id,
                                              q: v1
                                          };
                                      })($978));
                                  };
                              })()
                          }))));
                          var o = WAGS_Control_Types.unsafeWAG({
                              context: {
                                  res: v.context.res,
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)(changes)
                              },
                              value: Data_Unit.unit
                          });
                          return o;
                      };
                  };
              }
          };
      };
  };
  var changeTumult = function (dictIsSymbol) {
      return function (dictIsSymbol1) {
          return function (dictPos) {
              return function (dictCons) {
                  return {
                      "change'": function (dictAudioInterpret) {
                          return function (ptr) {
                              return function (w) {
                                  var v = WAGS_Control_Types.unsafeUnWAG(w);
                                  var tms = Data_Symbol.reflectSymbol(dictIsSymbol1)(Type_Proxy["Proxy"].value);
                                  var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                                  var o = WAGS_Control_Types.unsafeWAG({
                                      context: {
                                          res: v.context.res,
                                          instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.setTumult(dictAudioInterpret)({
                                              id: id,
                                              terminus: tms,
                                              instructions: WAGS_Tumult.safeUntumult(v.value.tumult)
                                          }) ])
                                      },
                                      value: Data_Unit.unit
                                  });
                                  return o;
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var changeSubgraph0 = function (dictIsSymbol) {
      return function (dictIsSymbol1) {
          return function (dictCons) {
              return {
                  "change'": function (dictAudioInterpret) {
                      return function (ptr) {
                          return function (w) {
                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                              var o = WAGS_Control_Types.unsafeWAG({
                                  context: {
                                      res: v.context.res,
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.setSubgraph(dictAudioInterpret)({
                                          id: id,
                                          envs: v.value.envs
                                      }) ])
                                  },
                                  value: Data_Unit.unit
                              });
                              return o;
                          };
                      };
                  }
              };
          };
      };
  };
  var changeSpeaker = function (dictCons) {
      return {
          "change'": function (dictAudioInterpret) {
              return function (v) {
                  return function (w) {
                      return Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(w)(Data_Unit.unit);
                  };
              };
          }
      };
  };
  var changeRLNil = {
      changeRL: function (dictAudioInterpret) {
          return function (v) {
              return function (v1) {
                  return function (v2) {
                      return function (r) {
                          return Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(r)(Data_Unit.unit);
                      };
                  };
              };
          };
      }
  };
  var changeRL = function (dict) {
      return dict.changeRL;
  };
  var changePeriodicXOsc = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      return function (w) {
                          var v = WAGS_Control_Types.unsafeUnWAG(w);
                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                          var changes = Foreign_Object.values(Data_Homogeneous_Row_Options.objFromHomogeneous()(Data_Homogeneous_Row_Options.homogeneous()(Data_Row_Options.megamap()()(v.value)({
                              freq: (function () {
                                  var $979 = WAGS_Interpret.setFrequency(dictAudioInterpret);
                                  return function ($980) {
                                      return $979((function (v1) {
                                          return {
                                              id: id,
                                              frequency: v1
                                          };
                                      })($980));
                                  };
                              })(),
                              onOff: (function () {
                                  var $981 = WAGS_Interpret.setOnOff(dictAudioInterpret);
                                  return function ($982) {
                                      return $981((function (v1) {
                                          return {
                                              id: id,
                                              onOff: v1
                                          };
                                      })($982));
                                  };
                              })(),
                              wave: (function () {
                                  var $983 = WAGS_Interpret.setPeriodicOsc(dictAudioInterpret);
                                  return function ($984) {
                                      return $983((function (v1) {
                                          return {
                                              id: id,
                                              wave: v1
                                          };
                                      })($984));
                                  };
                              })()
                          }))));
                          var o = WAGS_Control_Types.unsafeWAG({
                              context: {
                                  res: v.context.res,
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)(changes)
                              },
                              value: Data_Unit.unit
                          });
                          return o;
                      };
                  };
              }
          };
      };
  };
  var changeInternalAll = function (dictRowToList) {
      return function (dictChangeRL) {
          return {
              changeInternal: function (dictAudioInterpret) {
                  return changeRL(dictChangeRL)(dictAudioInterpret)(Type_Proxy["Proxy"].value);
              }
          };
      };
  };
  var changeInternal = function (dict) {
      return dict.changeInternal;
  };
  var changeInput = function (dictIsSymbol) {
      return function (dictMM) {
          return function (dictCons) {
              return {
                  "change'": function (dictAudioInterpret) {
                      return function (v) {
                          return function (w) {
                              return Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(w)(Data_Unit.unit);
                          };
                      };
                  }
              };
          };
      };
  };
  var changeAudioWorkletNode = function (dictIsSymbol) {
      return function (dictRowToList) {
          return function (dictInterpretParameters) {
              return function (dictCons) {
                  return {
                      "change'": function (dictAudioInterpret) {
                          return function (ptr) {
                              return function (w) {
                                  var v = WAGS_Control_Types.unsafeUnWAG(w);
                                  var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                                  var o = WAGS_Control_Types.unsafeWAG({
                                      context: {
                                          res: v.context.res,
                                          instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)(interpretParameters(dictInterpretParameters)(dictAudioInterpret)(id)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(v.value.value1.parameterData))
                                      },
                                      value: Data_Unit.unit
                                  });
                                  return o;
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var changeAnalyser = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      return function (w) {
                          var v = WAGS_Control_Types.unsafeUnWAG(w);
                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                          var o = WAGS_Control_Types.unsafeWAG({
                              context: {
                                  res: v.context.res,
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.setAnalyserNodeCb(dictAudioInterpret)({
                                      id: id,
                                      cb: v.value.value0
                                  }) ])
                              },
                              value: Data_Unit.unit
                          });
                          return o;
                      };
                  };
              }
          };
      };
  };
  var changeAll = function (dictChangeInternal) {
      return {
          change: function (dictAudioInterpret) {
              return changeInternal(dictChangeInternal)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value);
          }
      };
  };
  var change$prime$primeNil = {
      "change''": function (dictAudioInterpret) {
          return function (v) {
              return function (v1) {
                  return Data_Functor.voidRight(WAGS_Control_Types.functorWAG)(Data_Unit.unit);
              };
          };
      }
  };
  var change$prime$prime = function (dict) {
      return dict["change''"];
  };
  var changeRec = function (dictRowToList) {
      return function (dictPushAudioOnOffToEnd) {
          return function (dictChange$prime$prime) {
              return {
                  "change'": function (dictAudioInterpret) {
                      return function (px) {
                          return function (w) {
                              return change$prime$prime(dictChange$prime$prime)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(px)(w);
                          };
                      };
                  }
              };
          };
      };
  };
  var change$prime = function (dict) {
      return dict["change'"];
  };
  var changeAllpass = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      var $993 = change$prime(changeXAllpass(dictIsSymbol)())(dictAudioInterpret)(ptr);
                      var $994 = Data_Functor.map(WAGS_Control_Types.functorWAG)(Data_Newtype.over()()(WAGS_Graph_AudioUnit.Allpass)(Data_Row_Options.asOptions));
                      return function ($995) {
                          return $993($994($995));
                      };
                  };
              }
          };
      };
  };
  var changeAudioParameter = function (dictCons) {
      return function (dictDetup) {
          return function (dictMonoid) {
              return function (dictOneShotChange) {
                  return function (dictChange$prime) {
                      return {
                          "change'": function (dictAudioInterpret) {
                              return function (px) {
                                  return function (w) {
                                      return change$prime(dictChange$prime)(dictAudioInterpret)(px)(Data_Functor.map(WAGS_Control_Types.functorWAG)(oneShotChange(dictOneShotChange)(Data_Monoid.mempty(dictMonoid)))(w));
                                  };
                              };
                          }
                      };
                  };
              };
          };
      };
  };
  var changeBrowserAudioBuffer = function (dictCons) {
      return function (dictDetup) {
          return function (dictMonoid) {
              return function (dictOneShotChange) {
                  return function (dictChange$prime) {
                      return {
                          "change'": function (dictAudioInterpret) {
                              return function (px) {
                                  return function (w) {
                                      return change$prime(dictChange$prime)(dictAudioInterpret)(px)(Data_Functor.map(WAGS_Control_Types.functorWAG)(oneShotChange(dictOneShotChange)(Data_Monoid.mempty(dictMonoid)))(w));
                                  };
                              };
                          }
                      };
                  };
              };
          };
      };
  };
  var changeCancellation = function (dictChange$prime) {
      return {
          "change'": function (dictAudioInterpret) {
              return function (px) {
                  return function (w) {
                      return change$prime(dictChange$prime)(dictAudioInterpret)(px)(Data_Functor.map(WAGS_Control_Types.functorWAG)(WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableCancellation))(w));
                  };
              };
          }
      };
  };
  var changeGain = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      var $1011 = change$prime(changeXGain(dictIsSymbol)())(dictAudioInterpret)(ptr);
                      var $1012 = Data_Functor.map(WAGS_Control_Types.functorWAG)(Data_Newtype.over()()(WAGS_Graph_AudioUnit.Gain)(Data_Row_Options.asOptions));
                      return function ($1013) {
                          return $1011($1012($1013));
                      };
                  };
              }
          };
      };
  };
  var changeLoopBuf = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      var $1020 = change$prime(changeXLoopBuf(dictIsSymbol)())(dictAudioInterpret)(ptr);
                      var $1021 = Data_Functor.map(WAGS_Control_Types.functorWAG)(Data_Newtype.over()()(WAGS_Graph_AudioUnit.LoopBuf)(Data_Row_Options.asOptions));
                      return function ($1022) {
                          return $1020($1021($1022));
                      };
                  };
              }
          };
      };
  };
  var changeNumber = function (dictChange$prime) {
      return {
          "change'": function (dictAudioInterpret) {
              return function (px) {
                  return function (w) {
                      return change$prime(dictChange$prime)(dictAudioInterpret)(px)(Data_Functor.map(WAGS_Control_Types.functorWAG)(WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber))(w));
                  };
              };
          }
      };
  };
  var changePeriodicOsc = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictChange$prime) {
              return {
                  "change'": function (dictAudioInterpret) {
                      return function (ptr) {
                          var $1035 = change$prime(dictChange$prime)(dictAudioInterpret)(ptr);
                          var $1036 = Data_Functor.map(WAGS_Control_Types.functorWAG)(Data_Newtype.over()()(WAGS_Graph_AudioUnit.PeriodicOsc)(Data_Row_Options.asOptions));
                          return function ($1037) {
                              return $1035($1036($1037));
                          };
                      };
                  }
              };
          };
      };
  };
  var changePlayBuf = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      var $1038 = change$prime(changeXPlayBuf(dictIsSymbol)())(dictAudioInterpret)(ptr);
                      var $1039 = Data_Functor.map(WAGS_Control_Types.functorWAG)(Data_Newtype.over()()(WAGS_Graph_AudioUnit.PlayBuf)(Data_Row_Options.asOptions));
                      return function ($1040) {
                          return $1038($1039($1040));
                      };
                  };
              }
          };
      };
  };
  var changeRLCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictMakePrefixIfNeeded) {
              return function (dictConstructEdges) {
                  return function (dictCoercePrefixToString) {
                      return function (dictAppend) {
                          return function (dictChange$prime) {
                              return function (dictChangeInternal) {
                                  return function (dictChangeRL) {
                                      return {
                                          changeRL: function (dictAudioInterpret) {
                                              return function (v) {
                                                  return function (v1) {
                                                      return function (v2) {
                                                          return function (r) {
                                                              var rx = Control_Comonad.extract(WAGS_Control_Types.comonadWAG)(r);
                                                              var v3 = WAGS_ConstructEdges.constructEdges(dictConstructEdges)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Record.get(dictIsSymbol)()(Type_Proxy["Proxy"].value)(rx));
                                                              var step1 = change$prime(dictChange$prime)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(r)(v3.value1.value1.value0));
                                                              var step2 = (function (dictAudioInterpret1) {
                                                                  return changeInternal(dictChangeInternal)(dictAudioInterpret1);
                                                              })(dictAudioInterpret)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(step1)(v3.value1.value1.value1));
                                                              var step3 = changeRL(dictChangeRL)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(step2)(rx));
                                                              return step3;
                                                          };
                                                      };
                                                  };
                                              };
                                          }
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var changeSinOsc = function (dictIsSymbol) {
      return function (dictCons) {
          return {
              "change'": function (dictAudioInterpret) {
                  return function (ptr) {
                      var $1047 = change$prime(changeXSinOsc(dictIsSymbol)())(dictAudioInterpret)(ptr);
                      var $1048 = Data_Functor.map(WAGS_Control_Types.functorWAG)(Data_Newtype.over()()(WAGS_Graph_AudioUnit.SinOsc)(Data_Row_Options.asOptions));
                      return function ($1049) {
                          return $1047($1048($1049));
                      };
                  };
              }
          };
      };
  };
  var change = function (dict) {
      return dict.change;
  };
  var ichange = function (dictAudioInterpret) {
      return function (dictChange) {
          return function (r) {
              var $1062 = change(dictChange)(dictAudioInterpret);
              var $1063 = Data_Functor.voidRight(WAGS_Control_Types.functorWAG)(r);
              return function ($1064) {
                  return $1062($1063($1064));
              };
          };
      };
  };
  var canBeChangedWaveformV = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictDetup) {
              return function (dictLt) {
                  return function (dictWaveformable) {
                      return {
                          canBeChanged: function (dictAudioInterpret) {
                              return function (v) {
                                  return function (val) {
                                      return function (ptr) {
                                          return function (w) {
                                              var v1 = WAGS_Control_Types.unsafeUnWAG(w);
                                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                                              var argA_Changes = [ WAGS_Interpret.setPeriodicOscV(dictAudioInterpret)({
                                                  id: id,
                                                  realImg: (function (v2) {
                                                      return {
                                                          real: Data_Vec.toArray(v2.value0),
                                                          img: Data_Vec.toArray(v2.value1)
                                                      };
                                                  })(val)
                                              }) ];
                                              var o = WAGS_Control_Types.unsafeWAG({
                                                  context: {
                                                      res: v1.context.res,
                                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.context.instructions)(argA_Changes)
                                                  },
                                                  value: Data_Unit.unit
                                              });
                                              return o;
                                          };
                                      };
                                  };
                              };
                          }
                      };
                  };
              };
          };
      };
  };
  var canBeChangedWaveform = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictDetup) {
              return function (dictWaveformable) {
                  return {
                      canBeChanged: function (dictAudioInterpret) {
                          return function (v) {
                              return function (val) {
                                  return function (ptr) {
                                      return function (w) {
                                          var v1 = WAGS_Control_Types.unsafeUnWAG(w);
                                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                                          var argA_Changes = [ WAGS_Interpret.setPeriodicOsc(dictAudioInterpret)({
                                              id: id,
                                              wave: val
                                          }) ];
                                          var o = WAGS_Control_Types.unsafeWAG({
                                              context: {
                                                  res: v1.context.res,
                                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.context.instructions)(argA_Changes)
                                              },
                                              value: Data_Unit.unit
                                          });
                                          return o;
                                      };
                                  };
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var canBeChangedThreshold = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictDetup) {
              return function (dictThresholdable) {
                  return {
                      canBeChanged: function (dictAudioInterpret) {
                          return function (v) {
                              return function (val) {
                                  return function (ptr) {
                                      return function (w) {
                                          var v1 = WAGS_Control_Types.unsafeUnWAG(w);
                                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                                          var argA_Changes = [ WAGS_Interpret.setThreshold(dictAudioInterpret)({
                                              id: id,
                                              threshold: val
                                          }) ];
                                          var o = WAGS_Control_Types.unsafeWAG({
                                              context: {
                                                  res: v1.context.res,
                                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.context.instructions)(argA_Changes)
                                              },
                                              value: Data_Unit.unit
                                          });
                                          return o;
                                      };
                                  };
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var canBeChangedRelease = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictDetup) {
              return function (dictReleaseable) {
                  return {
                      canBeChanged: function (dictAudioInterpret) {
                          return function (v) {
                              return function (val) {
                                  return function (ptr) {
                                      return function (w) {
                                          var v1 = WAGS_Control_Types.unsafeUnWAG(w);
                                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                                          var argA_Changes = [ WAGS_Interpret.setRelease(dictAudioInterpret)({
                                              id: id,
                                              release: val
                                          }) ];
                                          var o = WAGS_Control_Types.unsafeWAG({
                                              context: {
                                                  res: v1.context.res,
                                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.context.instructions)(argA_Changes)
                                              },
                                              value: Data_Unit.unit
                                          });
                                          return o;
                                      };
                                  };
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var canBeChangedRatio = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictDetup) {
              return function (dictRatioable) {
                  return {
                      canBeChanged: function (dictAudioInterpret) {
                          return function (v) {
                              return function (val) {
                                  return function (ptr) {
                                      return function (w) {
                                          var v1 = WAGS_Control_Types.unsafeUnWAG(w);
                                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                                          var argA_Changes = [ WAGS_Interpret.setRatio(dictAudioInterpret)({
                                              id: id,
                                              ratio: val
                                          }) ];
                                          var o = WAGS_Control_Types.unsafeWAG({
                                              context: {
                                                  res: v1.context.res,
                                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.context.instructions)(argA_Changes)
                                              },
                                              value: Data_Unit.unit
                                          });
                                          return o;
                                      };
                                  };
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var canBeChangedQ = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictDetup) {
              return function (dictQable) {
                  return {
                      canBeChanged: function (dictAudioInterpret) {
                          return function (v) {
                              return function (q) {
                                  return function (ptr) {
                                      return function (w) {
                                          var v1 = WAGS_Control_Types.unsafeUnWAG(w);
                                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                                          var argA_Changes = [ WAGS_Interpret.setQ(dictAudioInterpret)({
                                              id: id,
                                              q: q
                                          }) ];
                                          var o = WAGS_Control_Types.unsafeWAG({
                                              context: {
                                                  res: v1.context.res,
                                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.context.instructions)(argA_Changes)
                                              },
                                              value: Data_Unit.unit
                                          });
                                          return o;
                                      };
                                  };
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var canBeChangedPlaybackRate = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictDetup) {
              return function (dictPlaybackRateable) {
                  return {
                      canBeChanged: function (dictAudioInterpret) {
                          return function (v) {
                              return function (val) {
                                  return function (ptr) {
                                      return function (w) {
                                          var v1 = WAGS_Control_Types.unsafeUnWAG(w);
                                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                                          var argA_Changes = [ WAGS_Interpret.setPlaybackRate(dictAudioInterpret)({
                                              id: id,
                                              playbackRate: val
                                          }) ];
                                          var o = WAGS_Control_Types.unsafeWAG({
                                              context: {
                                                  res: v1.context.res,
                                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.context.instructions)(argA_Changes)
                                              },
                                              value: Data_Unit.unit
                                          });
                                          return o;
                                      };
                                  };
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var canBeChangedLoopStart = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictDetup) {
              return function (dictLoopStartable) {
                  return {
                      canBeChanged: function (dictAudioInterpret) {
                          return function (v) {
                              return function (val) {
                                  return function (ptr) {
                                      return function (w) {
                                          var v1 = WAGS_Control_Types.unsafeUnWAG(w);
                                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                                          var argA_Changes = [ WAGS_Interpret.setLoopStart(dictAudioInterpret)({
                                              id: id,
                                              loopStart: val
                                          }) ];
                                          var o = WAGS_Control_Types.unsafeWAG({
                                              context: {
                                                  res: v1.context.res,
                                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.context.instructions)(argA_Changes)
                                              },
                                              value: Data_Unit.unit
                                          });
                                          return o;
                                      };
                                  };
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var canBeChangedLoopEnd = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictDetup) {
              return function (dictLoopEndable) {
                  return {
                      canBeChanged: function (dictAudioInterpret) {
                          return function (v) {
                              return function (val) {
                                  return function (ptr) {
                                      return function (w) {
                                          var v1 = WAGS_Control_Types.unsafeUnWAG(w);
                                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                                          var argA_Changes = [ WAGS_Interpret.setLoopEnd(dictAudioInterpret)({
                                              id: id,
                                              loopEnd: val
                                          }) ];
                                          var o = WAGS_Control_Types.unsafeWAG({
                                              context: {
                                                  res: v1.context.res,
                                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.context.instructions)(argA_Changes)
                                              },
                                              value: Data_Unit.unit
                                          });
                                          return o;
                                      };
                                  };
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var canBeChangedKnee = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictDetup) {
              return function (dictKneeable) {
                  return {
                      canBeChanged: function (dictAudioInterpret) {
                          return function (v) {
                              return function (val) {
                                  return function (ptr) {
                                      return function (w) {
                                          var v1 = WAGS_Control_Types.unsafeUnWAG(w);
                                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                                          var argA_Changes = [ WAGS_Interpret.setKnee(dictAudioInterpret)({
                                              id: id,
                                              knee: val
                                          }) ];
                                          var o = WAGS_Control_Types.unsafeWAG({
                                              context: {
                                                  res: v1.context.res,
                                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.context.instructions)(argA_Changes)
                                              },
                                              value: Data_Unit.unit
                                          });
                                          return o;
                                      };
                                  };
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var canBeChangedFreq = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictDetup) {
              return function (dictFreqable) {
                  return {
                      canBeChanged: function (dictAudioInterpret) {
                          return function (v) {
                              return function (val) {
                                  return function (ptr) {
                                      return function (w) {
                                          var v1 = WAGS_Control_Types.unsafeUnWAG(w);
                                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                                          var argA_Changes = [ WAGS_Interpret.setFrequency(dictAudioInterpret)({
                                              id: id,
                                              frequency: val
                                          }) ];
                                          var o = WAGS_Control_Types.unsafeWAG({
                                              context: {
                                                  res: v1.context.res,
                                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.context.instructions)(argA_Changes)
                                              },
                                              value: Data_Unit.unit
                                          });
                                          return o;
                                      };
                                  };
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var canBeChangedBuffer = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictDetup) {
              return function (dictBufferable) {
                  return {
                      canBeChanged: function (dictAudioInterpret) {
                          return function (v) {
                              return function (val) {
                                  return function (ptr) {
                                      return function (w) {
                                          var v1 = WAGS_Control_Types.unsafeUnWAG(w);
                                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                                          var argA_Changes = [ WAGS_Interpret.setBuffer(dictAudioInterpret)({
                                              id: id,
                                              buffer: val
                                          }) ];
                                          var o = WAGS_Control_Types.unsafeWAG({
                                              context: {
                                                  res: v1.context.res,
                                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.context.instructions)(argA_Changes)
                                              },
                                              value: Data_Unit.unit
                                          });
                                          return o;
                                      };
                                  };
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var canBeChangedAudioOnOff = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictDetup) {
              return function (dictAudioOnOffable) {
                  return {
                      canBeChanged: function (dictAudioInterpret) {
                          return function (v) {
                              return function (onOff) {
                                  return function (ptr) {
                                      return function (w) {
                                          var v1 = WAGS_Control_Types.unsafeUnWAG(w);
                                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                                          var argA_Changes = [ WAGS_Interpret.setOnOff(dictAudioInterpret)({
                                              id: id,
                                              onOff: onOff
                                          }) ];
                                          var o = WAGS_Control_Types.unsafeWAG({
                                              context: {
                                                  res: v1.context.res,
                                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.context.instructions)(argA_Changes)
                                              },
                                              value: Data_Unit.unit
                                          });
                                          return o;
                                      };
                                  };
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var canBeChangedAttack = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictDetup) {
              return function (dictAttackable) {
                  return {
                      canBeChanged: function (dictAudioInterpret) {
                          return function (v) {
                              return function (val) {
                                  return function (ptr) {
                                      return function (w) {
                                          var v1 = WAGS_Control_Types.unsafeUnWAG(w);
                                          var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                                          var argA_Changes = [ WAGS_Interpret.setAttack(dictAudioInterpret)({
                                              id: id,
                                              attack: val
                                          }) ];
                                          var o = WAGS_Control_Types.unsafeWAG({
                                              context: {
                                                  res: v1.context.res,
                                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.context.instructions)(argA_Changes)
                                              },
                                              value: Data_Unit.unit
                                          });
                                          return o;
                                      };
                                  };
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var canBeChanged = function (dict) {
      return dict.canBeChanged;
  };
  var canBeChangedAttackN = function (dictCanBeChanged) {
      return {
          canBeChanged: function (dictAudioInterpret) {
              return function (sym) {
                  return function (val) {
                      return function (ptr) {
                          return function (w) {
                              return canBeChanged(dictCanBeChanged)(dictAudioInterpret)(sym)(WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(val))(ptr)(w);
                          };
                      };
                  };
              };
          }
      };
  };
  var canBeChangedFreqN = function (dictCanBeChanged) {
      return {
          canBeChanged: function (dictAudioInterpret) {
              return function (sym) {
                  return function (val) {
                      return function (ptr) {
                          return function (w) {
                              return canBeChanged(dictCanBeChanged)(dictAudioInterpret)(sym)(WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(val))(ptr)(w);
                          };
                      };
                  };
              };
          }
      };
  };
  var canBeChangedKneeN = function (dictCanBeChanged) {
      return {
          canBeChanged: function (dictAudioInterpret) {
              return function (sym) {
                  return function (val) {
                      return function (ptr) {
                          return function (w) {
                              return canBeChanged(dictCanBeChanged)(dictAudioInterpret)(sym)(WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(val))(ptr)(w);
                          };
                      };
                  };
              };
          }
      };
  };
  var canBeChangedOnOffSimple = function (dictCanBeChanged) {
      return {
          canBeChanged: function (dictAudioInterpret) {
              return function (sym) {
                  return function (val) {
                      return function (ptr) {
                          return function (w) {
                              return canBeChanged(dictCanBeChanged)(dictAudioInterpret)(sym)(WAGS_Graph_Paramable.onOffIze(WAGS_Graph_Paramable.onOffIzeOnOff)(val))(ptr)(w);
                          };
                      };
                  };
              };
          }
      };
  };
  var canBeChangedPlaybackRateN = function (dictCanBeChanged) {
      return {
          canBeChanged: function (dictAudioInterpret) {
              return function (sym) {
                  return function (val) {
                      return function (ptr) {
                          return function (w) {
                              return canBeChanged(dictCanBeChanged)(dictAudioInterpret)(sym)(WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(val))(ptr)(w);
                          };
                      };
                  };
              };
          }
      };
  };
  var canBeChangedQN = function (dictCanBeChanged) {
      return {
          canBeChanged: function (dictAudioInterpret) {
              return function (sym) {
                  return function (val) {
                      return function (ptr) {
                          return function (w) {
                              return canBeChanged(dictCanBeChanged)(dictAudioInterpret)(sym)(WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(val))(ptr)(w);
                          };
                      };
                  };
              };
          }
      };
  };
  var canBeChangedRatioN = function (dictCanBeChanged) {
      return {
          canBeChanged: function (dictAudioInterpret) {
              return function (sym) {
                  return function (val) {
                      return function (ptr) {
                          return function (w) {
                              return canBeChanged(dictCanBeChanged)(dictAudioInterpret)(sym)(WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(val))(ptr)(w);
                          };
                      };
                  };
              };
          }
      };
  };
  var canBeChangedReleaseN = function (dictCanBeChanged) {
      return {
          canBeChanged: function (dictAudioInterpret) {
              return function (sym) {
                  return function (val) {
                      return function (ptr) {
                          return function (w) {
                              return canBeChanged(dictCanBeChanged)(dictAudioInterpret)(sym)(WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(val))(ptr)(w);
                          };
                      };
                  };
              };
          }
      };
  };
  var canBeChangedThresholdN = function (dictCanBeChanged) {
      return {
          canBeChanged: function (dictAudioInterpret) {
              return function (sym) {
                  return function (val) {
                      return function (ptr) {
                          return function (w) {
                              return canBeChanged(dictCanBeChanged)(dictAudioInterpret)(sym)(WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(val))(ptr)(w);
                          };
                      };
                  };
              };
          }
      };
  };
  var change$prime$primeCons = function (dictIsSymbol) {
      return function (dictIsSymbol1) {
          return function (dictCons) {
              return function (dictCanBeChanged) {
                  return function (dictChange$prime$prime) {
                      return {
                          "change''": function (dictAudioInterpret) {
                              return function (v) {
                                  return function (a) {
                                      return function (w) {
                                          var ew = Control_Comonad.extract(WAGS_Control_Types.comonadWAG)(w);
                                          var res = canBeChanged(dictCanBeChanged)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(Record.get(dictIsSymbol)()(Type_Proxy["Proxy"].value)(ew))(Type_Proxy["Proxy"].value)(Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(w)(Data_Unit.unit));
                                          return change$prime$prime(dictChange$prime$prime)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(a)(Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(res)(ew));
                                      };
                                  };
                              };
                          }
                      };
                  };
              };
          };
      };
  };
  exports["ichange"] = ichange;
  exports["change''Nil"] = change$prime$primeNil;
  exports["change''Cons"] = change$prime$primeCons;
  exports["changeInternalAll"] = changeInternalAll;
  exports["changeAll"] = changeAll;
  exports["changeRLNil"] = changeRLNil;
  exports["changeRLCons"] = changeRLCons;
  exports["changeNumber"] = changeNumber;
  exports["changeBrowserAudioBuffer"] = changeBrowserAudioBuffer;
  exports["changeCancellation"] = changeCancellation;
  exports["changeAudioParameter"] = changeAudioParameter;
  exports["changeRec"] = changeRec;
  exports["canBeChangedFreqN"] = canBeChangedFreqN;
  exports["canBeChangedFreq"] = canBeChangedFreq;
  exports["canBeChangedOnOffSimple"] = canBeChangedOnOffSimple;
  exports["canBeChangedAudioOnOff"] = canBeChangedAudioOnOff;
  exports["canBeChangedQN"] = canBeChangedQN;
  exports["canBeChangedQ"] = canBeChangedQ;
  exports["canBeChangedLoopStart"] = canBeChangedLoopStart;
  exports["canBeChangedLoopEnd"] = canBeChangedLoopEnd;
  exports["canBeChangedPlaybackRateN"] = canBeChangedPlaybackRateN;
  exports["canBeChangedPlaybackRate"] = canBeChangedPlaybackRate;
  exports["canBeChangedBuffer"] = canBeChangedBuffer;
  exports["canBeChangedWaveform"] = canBeChangedWaveform;
  exports["canBeChangedWaveformV"] = canBeChangedWaveformV;
  exports["canBeChangedThresholdN"] = canBeChangedThresholdN;
  exports["canBeChangedThreshold"] = canBeChangedThreshold;
  exports["canBeChangedRatioN"] = canBeChangedRatioN;
  exports["canBeChangedRatio"] = canBeChangedRatio;
  exports["canBeChangedKneeN"] = canBeChangedKneeN;
  exports["canBeChangedKnee"] = canBeChangedKnee;
  exports["canBeChangedAttackN"] = canBeChangedAttackN;
  exports["canBeChangedAttack"] = canBeChangedAttack;
  exports["canBeChangedReleaseN"] = canBeChangedReleaseN;
  exports["canBeChangedRelease"] = canBeChangedRelease;
  exports["changeAnalyser"] = changeAnalyser;
  exports["oneShotChangeAllpass"] = oneShotChangeAllpass;
  exports["changeAllpass"] = changeAllpass;
  exports["changeXAllpass"] = changeXAllpass;
  exports["interpretParametersNil"] = interpretParametersNil;
  exports["interpretParametersCons"] = interpretParametersCons;
  exports["changeAudioWorkletNode"] = changeAudioWorkletNode;
  exports["oneShotChangeConstantOffset"] = oneShotChangeConstantOffset;
  exports["changeXConstant"] = changeXConstant;
  exports["oneShotChangeConvolver"] = oneShotChangeConvolver;
  exports["changeXConvolver"] = changeXConvolver;
  exports["oneShotChangeDelay"] = oneShotChangeDelay;
  exports["changeXDelay"] = changeXDelay;
  exports["oneShotChangeGain"] = oneShotChangeGain;
  exports["changeGain"] = changeGain;
  exports["changeXGain"] = changeXGain;
  exports["oneShotChangeHighpass"] = oneShotChangeHighpass;
  exports["changeXHighpass"] = changeXHighpass;
  exports["oneShotChangeHighshelf"] = oneShotChangeHighshelf;
  exports["changeXHighshelf"] = changeXHighshelf;
  exports["changeInput"] = changeInput;
  exports["changeLoopBuf"] = changeLoopBuf;
  exports["oneShotChangeLowpass"] = oneShotChangeLowpass;
  exports["changeXLowpass"] = changeXLowpass;
  exports["oneShotChangeLowshelf"] = oneShotChangeLowshelf;
  exports["changeXLowshelf"] = changeXLowshelf;
  exports["oneShotChangeNotch"] = oneShotChangeNotch;
  exports["changeXNotch"] = changeXNotch;
  exports["oneShotChangePeaking"] = oneShotChangePeaking;
  exports["changeXPeaking"] = changeXPeaking;
  exports["changePeriodicOsc"] = changePeriodicOsc;
  exports["changePeriodicXOsc"] = changePeriodicXOsc;
  exports["oneShotChangePlayBufBuffer"] = oneShotChangePlayBufBuffer;
  exports["changePlayBuf"] = changePlayBuf;
  exports["changeXPlayBuf"] = changeXPlayBuf;
  exports["oneShotChangeSawtoothOscOffset"] = oneShotChangeSawtoothOscOffset;
  exports["changeXSawtoothOsc"] = changeXSawtoothOsc;
  exports["oneShotChangeSinOscOffset"] = oneShotChangeSinOscOffset;
  exports["changeSinOsc"] = changeSinOsc;
  exports["changeXSinOsc"] = changeXSinOsc;
  exports["changeSpeaker"] = changeSpeaker;
  exports["oneShotChangeSquareOscOffset"] = oneShotChangeSquareOscOffset;
  exports["changeXSquareOsc"] = changeXSquareOsc;
  exports["oneShotChangeStereoPanner"] = oneShotChangeStereoPanner;
  exports["changeXStereoPanner"] = changeXStereoPanner;
  exports["changeSubgraph0"] = changeSubgraph0;
  exports["changeTumult"] = changeTumult;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Connect"] = $PS["WAGS.Connect"] || {};
  var exports = $PS["WAGS.Connect"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var connectInstance = function (dictIsSymbol) {
      return function (dictIsSymbol1) {
          return function (dictTypeToSym) {
              return function (dictTypeToSym1) {
                  return function (dictIsSymbol2) {
                      return function (dictIsSymbol3) {
                          return function (dictCons) {
                              return function (dictCons1) {
                                  return function (dictLacks) {
                                      return function (dictCons2) {
                                          return function (dictCons3) {
                                              return {
                                                  connect: function (dictAudioInterpret) {
                                                      return function (w) {
                                                          var v = WAGS_Control_Types.unsafeUnWAG(w);
                                                          var toId = Data_Symbol.reflectSymbol(dictIsSymbol1)(v.value.dest);
                                                          var fromId = Data_Symbol.reflectSymbol(dictIsSymbol)(v.value.source);
                                                          return WAGS_Control_Types.unsafeWAG({
                                                              context: {
                                                                  res: v.context.res,
                                                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.connectXToY(dictAudioInterpret)({
                                                                      fromId: fromId,
                                                                      fromUnit: Data_Symbol.reflectSymbol(dictIsSymbol2)(Type_Proxy["Proxy"].value),
                                                                      toId: toId,
                                                                      toUnit: Data_Symbol.reflectSymbol(dictIsSymbol3)(Type_Proxy["Proxy"].value)
                                                                  }) ])
                                                              },
                                                              value: Data_Unit.unit
                                                          });
                                                      };
                                                  }
                                              };
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var connect = function (dict) {
      return dict.connect;
  };
  var iconnect = function (dictAudioInterpret) {
      return function (dictConnect) {
          return function (ptrs) {
              var $28 = connect(dictConnect)(dictAudioInterpret);
              var $29 = Data_Functor.voidRight(WAGS_Control_Types.functorWAG)(ptrs);
              return function ($30) {
                  return $28($29($30));
              };
          };
      };
  };
  exports["connect"] = connect;
  exports["iconnect"] = iconnect;
  exports["connectInstance"] = connectInstance;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Control.Indexed"] = $PS["WAGS.Control.Indexed"] || {};
  var exports = $PS["WAGS.Control.Indexed"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Apply_Indexed = $PS["Control.Apply.Indexed"];
  var Control_Comonad = $PS["Control.Comonad"];
  var Data_Functor = $PS["Data.Functor"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var ixFunctorIxWAG = {
      imap: function (f) {
          return function (v) {
              return Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(WAGS_Control_Types.functorWAG)(f))(v);
          };
      }
  };
  var ixApplyIxWAG = {
      iapply: function (v) {
          return function (v1) {
              return function (i) {
                  var fab = v(i);
                  var a = v1(fab);
                  return Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(a)(Control_Comonad.extract(WAGS_Control_Types.comonadWAG)(fab)(Control_Comonad.extract(WAGS_Control_Types.comonadWAG)(a)));
              };
          };
      },
      IxFunctor0: function () {
          return ixFunctorIxWAG;
      }
  };
  var ixBindIxWAG = {
      ibind: function (v) {
          return function (aToB) {
              return function (i) {
                  var ma = v(i);
                  var v1 = aToB(Control_Comonad.extract(WAGS_Control_Types.comonadWAG)(ma));
                  return v1(ma);
              };
          };
      },
      IxApply0: function () {
          return ixApplyIxWAG;
      }
  };
  var ixApplicativeIxWAG = {
      ipure: function (a) {
          return Data_Functor.voidRight(WAGS_Control_Types.functorWAG)(a);
      },
      IxApply0: function () {
          return ixApplyIxWAG;
      }
  };
  var functorIxWAG = {
      map: function (f) {
          return function (v) {
              return Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(WAGS_Control_Types.functorWAG)(f))(v);
          };
      }
  };
  var applyIxWAG = {
      apply: Control_Apply_Indexed.iapply(ixApplyIxWAG),
      Functor0: function () {
          return functorIxWAG;
      }
  };
  var applicativeIxWAG = {
      pure: Control_Applicative_Indexed.ipure(ixApplicativeIxWAG),
      Apply0: function () {
          return applyIxWAG;
      }
  };
  exports["functorIxWAG"] = functorIxWAG;
  exports["ixFunctorIxWAG"] = ixFunctorIxWAG;
  exports["ixApplyIxWAG"] = ixApplyIxWAG;
  exports["applyIxWAG"] = applyIxWAG;
  exports["ixApplicativeIxWAG"] = ixApplicativeIxWAG;
  exports["applicativeIxWAG"] = applicativeIxWAG;
  exports["ixBindIxWAG"] = ixBindIxWAG;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Graph.Oversample"] = $PS["WAGS.Graph.Oversample"] || {};
  var exports = $PS["WAGS.Graph.Oversample"];
  var WAGS_Rendered = $PS["WAGS.Rendered"];                
  var reflectOversample = function (dict) {
      return dict.reflectOversample;
  };
  var isOversampleTwoX = {
      reflectOversample: function (v) {
          return WAGS_Rendered.oTwoX;
      }
  };
  exports["reflectOversample"] = reflectOversample;
  exports["isOversampleTwoX"] = isOversampleTwoX;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Util"] = $PS["WAGS.Util"] || {};
  var exports = $PS["WAGS.Util"];
  var Data_Typelevel_Num_Sets = $PS["Data.Typelevel.Num.Sets"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var validateOutputChannelCountD1 = function (dictPos) {
      return {
          toOutputChannelCount: function (v) {
              return function (v1) {
                  return [ Data_Typelevel_Num_Sets["toInt'"](dictPos.Nat0())(Type_Proxy["Proxy"].value) ];
              };
          }
      };
  };                    
  var toOutputChannelCount = function (dict) {
      return dict.toOutputChannelCount;
  };
  var natToSymD0 = {
      Nat0: function () {
          return Data_Typelevel_Num_Sets.natD0;
      }
  };               
  var autoIncrementingInsertUnit = {
      Nat0: function () {
          return Data_Typelevel_Num_Sets.natD0;
      }
  };
  exports["toOutputChannelCount"] = toOutputChannelCount;
  exports["autoIncrementingInsertUnit"] = autoIncrementingInsertUnit;
  exports["natToSymD0"] = natToSymD0;
  exports["validateOutputChannelCountD1"] = validateOutputChannelCountD1;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Create"] = $PS["WAGS.Create"] || {};
  var exports = $PS["WAGS.Create"];
  var Control_Comonad = $PS["Control.Comonad"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Typelevel_Num_Sets = $PS["Data.Typelevel.Num.Sets"];
  var Data_Unit = $PS["Data.Unit"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Record = $PS["Record"];
  var Simple_JSON = $PS["Simple.JSON"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Oversample = $PS["WAGS.Graph.Oversample"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Tumult = $PS["WAGS.Tumult"];
  var WAGS_Util = $PS["WAGS.Util"];                
  var createWaveShaper = function (dictIsSymbol) {
      return function (dictIsOversample) {
          return function (dictLacks) {
              return function (dictCons) {
                  return {
                      "create'": function (dictAudioInterpret) {
                          return function (ptr) {
                              return function (w) {
                                  var v = WAGS_Control_Types.unsafeUnWAG(w);
                                  var oversample = WAGS_Graph_Oversample.reflectOversample(dictIsOversample)(v.value.oversample);
                                  var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                                  var o = WAGS_Control_Types.unsafeWAG({
                                      context: {
                                          res: v.context.res,
                                          instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeWaveShaper(dictAudioInterpret)({
                                              id: id,
                                              curve: v.value.floatArray,
                                              oversample: oversample
                                          }) ])
                                      },
                                      value: Data_Unit.unit
                                  });
                                  return o;
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var createUnit = {
      "create'": function (dictAudioInterpret) {
          return function (v) {
              return function (w) {
                  return w;
              };
          };
      }
  };
  var createTumult = function (dictIsSymbol) {
      return function (dictIsSymbol1) {
          return function (dictPos) {
              return function (dictLacks) {
                  return function (dictCons) {
                      return {
                          "create'": function (dictAudioInterpret) {
                              return function (ptr) {
                                  return function (w) {
                                      var v = WAGS_Control_Types.unsafeUnWAG(w);
                                      var pt = Data_Symbol.reflectSymbol(dictIsSymbol1)(Type_Proxy["Proxy"].value);
                                      var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                                      var o = WAGS_Control_Types.unsafeWAG({
                                          context: {
                                              res: v.context.res,
                                              instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeTumult(dictAudioInterpret)({
                                                  id: id,
                                                  terminus: pt,
                                                  instructions: WAGS_Tumult.safeUntumult(v.value.tumult)
                                              }) ])
                                          },
                                          value: Data_Unit.unit
                                      });
                                      return o;
                                  };
                              };
                          }
                      };
                  };
              };
          };
      };
  };
  var createTriangleOsc = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return {
                  "create'": function (dictAudioInterpret) {
                      return function (ptr) {
                          return function (w) {
                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                              var o = WAGS_Control_Types.unsafeWAG({
                                  context: {
                                      res: v.context.res,
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeTriangleOsc(dictAudioInterpret)({
                                          id: id,
                                          onOff: v.value.onOff,
                                          freq: v.value.freq
                                      }) ])
                                  },
                                  value: Data_Unit.unit
                              });
                              return o;
                          };
                      };
                  }
              };
          };
      };
  };
  var createSubgraph = function (dictIsSymbol) {
      return function (dictIsSymbol1) {
          return function (dictLacks) {
              return function (dictCons) {
                  return {
                      "create'": function (dictAudioInterpret) {
                          return function (ptr) {
                              return function (w) {
                                  var v = WAGS_Control_Types.unsafeUnWAG(w);
                                  var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                                  var o = WAGS_Control_Types.unsafeWAG({
                                      context: {
                                          res: v.context.res,
                                          instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeSubgraph(dictAudioInterpret)(dictIsSymbol1)({
                                              id: id,
                                              terminus: Type_Proxy["Proxy"].value,
                                              envs: v.value.envs,
                                              scenes: WAGS_Graph_AudioUnit.unAsSubGraph(v.value.subgraphMaker)(dictAudioInterpret)
                                          }) ])
                                      },
                                      value: Data_Unit.unit
                                  });
                                  return o;
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var createStereoPanner = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return {
                  "create'": function (dictAudioInterpret) {
                      return function (ptr) {
                          return function (w) {
                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                              var o = WAGS_Control_Types.unsafeWAG({
                                  context: {
                                      res: v.context.res,
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeStereoPanner(dictAudioInterpret)({
                                          id: id,
                                          pan: v.value.pan
                                      }) ])
                                  },
                                  value: Data_Unit.unit
                              });
                              return o;
                          };
                      };
                  }
              };
          };
      };
  };
  var createStepRLNil = {
      createStepRL: function (dictAudioInterpret) {
          return function (v) {
              return function (v1) {
                  return function (v2) {
                      return function (r) {
                          return Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(r)(Data_Unit.unit);
                      };
                  };
              };
          };
      }
  };
  var createStepRL = function (dict) {
      return dict.createStepRL;
  };
  var createSquareOsc = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return {
                  "create'": function (dictAudioInterpret) {
                      return function (ptr) {
                          return function (w) {
                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                              var o = WAGS_Control_Types.unsafeWAG({
                                  context: {
                                      res: v.context.res,
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeSquareOsc(dictAudioInterpret)({
                                          id: id,
                                          onOff: v.value.onOff,
                                          freq: v.value.freq
                                      }) ])
                                  },
                                  value: Data_Unit.unit
                              });
                              return o;
                          };
                      };
                  }
              };
          };
      };
  };
  var createSpeaker = function (dictLacks) {
      return function (dictCons) {
          return {
              "create'": function (dictAudioInterpret) {
                  return function (v) {
                      return function (w) {
                          var v1 = WAGS_Control_Types.unsafeUnWAG(w);
                          var o = WAGS_Control_Types.unsafeWAG({
                              context: {
                                  res: v1.context.res,
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.context.instructions)([ WAGS_Interpret.makeSpeaker(dictAudioInterpret) ])
                              },
                              value: Data_Unit.unit
                          });
                          return o;
                      };
                  };
              }
          };
      };
  };
  var createSinOsc = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return {
                  "create'": function (dictAudioInterpret) {
                      return function (ptr) {
                          return function (w) {
                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                              var o = WAGS_Control_Types.unsafeWAG({
                                  context: {
                                      res: v.context.res,
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeSinOsc(dictAudioInterpret)({
                                          id: id,
                                          onOff: v.value.onOff,
                                          freq: v.value.freq
                                      }) ])
                                  },
                                  value: Data_Unit.unit
                              });
                              return o;
                          };
                      };
                  }
              };
          };
      };
  };
  var createSawtoothOsc = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return {
                  "create'": function (dictAudioInterpret) {
                      return function (ptr) {
                          return function (w) {
                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                              var o = WAGS_Control_Types.unsafeWAG({
                                  context: {
                                      res: v.context.res,
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeSawtoothOsc(dictAudioInterpret)({
                                          id: id,
                                          onOff: v.value.onOff,
                                          freq: v.value.freq
                                      }) ])
                                  },
                                  value: Data_Unit.unit
                              });
                              return o;
                          };
                      };
                  }
              };
          };
      };
  };
  var createRecorder = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return {
                  "create'": function (dictAudioInterpret) {
                      return function (ptr) {
                          return function (w) {
                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                              var o = WAGS_Control_Types.unsafeWAG({
                                  context: {
                                      res: v.context.res,
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeRecorder(dictAudioInterpret)({
                                          id: id,
                                          cb: v.value.cb
                                      }) ])
                                  },
                                  value: Data_Unit.unit
                              });
                              return o;
                          };
                      };
                  }
              };
          };
      };
  };
  var createPlayBuf = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return {
                  "create'": function (dictAudioInterpret) {
                      return function (ptr) {
                          return function (w) {
                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                              var o = WAGS_Control_Types.unsafeWAG({
                                  context: {
                                      res: v.context.res,
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makePlayBuf(dictAudioInterpret)({
                                          id: id,
                                          buffer: v.value.buffer,
                                          bufferOffset: v.value.bufferOffset,
                                          onOff: v.value.onOff,
                                          playbackRate: v.value.playbackRate
                                      }) ])
                                  },
                                  value: Data_Unit.unit
                              });
                              return o;
                          };
                      };
                  }
              };
          };
      };
  };
  var createPeriodicOsc = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return {
                  "create'": function (dictAudioInterpret) {
                      return function (ptr) {
                          return function (w) {
                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                              var o = WAGS_Control_Types.unsafeWAG({
                                  context: {
                                      res: v.context.res,
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makePeriodicOsc(dictAudioInterpret)({
                                          id: id,
                                          wave: v.value.wave,
                                          onOff: v.value.onOff,
                                          freq: v.value.freq
                                      }) ])
                                  },
                                  value: Data_Unit.unit
                              });
                              return o;
                          };
                      };
                  }
              };
          };
      };
  };
  var createPeaking = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return {
                  "create'": function (dictAudioInterpret) {
                      return function (ptr) {
                          return function (w) {
                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                              var o = WAGS_Control_Types.unsafeWAG({
                                  context: {
                                      res: v.context.res,
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makePeaking(dictAudioInterpret)({
                                          id: id,
                                          freq: v.value.freq,
                                          gain: v.value.gain,
                                          q: v.value.q
                                      }) ])
                                  },
                                  value: Data_Unit.unit
                              });
                              return o;
                          };
                      };
                  }
              };
          };
      };
  };
  var createParametersNil = {
      createParameters: function (v) {
          return function (v1) {
              return Foreign_Object.empty;
          };
      }
  };
  var createParameters = function (dict) {
      return dict.createParameters;
  };
  var createParametersCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictCreateParameters) {
              return {
                  createParameters: function (v) {
                      return function (p) {
                          var rest = createParameters(dictCreateParameters)(Type_Proxy["Proxy"].value)(p);
                          var param = Record.get(dictIsSymbol)()(Type_Proxy["Proxy"].value)(p);
                          return Foreign_Object.insert(Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value))(param)(rest);
                      };
                  }
              };
          };
      };
  };
  var createNotch = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return {
                  "create'": function (dictAudioInterpret) {
                      return function (ptr) {
                          return function (w) {
                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                              var o = WAGS_Control_Types.unsafeWAG({
                                  context: {
                                      res: v.context.res,
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeNotch(dictAudioInterpret)({
                                          id: id,
                                          freq: v.value.freq,
                                          q: v.value.q
                                      }) ])
                                  },
                                  value: Data_Unit.unit
                              });
                              return o;
                          };
                      };
                  }
              };
          };
      };
  };
  var createMicrophone = function (dictLacks) {
      return function (dictCons) {
          return {
              "create'": function (dictAudioInterpret) {
                  return function (v) {
                      return function (w) {
                          var v1 = WAGS_Control_Types.unsafeUnWAG(w);
                          var o = WAGS_Control_Types.unsafeWAG({
                              context: {
                                  res: v1.context.res,
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.context.instructions)([ WAGS_Interpret.makeMicrophone(dictAudioInterpret)({
                                      microphone: v1.value.microphone
                                  }) ])
                              },
                              value: Data_Unit.unit
                          });
                          return o;
                      };
                  };
              }
          };
      };
  };
  var createLowshelf = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return {
                  "create'": function (dictAudioInterpret) {
                      return function (ptr) {
                          return function (w) {
                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                              var o = WAGS_Control_Types.unsafeWAG({
                                  context: {
                                      res: v.context.res,
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeLowshelf(dictAudioInterpret)({
                                          id: id,
                                          freq: v.value.freq,
                                          gain: v.value.gain
                                      }) ])
                                  },
                                  value: Data_Unit.unit
                              });
                              return o;
                          };
                      };
                  }
              };
          };
      };
  };
  var createLowpass = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return {
                  "create'": function (dictAudioInterpret) {
                      return function (ptr) {
                          return function (w) {
                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                              var o = WAGS_Control_Types.unsafeWAG({
                                  context: {
                                      res: v.context.res,
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeLowpass(dictAudioInterpret)({
                                          id: id,
                                          freq: v.value.freq,
                                          q: v.value.q
                                      }) ])
                                  },
                                  value: Data_Unit.unit
                              });
                              return o;
                          };
                      };
                  }
              };
          };
      };
  };
  var createLoopBuf = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return {
                  "create'": function (dictAudioInterpret) {
                      return function (ptr) {
                          return function (w) {
                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                              var o = WAGS_Control_Types.unsafeWAG({
                                  context: {
                                      res: v.context.res,
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeLoopBuf(dictAudioInterpret)({
                                          id: id,
                                          buffer: v.value.buffer,
                                          onOff: v.value.onOff,
                                          playbackRate: v.value.playbackRate,
                                          loopStart: v.value.loopStart,
                                          loopEnd: v.value.loopEnd
                                      }) ])
                                  },
                                  value: Data_Unit.unit
                              });
                              return o;
                          };
                      };
                  }
              };
          };
      };
  };
  var createInternal = function (dict) {
      return dict.createInternal;
  };
  var createInput = function (dictIsSymbol) {
      return function (dictIsSymbol1) {
          return function (dictLacks) {
              return function (dictCons) {
                  return {
                      "create'": function (dictAudioInterpret) {
                          return function (ptr) {
                              return function (w) {
                                  var v = WAGS_Control_Types.unsafeUnWAG(w);
                                  var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                                  var o = WAGS_Control_Types.unsafeWAG({
                                      context: {
                                          res: v.context.res,
                                          instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeInput(dictAudioInterpret)({
                                              id: id,
                                              input: Data_Symbol.reflectSymbol(dictIsSymbol1)(Type_Proxy["Proxy"].value)
                                          }) ])
                                      },
                                      value: Data_Unit.unit
                                  });
                                  return o;
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var createHighshelf = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return {
                  "create'": function (dictAudioInterpret) {
                      return function (ptr) {
                          return function (w) {
                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                              var o = WAGS_Control_Types.unsafeWAG({
                                  context: {
                                      res: v.context.res,
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeHighshelf(dictAudioInterpret)({
                                          id: id,
                                          freq: v.value.freq,
                                          gain: v.value.gain
                                      }) ])
                                  },
                                  value: Data_Unit.unit
                              });
                              return o;
                          };
                      };
                  }
              };
          };
      };
  };
  var createHighpass = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return {
                  "create'": function (dictAudioInterpret) {
                      return function (ptr) {
                          return function (w) {
                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                              var o = WAGS_Control_Types.unsafeWAG({
                                  context: {
                                      res: v.context.res,
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeHighpass(dictAudioInterpret)({
                                          id: id,
                                          freq: v.value.freq,
                                          q: v.value.q
                                      }) ])
                                  },
                                  value: Data_Unit.unit
                              });
                              return o;
                          };
                      };
                  }
              };
          };
      };
  };
  var createGain = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return {
                  "create'": function (dictAudioInterpret) {
                      return function (ptr) {
                          return function (w) {
                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                              var o = WAGS_Control_Types.unsafeWAG({
                                  context: {
                                      res: v.context.res,
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeGain(dictAudioInterpret)({
                                          id: id,
                                          gain: v.value.gain
                                      }) ])
                                  },
                                  value: Data_Unit.unit
                              });
                              return o;
                          };
                      };
                  }
              };
          };
      };
  };
  var createDynamicsCompressor = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return {
                  "create'": function (dictAudioInterpret) {
                      return function (ptr) {
                          return function (w) {
                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                              var o = WAGS_Control_Types.unsafeWAG({
                                  context: {
                                      res: v.context.res,
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeDynamicsCompressor(dictAudioInterpret)({
                                          id: id,
                                          knee: v.value.knee,
                                          threshold: v.value.threshold,
                                          ratio: v.value.ratio,
                                          attack: v.value.attack,
                                          release: v.value.release
                                      }) ])
                                  },
                                  value: Data_Unit.unit
                              });
                              return o;
                          };
                      };
                  }
              };
          };
      };
  };
  var createDelay = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return {
                  "create'": function (dictAudioInterpret) {
                      return function (ptr) {
                          return function (w) {
                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                              var o = WAGS_Control_Types.unsafeWAG({
                                  context: {
                                      res: v.context.res,
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeDelay(dictAudioInterpret)({
                                          id: id,
                                          delayTime: v.value.delayTime
                                      }) ])
                                  },
                                  value: Data_Unit.unit
                              });
                              return o;
                          };
                      };
                  }
              };
          };
      };
  };
  var createConstant = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return {
                  "create'": function (dictAudioInterpret) {
                      return function (ptr) {
                          return function (w) {
                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                              var o = WAGS_Control_Types.unsafeWAG({
                                  context: {
                                      res: v.context.res,
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeConstant(dictAudioInterpret)({
                                          id: id,
                                          onOff: v.value.onOff,
                                          offset: v.value.offset
                                      }) ])
                                  },
                                  value: Data_Unit.unit
                              });
                              return o;
                          };
                      };
                  }
              };
          };
      };
  };
  var createBandpass = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return {
                  "create'": function (dictAudioInterpret) {
                      return function (ptr) {
                          return function (w) {
                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                              var o = WAGS_Control_Types.unsafeWAG({
                                  context: {
                                      res: v.context.res,
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeBandpass(dictAudioInterpret)({
                                          id: id,
                                          freq: v.value.freq,
                                          q: v.value.q
                                      }) ])
                                  },
                                  value: Data_Unit.unit
                              });
                              return o;
                          };
                      };
                  }
              };
          };
      };
  };
  var createAudioWorkletNode = function (dictIsSymbol) {
      return function (dictIsSymbol1) {
          return function (dictLacks) {
              return function (dictCons) {
                  return function (dictRowToList) {
                      return function (dictCreateParameters) {
                          return function (dictMonoid) {
                              return function (dictNat) {
                                  return function (dictPos) {
                                      return function (dictValidateOutputChannelCount) {
                                          return function (dictWriteForeign) {
                                              return {
                                                  "create'": function (dictAudioInterpret) {
                                                      return function (ptr) {
                                                          return function (w) {
                                                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                                                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                                                              var o = WAGS_Control_Types.unsafeWAG({
                                                                  context: {
                                                                      res: v.context.res,
                                                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeAudioWorkletNode(dictAudioInterpret)({
                                                                          id: id,
                                                                          options: {
                                                                              name: Data_Symbol.reflectSymbol(dictIsSymbol1)(Type_Proxy["Proxy"].value),
                                                                              numberOfInputs: Data_Typelevel_Num_Sets["toInt'"](dictNat)(Type_Proxy["Proxy"].value),
                                                                              numberOfOutputs: Data_Typelevel_Num_Sets["toInt'"](dictPos.Nat0())(Type_Proxy["Proxy"].value),
                                                                              outputChannelCount: WAGS_Util.toOutputChannelCount(dictValidateOutputChannelCount)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value),
                                                                              parameterData: createParameters(dictCreateParameters)(Type_Proxy["Proxy"].value)(v.value.value1.parameterData),
                                                                              processorOptions: Simple_JSON.writeImpl(dictWriteForeign)(Data_Monoid.mempty(dictMonoid))
                                                                          }
                                                                      }) ])
                                                                  },
                                                                  value: Data_Unit.unit
                                                              });
                                                              return o;
                                                          };
                                                      };
                                                  }
                                              };
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var createAnalyser = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return {
                  "create'": function (dictAudioInterpret) {
                      return function (ptr) {
                          return function (w) {
                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
                              var o = WAGS_Control_Types.unsafeWAG({
                                  context: {
                                      res: v.context.res,
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.makeAnalyser(dictAudioInterpret)({
                                          id: id,
                                          cb: v.value.value0
                                      }) ])
                                  },
                                  value: Data_Unit.unit
                              });
                              return o;
                          };
                      };
                  }
              };
          };
      };
  };
  var createAll = function (dictCreateInternal) {
      return {
          create: function (dictAudioInterpret) {
              return (function (dictAudioInterpret1) {
                  return createInternal(dictCreateInternal)(dictAudioInterpret1);
              })(dictAudioInterpret)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value);
          }
      };
  };
  var create$prime = function (dict) {
      return dict["create'"];
  };
  var createStepRLCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictMakePrefixIfNeeded) {
              return function (dictConstructEdges) {
                  return function (dictCoercePrefixToString) {
                      return function (dictAppend) {
                          return function (dictCreate$prime) {
                              return function (dictRowToList) {
                                  return function (dictCreateStepRL) {
                                      return function (dictCreateStepRL1) {
                                          return {
                                              createStepRL: function (dictAudioInterpret) {
                                                  return function (v) {
                                                      return function (v1) {
                                                          return function (v2) {
                                                              return function (r) {
                                                                  var rx = Control_Comonad.extract(WAGS_Control_Types.comonadWAG)(r);
                                                                  var v3 = WAGS_ConstructEdges.constructEdges(dictConstructEdges)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Record.get(dictIsSymbol)()(Type_Proxy["Proxy"].value)(rx));
                                                                  var step1 = create$prime(dictCreate$prime)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(r)(v3.value1.value1.value0));
                                                                  var step2 = (function (dictAudioInterpret1) {
                                                                      return createStepRL(dictCreateStepRL)(dictAudioInterpret1);
                                                                  })(dictAudioInterpret)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(step1)(v3.value1.value1.value1));
                                                                  var step3 = createStepRL(dictCreateStepRL1)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(step2)(rx));
                                                                  return step3;
                                                              };
                                                          };
                                                      };
                                                  };
                                              }
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var createStepRLConsB = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictMakePrefixIfNeeded) {
              return function (dictConstructEdges) {
                  return function (dictCoercePrefixToString) {
                      return function (dictAppend) {
                          return function (dictRowToList) {
                              return function (dictCreateStepRL) {
                                  return function (dictCreateStepRL1) {
                                      return function (dictCreate$prime) {
                                          return {
                                              createStepRL: function (dictAudioInterpret) {
                                                  return function (v) {
                                                      return function (v1) {
                                                          return function (v2) {
                                                              return function (r) {
                                                                  var rx = Control_Comonad.extract(WAGS_Control_Types.comonadWAG)(r);
                                                                  var v3 = WAGS_ConstructEdges.constructEdges(dictConstructEdges)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Record.get(dictIsSymbol)()(Type_Proxy["Proxy"].value)(rx));
                                                                  var step1 = (function (dictAudioInterpret1) {
                                                                      return createStepRL(dictCreateStepRL)(dictAudioInterpret1);
                                                                  })(dictAudioInterpret)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(r)(v3.value1.value1.value1));
                                                                  var step2 = createStepRL(dictCreateStepRL1)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(step1)(rx));
                                                                  var step3 = create$prime(dictCreate$prime)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(step2)(v3.value1.value1.value0));
                                                                  return step3;
                                                              };
                                                          };
                                                      };
                                                  };
                                              }
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var createStepRLConsC = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictMakePrefixIfNeeded) {
              return function (dictConstructEdges) {
                  return function (dictCoercePrefixToString) {
                      return function (dictAppend) {
                          return function (dictRowToList) {
                              return function (dictCreateStepRL) {
                                  return function (dictCreateStepRL1) {
                                      return function (dictCreate$prime) {
                                          return {
                                              createStepRL: function (dictAudioInterpret) {
                                                  return function (v) {
                                                      return function (v1) {
                                                          return function (v2) {
                                                              return function (r) {
                                                                  var rx = Control_Comonad.extract(WAGS_Control_Types.comonadWAG)(r);
                                                                  var v3 = WAGS_ConstructEdges.constructEdges(dictConstructEdges)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Record.get(dictIsSymbol)()(Type_Proxy["Proxy"].value)(rx));
                                                                  var step1 = (function (dictAudioInterpret1) {
                                                                      return createStepRL(dictCreateStepRL)(dictAudioInterpret1);
                                                                  })(dictAudioInterpret)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(r)(v3.value1.value1.value1));
                                                                  var step2 = createStepRL(dictCreateStepRL1)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(step1)(rx));
                                                                  var step3 = create$prime(dictCreate$prime)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(step2)(v3.value1.value1.value0));
                                                                  return step3;
                                                              };
                                                          };
                                                      };
                                                  };
                                              }
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var create = function (dict) {
      return dict.create;
  };
  var icreate = function (dictAudioInterpret) {
      return function (dictCreate) {
          return function (r) {
              var $528 = create(dictCreate)(dictAudioInterpret);
              var $529 = Data_Functor.voidRight(WAGS_Control_Types.functorWAG)(r);
              return function ($530) {
                  return $528($529($530));
              };
          };
      };
  };
  var connectEdgesToNodeNil = {
      connectEdgesToNode: function (dictAudioInterpret) {
          return function (v) {
              return function (w) {
                  return w;
              };
          };
      }
  };
  var connectEdgesToNode = function (dict) {
      return dict.connectEdgesToNode;
  };
  var connectEdgesToNodeCons = function (dictConnect) {
      return function (dictConnectEdgesToNode) {
          return {
              connectEdgesToNode: function (dictAudioInterpret) {
                  return function (v) {
                      return function (w) {
                          var step1 = WAGS_Connect.connect(dictConnect)(dictAudioInterpret)(Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(w)({
                              source: Type_Proxy["Proxy"].value,
                              dest: Type_Proxy["Proxy"].value
                          }));
                          var step2 = connectEdgesToNode(dictConnectEdgesToNode)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(step1)(Control_Comonad.extract(WAGS_Control_Types.comonadWAG)(w)));
                          return step2;
                      };
                  };
              }
          };
      };
  };
  var connectAfterCreateNil = {
      connectAfterCreate: function (dictAudioInterpret) {
          return function (v) {
              return function (v1) {
                  return function (w) {
                      return Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(w)(Data_Unit.unit);
                  };
              };
          };
      }
  };
  var connectAfterCreate = function (dict) {
      return dict.connectAfterCreate;
  };
  var connectAfterCreateCons = function (dictMakePrefixIfNeeded) {
      return function (dictConstructEdgesT) {
          return function (dictRowToList) {
              return function (dictCoercePrefixToString) {
                  return function (dictAppend) {
                      return function (dictAddPrefixToRowList) {
                          return function (dictConnectEdgesToNode) {
                              return function (dictConnectAfterCreate) {
                                  return function (dictConnectAfterCreate1) {
                                      return {
                                          connectAfterCreate: function (dictAudioInterpret) {
                                              return function (v) {
                                                  return function (v1) {
                                                      return function (w) {
                                                          var step1 = connectEdgesToNode(dictConnectEdgesToNode)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(w)(Type_Proxy["Proxy"].value));
                                                          var step2 = connectAfterCreate(dictConnectAfterCreate)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(step1)(Type_Proxy["Proxy"].value));
                                                          var step3 = connectAfterCreate(dictConnectAfterCreate1)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(step2)(Type_Proxy["Proxy"].value));
                                                          return step3;
                                                      };
                                                  };
                                              };
                                          }
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var createInternalAll = function (dictRowToList) {
      return function (dictCreateStepRL) {
          return function (dictConnectAfterCreate) {
              return {
                  createInternal: function (dictAudioInterpret) {
                      return function (v) {
                          return function (v1) {
                              return function (r) {
                                  var step0 = (function (dictAudioInterpret1) {
                                      return createStepRL(dictCreateStepRL)(dictAudioInterpret1);
                                  })(dictAudioInterpret)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(r);
                                  var step1 = connectAfterCreate(dictConnectAfterCreate)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(step0)(Type_Proxy["Proxy"].value));
                                  return step1;
                              };
                          };
                      };
                  }
              };
          };
      };
  };
  exports["create"] = create;
  exports["icreate"] = icreate;
  exports["createStepRLNil"] = createStepRLNil;
  exports["createStepRLConsB"] = createStepRLConsB;
  exports["createStepRLConsC"] = createStepRLConsC;
  exports["createStepRLCons"] = createStepRLCons;
  exports["connectEdgesToNodeNil"] = connectEdgesToNodeNil;
  exports["connectEdgesToNodeCons"] = connectEdgesToNodeCons;
  exports["connectAfterCreateNil"] = connectAfterCreateNil;
  exports["connectAfterCreateCons"] = connectAfterCreateCons;
  exports["createInternalAll"] = createInternalAll;
  exports["createAll"] = createAll;
  exports["createUnit"] = createUnit;
  exports["createAnalyser"] = createAnalyser;
  exports["createParametersNil"] = createParametersNil;
  exports["createParametersCons"] = createParametersCons;
  exports["createAudioWorkletNode"] = createAudioWorkletNode;
  exports["createBandpass"] = createBandpass;
  exports["createConstant"] = createConstant;
  exports["createDelay"] = createDelay;
  exports["createDynamicsCompressor"] = createDynamicsCompressor;
  exports["createGain"] = createGain;
  exports["createHighpass"] = createHighpass;
  exports["createHighshelf"] = createHighshelf;
  exports["createInput"] = createInput;
  exports["createLoopBuf"] = createLoopBuf;
  exports["createLowpass"] = createLowpass;
  exports["createLowshelf"] = createLowshelf;
  exports["createMicrophone"] = createMicrophone;
  exports["createNotch"] = createNotch;
  exports["createPeaking"] = createPeaking;
  exports["createPeriodicOsc"] = createPeriodicOsc;
  exports["createPlayBuf"] = createPlayBuf;
  exports["createRecorder"] = createRecorder;
  exports["createSawtoothOsc"] = createSawtoothOsc;
  exports["createSinOsc"] = createSinOsc;
  exports["createSpeaker"] = createSpeaker;
  exports["createSquareOsc"] = createSquareOsc;
  exports["createStereoPanner"] = createStereoPanner;
  exports["createSubgraph"] = createSubgraph;
  exports["createTumult"] = createTumult;
  exports["createTriangleOsc"] = createTriangleOsc;
  exports["createWaveShaper"] = createWaveShaper;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Control.Functions"] = $PS["WAGS.Control.Functions"] || {};
  var exports = $PS["WAGS.Control.Functions"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Apply_Indexed = $PS["Control.Apply.Indexed"];
  var Control_Comonad = $PS["Control.Comonad"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Unit = $PS["Data.Unit"];
  var Record = $PS["Record"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];              
  var modifyRes = function (f) {
      return function (w) {
          var v = WAGS_Control_Types.unsafeUnWAG(w);
          var res$prime = f(v.context.res);
          return WAGS_Control_Types.unsafeWAG({
              context: {
                  res: res$prime,
                  instructions: v.context.instructions
              },
              value: res$prime
          });
      };
  };
  var makeScene = function (dictMonoid) {
      return function (dictIsScene) {
          return function (dictAudioInterpret) {
              return function (m) {
                  return function (trans) {
                      var go = function (env) {
                          var v = m(env);
                          if (v instanceof Data_Either.Left) {
                              return WAGS_Control_Types.getFrame(dictIsScene)(v.value0)(env);
                          };
                          if (v instanceof Data_Either.Right) {
                              var v1 = WAGS_Control_Types.unsafeUnWAG(v.value0);
                              return {
                                  instructions: v1.context.instructions,
                                  res: v1.context.res,
                                  next: trans(WAGS_Control_Types.unsafeWAG({
                                      context: {
                                          res: Data_Monoid.mempty(dictMonoid),
                                          instructions: [  ]
                                      },
                                      value: v1.value
                                  }))
                              };
                          };
                          throw new Error("Failed pattern match at WAGS.Control.Functions (line 102, column 12 - line 116, column 10): " + [ v.constructor.name ]);
                      };
                      return WAGS_Control_Types.unFrame(dictIsScene)(go);
                  };
              };
          };
      };
  };
  var makeSceneR = function (dictMonoid) {
      return function (dictAudioInterpret) {
          return function (dictIsScene) {
              return function (a) {
                  return function (b) {
                      return makeScene(dictMonoid)(dictIsScene)(dictAudioInterpret)(Data_Functor.map(Data_Functor.functorFn)(Data_Either.Right.create)(a))(b);
                  };
              };
          };
      };
  };
  var makeSceneR$prime = function (dictMonoid) {
      return function (dictAudioInterpret) {
          return function (dictIsScene) {
              return function (a) {
                  return function (b) {
                      return makeSceneR(dictMonoid)(dictAudioInterpret)(dictIsScene)(Control_Applicative.pure(Control_Applicative.applicativeFn)(a))(b);
                  };
              };
          };
      };
  };
  var loop = function (dictMonoid) {
      return function (dictAudioInterpret) {
          return function (dictIsScene) {
              return function (fa) {
                  return function (ma) {
                      return makeSceneR(dictMonoid)(dictAudioInterpret)(dictIsScene)(fa(ma))(loop(dictMonoid)(dictAudioInterpret)(dictIsScene)(fa));
                  };
              };
          };
      };
  };
  var initialAudioState = function (dictMonoid) {
      return {
          res: Data_Monoid.mempty(dictMonoid),
          instructions: [  ]
      };
  };
  var start = function (dictMonoid) {
      return function (dictAudioInterpret) {
          return WAGS_Control_Types.unsafeWAG({
              context: initialAudioState(dictMonoid),
              value: Data_Unit.unit
          });
      };
  };
  var istart = function (dictMonoid) {
      return function (dictAudioInterpret) {
          return function (dictIsScene) {
              return function (m) {
                  return makeSceneR(dictMonoid)(dictAudioInterpret)(dictIsScene)(function (e) {
                      var v = m(e);
                      return v(start(dictMonoid)(dictAudioInterpret));
                  });
              };
          };
      };
  };
  var imodifyRes = function (f) {
      return modifyRes(f);
  };
  var iloop = function (dictMonoid) {
      return function (dictAudioInterpret) {
          return function (dictIsScene) {
              return function (fa) {
                  return loop(dictMonoid)(dictAudioInterpret)(dictIsScene)(function (wa) {
                      return function (e) {
                          var v = fa(e)(Control_Comonad.extract(WAGS_Control_Types.comonadWAG)(wa));
                          return v(wa);
                      };
                  });
              };
          };
      };
  };
  var loopUsingSceneWithRes = function (dictMonoid) {
      return function (dictAudioInterpret) {
          return function (dictIsScene) {
              return function (dictCreate) {
                  return function (dictChange) {
                      return function (sceneF) {
                          return function (initialControl) {
                              return istart(dictMonoid)(dictAudioInterpret)(dictIsScene)(function (env) {
                                  var v = sceneF(env)(initialControl(env));
                                  return Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(Control_Apply_Indexed.iapplySecond(WAGS_Control_Indexed.ixApplyIxWAG)(WAGS_Create.icreate(dictAudioInterpret)(dictCreate)(v.scene))(imodifyRes(Data_Function["const"](v.res))))(v.control);
                              })(iloop(dictMonoid)(dictAudioInterpret)(dictIsScene)(function (env) {
                                  return function (icontrol) {
                                      var v = sceneF(env)(icontrol);
                                      return Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(Control_Apply.applySecond(WAGS_Control_Indexed.applyIxWAG)(WAGS_Change.ichange(dictAudioInterpret)(dictChange)(v.scene))(imodifyRes(Data_Function["const"](v.res))))(v.control);
                                  };
                              }));
                          };
                      };
                  };
              };
          };
      };
  };
  var loopUsingScene = function (dictMonoid) {
      return function (dictAudioInterpret) {
          return function (dictIsScene) {
              return function (dictCreate) {
                  return function (dictChange) {
                      var f = Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Functor.functorFn)(Record.union()({
                          res: Data_Monoid.mempty(dictMonoid)
                      })));
                      var $103 = loopUsingSceneWithRes(dictMonoid)(dictAudioInterpret)(dictIsScene)(dictCreate)(dictChange);
                      return function ($104) {
                          return $103(f($104));
                      };
                  };
              };
          };
      };
  };
  var icont = function (dictMonoid) {
      return function (dictAudioInterpret) {
          return function (dictIsScene) {
              return function (c) {
                  return function (v) {
                      return function ($105) {
                          return c(v($105));
                      };
                  };
              };
          };
      };
  };
  var freeze = function (dictMonoid) {
      return function (dictAudioInterpret) {
          return function (dictIsScene) {
              return function (s) {
                  return makeScene(dictMonoid)(dictIsScene)(dictAudioInterpret)(Control_Applicative.pure(Control_Applicative.applicativeFn)(new Data_Either.Right(s)))(freeze(dictMonoid)(dictAudioInterpret)(dictIsScene));
              };
          };
      };
  };
  var branch = function (dictMonoid) {
      return function (dictAudioInterpret) {
          return function (dictIsScene) {
              return function (fa) {
                  return function (w) {
                      return makeScene(dictMonoid)(dictIsScene)(dictAudioInterpret)(fa(w))(branch(dictMonoid)(dictAudioInterpret)(dictIsScene)(fa));
                  };
              };
          };
      };
  };
  var ibranch = function (dictMonoid) {
      return function (dictAudioInterpret) {
          return function (dictIsScene) {
              return function (fa) {
                  return branch(dictMonoid)(dictAudioInterpret)(dictIsScene)(function (wa) {
                      return function (e) {
                          var v = fa(e)(Control_Comonad.extract(WAGS_Control_Types.comonadWAG)(wa));
                          if (v instanceof Data_Either.Left) {
                              return Data_Either.Left.create(v.value0(wa));
                          };
                          if (v instanceof Data_Either.Right) {
                              return Data_Either.Right.create(v.value0(wa));
                          };
                          throw new Error("Failed pattern match at WAGS.Control.Functions (line 319, column 16 - line 321, column 40): " + [ v.constructor.name ]);
                      };
                  });
              };
          };
      };
  };
  exports["start"] = start;
  exports["istart"] = istart;
  exports["loopUsingScene"] = loopUsingScene;
  exports["imodifyRes"] = imodifyRes;
  exports["makeSceneR'"] = makeSceneR$prime;
  exports["iloop"] = iloop;
  exports["ibranch"] = ibranch;
  exports["icont"] = icont;
  exports["freeze"] = freeze;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Control.Functions.Graph"] = $PS["WAGS.Control.Functions.Graph"] || {};
  var exports = $PS["WAGS.Control.Functions.Graph"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var loopUsingScene = function (dictMonoid) {
      return function (dictAudioInterpret) {
          return function (dictCreate) {
              return function (dictChange) {
                  return function (dictGraphIsRenderable) {
                      return WAGS_Control_Functions.loopUsingScene(dictMonoid)(dictAudioInterpret)(WAGS_Control_Types.isSceneScene)(dictCreate)(dictChange);
                  };
              };
          };
      };
  };
  var istart = function (dictGraphIsRenderable) {
      return function (dictMonoid) {
          return function (dictAudioInterpret) {
              return WAGS_Control_Functions.istart(dictMonoid)(dictAudioInterpret)(WAGS_Control_Types.isSceneScene);
          };
      };
  };
  var iloop = function (dictMonoid) {
      return function (dictGraphIsRenderable) {
          return function (dictAudioInterpret) {
              return WAGS_Control_Functions.iloop(dictMonoid)(dictAudioInterpret)(WAGS_Control_Types.isSceneScene);
          };
      };
  };
  exports["loopUsingScene"] = loopUsingScene;
  exports["iloop"] = iloop;
  exports["istart"] = istart;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Control.Functions.Subgraph"] = $PS["WAGS.Control.Functions.Subgraph"] || {};
  var exports = $PS["WAGS.Control.Functions.Subgraph"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var makeSceneR$prime = function (dictMonoid) {
      return function (dictSubgraphIsRenderable) {
          return function (dictAudioInterpret) {
              return WAGS_Control_Functions["makeSceneR'"](dictMonoid)(dictAudioInterpret)(WAGS_Control_Types.isSceneSubScene);
          };
      };
  };
  var loopUsingScene = function (dictMonoid) {
      return function (dictAudioInterpret) {
          return function (dictCreate) {
              return function (dictChange) {
                  return function (dictSubgraphIsRenderable) {
                      return WAGS_Control_Functions.loopUsingScene(dictMonoid)(dictAudioInterpret)(WAGS_Control_Types.isSceneSubScene)(dictCreate)(dictChange);
                  };
              };
          };
      };
  };
  var freeze = function (dictMonoid) {
      return function (dictSubgraphIsRenderable) {
          return function (dictAudioInterpret) {
              return WAGS_Control_Functions.freeze(dictMonoid)(dictAudioInterpret)(WAGS_Control_Types.isSceneSubScene);
          };
      };
  };
  exports["makeSceneR'"] = makeSceneR$prime;
  exports["loopUsingScene"] = loopUsingScene;
  exports["freeze"] = freeze;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Create.Optionals"] = $PS["WAGS.Create.Optionals"] || {};
  var exports = $PS["WAGS.Create.Optionals"];
  var Control_Category = $PS["Control.Category"];
  var ConvertableOptions = $PS["ConvertableOptions"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Hashable = $PS["Data.Hashable"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Data_Unit = $PS["Data.Unit"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var SinOsc = (function () {
      function SinOsc() {

      };
      SinOsc.value = new SinOsc();
      return SinOsc;
  })();
  var PlayBuf = (function () {
      function PlayBuf() {

      };
      PlayBuf.value = new PlayBuf();
      return PlayBuf;
  })();
  var Peaking = (function () {
      function Peaking() {

      };
      Peaking.value = new Peaking();
      return Peaking;
  })();
  var Notch = (function () {
      function Notch() {

      };
      Notch.value = new Notch();
      return Notch;
  })();
  var Lowshelf = (function () {
      function Lowshelf() {

      };
      Lowshelf.value = new Lowshelf();
      return Lowshelf;
  })();
  var Lowpass = (function () {
      function Lowpass() {

      };
      Lowpass.value = new Lowpass();
      return Lowpass;
  })();
  var LoopBuf = (function () {
      function LoopBuf() {

      };
      LoopBuf.value = new LoopBuf();
      return LoopBuf;
  })();
  var Highshelf = (function () {
      function Highshelf() {

      };
      Highshelf.value = new Highshelf();
      return Highshelf;
  })();
  var Highpass = (function () {
      function Highpass() {

      };
      Highpass.value = new Highpass();
      return Highpass;
  })();
  var DynamicsCompressor = (function () {
      function DynamicsCompressor() {

      };
      DynamicsCompressor.value = new DynamicsCompressor();
      return DynamicsCompressor;
  })();
  var Bandpass = (function () {
      function Bandpass() {

      };
      Bandpass.value = new Bandpass();
      return Bandpass;
  })();
  var Allpass = (function () {
      function Allpass() {

      };
      Allpass.value = new Allpass();
      return Allpass;
  })();
  var waveShaper = function (dictIsOversample) {
      return function (a) {
          return function (b) {
              return function (c) {
                  return new Data_Tuple.Tuple({
                      floatArray: a,
                      oversample: b
                  }, c);
              };
          };
      };
  };
  var tumult = function (dictPos) {
      return function ($213) {
          return Data_Tuple.Tuple.create(WAGS_Graph_AudioUnit.Tumult((function (v) {
              return {
                  tumult: v
              };
          })($213)));
      };
  };
  var triangleOsc = function (dict) {
      return dict.triangleOsc;
  };
  var subgraph = function (dictHashable) {
      return function (dictIsSymbol) {
          return function (envs) {
              return function (sg) {
                  return Data_Tuple.Tuple.create({
                      subgraphMaker: function (dictAudioInterpret) {
                          return sg(dictAudioInterpret);
                      },
                      envs: Data_Functor.map(Data_Functor.functorArray)(function (v) {
                          return {
                              index: v.value0,
                              pos: Data_Hashable.hash(dictHashable)(v.value0),
                              env: v.value1
                          };
                      })(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(envs)),
                      terminus: Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value)
                  });
              };
          };
      };
  };
  var squareOsc = function (dict) {
      return dict.squareOsc;
  };                                                                              
  var speaker = function (b) {
      return {
          speaker: new Data_Tuple.Tuple(WAGS_Graph_AudioUnit.Speaker.value, b)
      };
  };
  var sinOsc = function (dict) {
      return dict.sinOsc;
  };
  var sawtoothOsc = function (dict) {
      return dict.sawtoothOsc;
  };
  var ref = new Data_Tuple.Tuple(Data_Unit.unit, {});
  var recorder = function ($214) {
      return Data_Tuple.Tuple.create(WAGS_Graph_AudioUnit.Recorder((function (v) {
          return {
              cb: v
          };
      })($214)));
  };
  var playBuf = function (dict) {
      return dict.playBuf;
  };
  var periodicOsc = function (dict) {
      return dict.periodicOsc;
  };
  var peaking = function (dict) {
      return dict.peaking;
  };
  var pan = function (dictParamable) {
      var $215 = WAGS_Graph_Paramable.paramize(dictParamable);
      return function ($216) {
          return Data_Tuple.Tuple.create(WAGS_Graph_AudioUnit.StereoPanner((function (v) {
              return {
                  pan: v
              };
          })($215($216))));
      };
  };
  var notch = function (dict) {
      return dict.notch;
  }; 
  var microphone = (function () {
      var $217 = Data_Function.flip(Data_Tuple.Tuple.create)({});
      return function ($218) {
          return $217(WAGS_Graph_AudioUnit.Microphone((function (v) {
              return {
                  microphone: v
              };
          })($218)));
      };
  })();
  var lowshelf = function (dict) {
      return dict.lowshelf;
  };
  var lowpass = function (dict) {
      return dict.lowpass;
  };
  var loopBuf = function (dict) {
      return dict.loopBuf;
  };
  var input = function (dictIsSymbol) {
      return function (v) {
          return new Data_Tuple.Tuple(WAGS_Graph_AudioUnit.Input.value, {});
      };
  };
  var highshelf = function (dict) {
      return dict.highshelf;
  };
  var highpass = function (dict) {
      return dict.highpass;
  };
  var gain = function (dictParamable) {
      return function (a) {
          return Data_Tuple.Tuple.create({
              gain: WAGS_Graph_Paramable.paramize(dictParamable)(a)
          });
      };
  };
  var delay = function (dictParamable) {
      return function (gvsv) {
          return Data_Tuple.Tuple.create({
              delayTime: WAGS_Graph_Paramable.paramize(dictParamable)(gvsv)
          });
      };
  };
  var defaultTriangleOsc = {
      onOff: WAGS_Graph_Paramable.onOffIze(WAGS_Graph_Paramable.onOffIzeOnOff)(WAGS_Graph_Parameter["_on"])
  };
  var triangleOscCtor2 = function (dictParamable) {
      return {
          triangleOsc: function (a) {
              return new Data_Tuple.Tuple({
                  onOff: defaultTriangleOsc.onOff,
                  freq: WAGS_Graph_Paramable.paramize(dictParamable)(a)
              }, {});
          }
      };
  };
  var defaultSquareOsc = {
      onOff: WAGS_Graph_Paramable.onOffIze(WAGS_Graph_Paramable.onOffIzeOnOff)(WAGS_Graph_Parameter["_on"])
  };
  var squareOscCtor2 = function (dictParamable) {
      return {
          squareOsc: function (a) {
              return new Data_Tuple.Tuple({
                  onOff: defaultSquareOsc.onOff,
                  freq: WAGS_Graph_Paramable.paramize(dictParamable)(a)
              }, {});
          }
      };
  };
  var defaultSinOsc = {
      onOff: WAGS_Graph_Paramable.onOffIze(WAGS_Graph_Paramable.onOffIzeOnOff)(WAGS_Graph_Parameter["_on"])
  };
  var sinOscCtor1 = function (dictConvertOptionsWithDefaults) {
      return {
          sinOsc: function (provided) {
              var all = ConvertableOptions.convertOptionsWithDefaults(dictConvertOptionsWithDefaults)(SinOsc.value)(defaultSinOsc)(provided);
              return new Data_Tuple.Tuple(all, {});
          }
      };
  };
  var sinOscCtor2 = function (dictParamable) {
      return {
          sinOsc: function (a) {
              return new Data_Tuple.Tuple({
                  onOff: defaultSinOsc.onOff,
                  freq: WAGS_Graph_Paramable.paramize(dictParamable)(a)
              }, {});
          }
      };
  };
  var defaultSawtoothOsc = {
      onOff: WAGS_Graph_Paramable.onOffIze(WAGS_Graph_Paramable.onOffIzeOnOff)(WAGS_Graph_Parameter["_on"])
  };
  var sawtoothOscCtor2 = function (dictParamable) {
      return {
          sawtoothOsc: function (a) {
              return new Data_Tuple.Tuple({
                  onOff: defaultSawtoothOsc.onOff,
                  freq: WAGS_Graph_Paramable.paramize(dictParamable)(a)
              }, {});
          }
      };
  };
  var defaultPlayBuf = {
      playbackRate: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(1.0),
      onOff: WAGS_Graph_Paramable.onOffIze(WAGS_Graph_Paramable.onOffIzeOnOff)(WAGS_Graph_Parameter["_on"]),
      bufferOffset: 0.0
  };
  var playBufCtor1 = function (dictConvertOptionsWithDefaults) {
      return {
          playBuf: function (provided) {
              return function (buffer) {
                  var all = ConvertableOptions.convertOptionsWithDefaults(dictConvertOptionsWithDefaults)(PlayBuf.value)(defaultPlayBuf)(provided);
                  return new Data_Tuple.Tuple({
                      buffer: buffer,
                      bufferOffset: all.bufferOffset,
                      onOff: all.onOff,
                      playbackRate: all.playbackRate
                  }, {});
              };
          }
      };
  };
  var playBufCtor2 = {
      playBuf: function (buffer) {
          return new Data_Tuple.Tuple({
              buffer: buffer,
              bufferOffset: defaultPlayBuf.bufferOffset,
              onOff: defaultPlayBuf.onOff,
              playbackRate: defaultPlayBuf.playbackRate
          }, {});
      }
  };
  var defaultPeriodicOsc = {
      onOff: WAGS_Graph_Paramable.onOffIze(WAGS_Graph_Paramable.onOffIzeOnOff)(WAGS_Graph_Parameter["_on"])
  };
  var periodicOscCtor2 = function (dictCanBeCoercedToPeriodicOsc) {
      return function (dictParamable) {
          return {
              periodicOsc: function (wave) {
                  return function (a) {
                      return new Data_Tuple.Tuple({
                          wave: wave,
                          onOff: defaultPeriodicOsc.onOff,
                          freq: WAGS_Graph_Paramable.paramize(dictParamable)(a)
                      }, {});
                  };
              }
          };
      };
  };
  var defaultPeaking = {
      q: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(1.0),
      gain: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(0.0)
  };
  var peakingCtor1 = function (dictConvertOptionsWithDefaults) {
      return {
          peaking: function (provided) {
              var all = ConvertableOptions.convertOptionsWithDefaults(dictConvertOptionsWithDefaults)(Peaking.value)(defaultPeaking)(provided);
              return Data_Tuple.Tuple.create(all);
          }
      };
  };
  var defaultNotch = {
      q: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(1.0)
  };
  var notchCtor1 = function (dictConvertOptionsWithDefaults) {
      return {
          notch: function (provided) {
              var all = ConvertableOptions.convertOptionsWithDefaults(dictConvertOptionsWithDefaults)(Notch.value)(defaultNotch)(provided);
              return Data_Tuple.Tuple.create(all);
          }
      };
  };
  var defaultLowshelf = {
      gain: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(0.0)
  };
  var lowshelfCtor1 = function (dictConvertOptionsWithDefaults) {
      return {
          lowshelf: function (provided) {
              var all = ConvertableOptions.convertOptionsWithDefaults(dictConvertOptionsWithDefaults)(Lowshelf.value)(defaultLowshelf)(provided);
              return Data_Tuple.Tuple.create(all);
          }
      };
  };
  var defaultLowpass = {
      q: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(1.0)
  };
  var lowpassCtor1 = function (dictConvertOptionsWithDefaults) {
      return {
          lowpass: function (provided) {
              var all = ConvertableOptions.convertOptionsWithDefaults(dictConvertOptionsWithDefaults)(Lowpass.value)(defaultLowpass)(provided);
              return Data_Tuple.Tuple.create(all);
          }
      };
  };
  var defaultLoopBuf = {
      playbackRate: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(1.0),
      onOff: WAGS_Graph_Paramable.onOffIze(WAGS_Graph_Paramable.onOffIzeOnOff)(WAGS_Graph_Parameter["_on"]),
      loopStart: 0.0,
      loopEnd: 0.0
  };
  var loopBufCtor1 = function (dictConvertOptionsWithDefaults) {
      return {
          loopBuf: function (provided) {
              return function (buffer) {
                  var all = ConvertableOptions.convertOptionsWithDefaults(dictConvertOptionsWithDefaults)(LoopBuf.value)(defaultLoopBuf)(provided);
                  return new Data_Tuple.Tuple({
                      buffer: buffer,
                      onOff: all.onOff,
                      playbackRate: all.playbackRate,
                      loopStart: all.loopStart,
                      loopEnd: all.loopEnd
                  }, {});
              };
          }
      };
  };
  var loopBufCtor2 = {
      loopBuf: function (buffer) {
          return new Data_Tuple.Tuple({
              buffer: buffer,
              onOff: defaultLoopBuf.onOff,
              playbackRate: defaultLoopBuf.playbackRate,
              loopStart: defaultLoopBuf.loopStart,
              loopEnd: defaultLoopBuf.loopEnd
          }, {});
      }
  };
  var defaultHighshelf = {
      gain: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(0.0)
  };
  var highshelfCtor1 = function (dictConvertOptionsWithDefaults) {
      return {
          highshelf: function (provided) {
              var all = ConvertableOptions.convertOptionsWithDefaults(dictConvertOptionsWithDefaults)(Highshelf.value)(defaultHighshelf)(provided);
              return Data_Tuple.Tuple.create(all);
          }
      };
  };
  var defaultHighpass = {
      q: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(1.0)
  };
  var highpassCtor1 = function (dictConvertOptionsWithDefaults) {
      return {
          highpass: function (provided) {
              var all = ConvertableOptions.convertOptionsWithDefaults(dictConvertOptionsWithDefaults)(Highpass.value)(defaultHighpass)(provided);
              return Data_Tuple.Tuple.create(all);
          }
      };
  };
  var highpassCtor2 = function (dictParamable) {
      return {
          highpass: function (a) {
              return Data_Tuple.Tuple.create({
                  freq: WAGS_Graph_Paramable.paramize(dictParamable)(a),
                  q: defaultHighpass.q
              });
          }
      };
  };
  var defaultDynamicsCompressor = {
      threshold: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(-24.0),
      knee: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(30.0),
      ratio: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(12.0),
      attack: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(3.0e-3),
      release: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(0.25)
  };
  var defaultConstant = {
      onOff: WAGS_Graph_Paramable.onOffIze(WAGS_Graph_Paramable.onOffIzeOnOff)(WAGS_Graph_Parameter["_on"])
  };
  var defaultBandpass = {
      q: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(1.0)
  };
  var defaultAllpass = {
      q: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(1.0)
  };
  var convertSinOscOnOff = {
      convertOption: function (v) {
          return function (v1) {
              return WAGS_Graph_Paramable.onOffIze(WAGS_Graph_Paramable.onOffIzeOnOff);
          };
      }
  };
  var convertSinOscFrequency = function (dictParamable) {
      return {
          convertOption: function (v) {
              return function (v1) {
                  return WAGS_Graph_Paramable.paramize(dictParamable);
              };
          }
      };
  };
  var convertPlayBufOnOff = {
      convertOption: function (v) {
          return function (v1) {
              return WAGS_Graph_Paramable.onOffIze(WAGS_Graph_Paramable.onOffIzeOnOff);
          };
      }
  };
  var convertPlayBufAudioOnOff = {
      convertOption: function (v) {
          return function (v1) {
              return Control_Category.identity(Control_Category.categoryFn);
          };
      }
  };
  var convertPlayBufAPBufferOffset = {
      convertOption: function (v) {
          return function (v1) {
              return Control_Category.identity(Control_Category.categoryFn);
          };
      }
  };
  var convertPeakingFrequency = function (dictParamable) {
      return {
          convertOption: function (v) {
              return function (v1) {
                  return WAGS_Graph_Paramable.paramize(dictParamable);
              };
          }
      };
  };
  var convertNotchFrequency = function (dictParamable) {
      return {
          convertOption: function (v) {
              return function (v1) {
                  return WAGS_Graph_Paramable.paramize(dictParamable);
              };
          }
      };
  };
  var convertLowshelfFrequency = function (dictParamable) {
      return {
          convertOption: function (v) {
              return function (v1) {
                  return WAGS_Graph_Paramable.paramize(dictParamable);
              };
          }
      };
  };
  var convertLowpassFrequency = function (dictParamable) {
      return {
          convertOption: function (v) {
              return function (v1) {
                  return WAGS_Graph_Paramable.paramize(dictParamable);
              };
          }
      };
  };
  var convertLoopBufStart = {
      convertOption: function (v) {
          return function (v1) {
              return Control_Category.identity(Control_Category.categoryFn);
          };
      }
  };
  var convertLoopBufPlaybackRate = function (dictParamable) {
      return {
          convertOption: function (v) {
              return function (v1) {
                  return WAGS_Graph_Paramable.paramize(dictParamable);
              };
          }
      };
  };
  var convertLoopBufEnd = {
      convertOption: function (v) {
          return function (v1) {
              return Control_Category.identity(Control_Category.categoryFn);
          };
      }
  };
  var convertHighshelfFrequency = function (dictParamable) {
      return {
          convertOption: function (v) {
              return function (v1) {
                  return WAGS_Graph_Paramable.paramize(dictParamable);
              };
          }
      };
  };
  var convertHighpassQ = function (dictParamable) {
      return {
          convertOption: function (v) {
              return function (v1) {
                  return WAGS_Graph_Paramable.paramize(dictParamable);
              };
          }
      };
  };
  var convertHighpassFrequency = function (dictParamable) {
      return {
          convertOption: function (v) {
              return function (v1) {
                  return WAGS_Graph_Paramable.paramize(dictParamable);
              };
          }
      };
  };
  var convertBandpassQ = function (dictParamable) {
      return {
          convertOption: function (v) {
              return function (v1) {
                  return WAGS_Graph_Paramable.paramize(dictParamable);
              };
          }
      };
  };
  var convertBandpassFrequency = function (dictParamable) {
      return {
          convertOption: function (v) {
              return function (v1) {
                  return WAGS_Graph_Paramable.paramize(dictParamable);
              };
          }
      };
  };
  var convertAllpassFrequency = function (dictParamable) {
      return {
          convertOption: function (v) {
              return function (v1) {
                  return WAGS_Graph_Paramable.paramize(dictParamable);
              };
          }
      };
  };
  var constantCtor2 = function (dictParamable) {
      return {
          constant: function (a) {
              return new Data_Tuple.Tuple({
                  onOff: defaultConstant.onOff,
                  offset: WAGS_Graph_Paramable.paramize(dictParamable)(a)
              }, {});
          }
      };
  };
  var constant = function (dict) {
      return dict.constant;
  };
  var compressorCTor = function (dictConvertOptionsWithDefaults) {
      return {
          compressor: function (provided) {
              return function (b) {
                  var all = ConvertableOptions.convertOptionsWithDefaults(dictConvertOptionsWithDefaults)(DynamicsCompressor.value)(defaultDynamicsCompressor)(provided);
                  return new Data_Tuple.Tuple(all, b);
              };
          }
      };
  };
  var compressor = function (dict) {
      return dict.compressor;
  };
  var bandpassCtor1 = function (dictConvertOptionsWithDefaults) {
      return {
          bandpass: function (provided) {
              return function (b) {
                  var all = ConvertableOptions.convertOptionsWithDefaults(dictConvertOptionsWithDefaults)(Bandpass.value)(defaultBandpass)(provided);
                  return new Data_Tuple.Tuple(all, b);
              };
          }
      };
  };
  var bandpass = function (dict) {
      return dict.bandpass;
  };
  var audioWorkletNode = function (dictIsSymbol) {
      return function (dictNat) {
          return function (dictPos) {
              return function (dictValidateOutputChannelCount) {
                  return function (dictHomogeneous) {
                      return function (dictWriteForeign) {
                          return function (px) {
                              return function (nd) {
                                  return function (b) {
                                      return new Data_Tuple.Tuple(new WAGS_Graph_AudioUnit.AudioWorkletNode(px, nd), b);
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var analyser = function ($223) {
      return Data_Tuple.Tuple.create(WAGS_Graph_AudioUnit.Analyser.create($223));
  };
  var allpassCtor1 = function (dictConvertOptionsWithDefaults) {
      return {
          allpass: function (provided) {
              return function (b) {
                  var all = ConvertableOptions.convertOptionsWithDefaults(dictConvertOptionsWithDefaults)(Allpass.value)(defaultAllpass)(provided);
                  return new Data_Tuple.Tuple(all, b);
              };
          }
      };
  };
  var allpass = function (dict) {
      return dict.allpass;
  };
  exports["allpass"] = allpass;
  exports["bandpass"] = bandpass;
  exports["compressor"] = compressor;
  exports["constant"] = constant;
  exports["highpass"] = highpass;
  exports["highshelf"] = highshelf;
  exports["loopBuf"] = loopBuf;
  exports["lowpass"] = lowpass;
  exports["lowshelf"] = lowshelf;
  exports["notch"] = notch;
  exports["peaking"] = peaking;
  exports["periodicOsc"] = periodicOsc;
  exports["playBuf"] = playBuf;
  exports["sawtoothOsc"] = sawtoothOsc;
  exports["sinOsc"] = sinOsc;
  exports["squareOsc"] = squareOsc;
  exports["triangleOsc"] = triangleOsc;
  exports["analyser"] = analyser;
  exports["audioWorkletNode"] = audioWorkletNode;
  exports["delay"] = delay;
  exports["gain"] = gain;
  exports["input"] = input;
  exports["microphone"] = microphone;
  exports["recorder"] = recorder;
  exports["speaker"] = speaker;
  exports["pan"] = pan;
  exports["subgraph"] = subgraph;
  exports["tumult"] = tumult;
  exports["waveShaper"] = waveShaper;
  exports["ref"] = ref;
  exports["convertAllpassFrequency"] = convertAllpassFrequency;
  exports["allpassCtor1"] = allpassCtor1;
  exports["convertBandpassFrequency"] = convertBandpassFrequency;
  exports["convertBandpassQ"] = convertBandpassQ;
  exports["bandpassCtor1"] = bandpassCtor1;
  exports["constantCtor2"] = constantCtor2;
  exports["compressorCTor"] = compressorCTor;
  exports["convertHighpassFrequency"] = convertHighpassFrequency;
  exports["convertHighpassQ"] = convertHighpassQ;
  exports["highpassCtor1"] = highpassCtor1;
  exports["highpassCtor2"] = highpassCtor2;
  exports["convertHighshelfFrequency"] = convertHighshelfFrequency;
  exports["highshelfCtor1"] = highshelfCtor1;
  exports["convertLoopBufPlaybackRate"] = convertLoopBufPlaybackRate;
  exports["convertLoopBufStart"] = convertLoopBufStart;
  exports["convertLoopBufEnd"] = convertLoopBufEnd;
  exports["loopBufCtor1"] = loopBufCtor1;
  exports["loopBufCtor2"] = loopBufCtor2;
  exports["convertLowpassFrequency"] = convertLowpassFrequency;
  exports["lowpassCtor1"] = lowpassCtor1;
  exports["convertLowshelfFrequency"] = convertLowshelfFrequency;
  exports["lowshelfCtor1"] = lowshelfCtor1;
  exports["convertNotchFrequency"] = convertNotchFrequency;
  exports["notchCtor1"] = notchCtor1;
  exports["convertPeakingFrequency"] = convertPeakingFrequency;
  exports["peakingCtor1"] = peakingCtor1;
  exports["periodicOscCtor2"] = periodicOscCtor2;
  exports["convertPlayBufOnOff"] = convertPlayBufOnOff;
  exports["convertPlayBufAudioOnOff"] = convertPlayBufAudioOnOff;
  exports["convertPlayBufAPBufferOffset"] = convertPlayBufAPBufferOffset;
  exports["playBufCtor1"] = playBufCtor1;
  exports["playBufCtor2"] = playBufCtor2;
  exports["sawtoothOscCtor2"] = sawtoothOscCtor2;
  exports["convertSinOscFrequency"] = convertSinOscFrequency;
  exports["convertSinOscOnOff"] = convertSinOscOnOff;
  exports["sinOscCtor1"] = sinOscCtor1;
  exports["sinOscCtor2"] = sinOscCtor2;
  exports["squareOscCtor2"] = squareOscCtor2;
  exports["triangleOscCtor2"] = triangleOscCtor2;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Destroy"] = $PS["WAGS.Destroy"] || {};
  var exports = $PS["WAGS.Destroy"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var destroyer = function (dictIsSymbol) {
      return function (dictTypeToSym) {
          return function (dictIsSymbol1) {
              return function (dictCons) {
                  return function (dictRowToList) {
                      return function (dictPointerNotPresentInAnyEdgeList) {
                          return {
                              destroy: function (dictAudioInterpret) {
                                  return function (w) {
                                      var v = WAGS_Control_Types.unsafeUnWAG(w);
                                      var id = Data_Symbol.reflectSymbol(dictIsSymbol)(v.value);
                                      return WAGS_Control_Types.unsafeWAG({
                                          context: {
                                              res: v.context.res,
                                              instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.destroyUnit(dictAudioInterpret)({
                                                  id: id,
                                                  unit: Data_Symbol.reflectSymbol(dictIsSymbol1)(Type_Proxy["Proxy"].value)
                                              }) ])
                                          },
                                          value: Data_Unit.unit
                                      });
                                  };
                              }
                          };
                      };
                  };
              };
          };
      };
  };
  var destroy = function (dict) {
      return dict.destroy;
  };
  var idestroy = function (dictAudioInterpret) {
      return function (dictDestroy) {
          return function (ptr) {
              var $18 = destroy(dictDestroy)(dictAudioInterpret);
              var $19 = Data_Functor.voidRight(WAGS_Control_Types.functorWAG)(ptr);
              return function ($20) {
                  return $18($19($20));
              };
          };
      };
  };
  exports["idestroy"] = idestroy;
  exports["destroyer"] = destroyer;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Disconnect"] = $PS["WAGS.Disconnect"] || {};
  var exports = $PS["WAGS.Disconnect"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var disconnector = function (dictIsSymbol) {
      return function (dictIsSymbol1) {
          return function (dictTypeToSym) {
              return function (dictTypeToSym1) {
                  return function (dictIsSymbol2) {
                      return function (dictIsSymbol3) {
                          return function (dictCons) {
                              return function (dictCons1) {
                                  return function (dictCons2) {
                                      return function (dictLacks) {
                                          return function (dictCons3) {
                                              return {
                                                  disconnect: function (dictAudioInterpret) {
                                                      return function (w) {
                                                          var v = WAGS_Control_Types.unsafeUnWAG(w);
                                                          var toId = Data_Symbol.reflectSymbol(dictIsSymbol1)(v.value.dest);
                                                          var fromId = Data_Symbol.reflectSymbol(dictIsSymbol)(v.value.source);
                                                          return WAGS_Control_Types.unsafeWAG({
                                                              context: {
                                                                  res: v.context.res,
                                                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.context.instructions)([ WAGS_Interpret.disconnectXFromY(dictAudioInterpret)({
                                                                      fromId: fromId,
                                                                      fromUnit: Data_Symbol.reflectSymbol(dictIsSymbol2)(Type_Proxy["Proxy"].value),
                                                                      toId: toId,
                                                                      toUnit: Data_Symbol.reflectSymbol(dictIsSymbol3)(Type_Proxy["Proxy"].value)
                                                                  }) ])
                                                              },
                                                              value: Data_Unit.unit
                                                          });
                                                      };
                                                  }
                                              };
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var disconnect = function (dict) {
      return dict.disconnect;
  };
  var idisconnect = function (dictAudioInterpret) {
      return function (dictDisconnect) {
          return function (ptrs) {
              var $23 = disconnect(dictDisconnect)(dictAudioInterpret);
              var $24 = Data_Functor.voidRight(WAGS_Control_Types.functorWAG)(ptrs);
              return function ($25) {
                  return $23($24($25));
              };
          };
      };
  };
  exports["idisconnect"] = idisconnect;
  exports["disconnector"] = disconnector;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Run"] = $PS["WAGS.Run"] || {};
  var exports = $PS["WAGS.Run"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Comonad_Cofree = $PS["Control.Comonad.Cofree"];
  var Data_DateTime_Instant = $PS["Data.DateTime.Instant"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Effect_Timer = $PS["Effect.Timer"];
  var FRP_Behavior = $PS["FRP.Behavior"];
  var FRP_Behavior_Time = $PS["FRP.Behavior.Time"];
  var FRP_Event = $PS["FRP.Event"];
  var FRP_Event_Time = $PS["FRP.Event.Time"];
  var Record = $PS["Record"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var workWithAnalysersNil = {
      makeAnalyserCallbacks: function (v) {
          return function (v1) {
              return {};
          };
      }
  };
  var makeAnalyserRefs = function (dict) {
      return dict.makeAnalyserRefs;
  };
  var makeAnalyserCallbacks = function (dict) {
      return dict.makeAnalyserCallbacks;
  };
  var workWithAnalysersCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictCons1) {
              return function (dictLacks) {
                  return function (dictLacks1) {
                      return function (dictMakeAnalyserCallbacks) {
                          return {
                              makeAnalyserCallbacks: function (v) {
                                  return function (refs) {
                                      var ref = Record.get(dictIsSymbol)()(Type_Proxy["Proxy"].value)(refs);
                                      var f = function (node) {
                                          return function __do() {
                                              Effect_Ref.write(new Data_Maybe.Just(node))(ref)();
                                              return Effect_Ref.write(Data_Maybe.Nothing.value)(ref);
                                          };
                                      };
                                      return Record.insert(dictIsSymbol)()()(Type_Proxy["Proxy"].value)(f)(makeAnalyserCallbacks(dictMakeAnalyserCallbacks)(Type_Proxy["Proxy"].value)(refs));
                                  };
                              }
                          };
                      };
                  };
              };
          };
      };
  };
  var getAnalysersNil = {
      getAnalysers: function (v) {
          return function (v1) {
              return Control_Applicative.pure(Effect.applicativeEffect)({});
          };
      }
  };
  var getAnalysers = function (dict) {
      return dict.getAnalysers;
  };
  var getAnalysersCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictCons1) {
              return function (dictLacks) {
                  return function (dictLacks1) {
                      return function (dictAnalysers) {
                          return {
                              getAnalysers: function (v) {
                                  return function (refs) {
                                      return function __do() {
                                          var mbe = Effect_Ref.read(Record.get(dictIsSymbol)()(Type_Proxy["Proxy"].value)(refs))();
                                          return Data_Functor.map(Effect.functorEffect)(Record.insert(dictIsSymbol)()()(Type_Proxy["Proxy"].value)(mbe))(getAnalysers(dictAnalysers)(Type_Proxy["Proxy"].value)(refs))();
                                      };
                                  };
                              }
                          };
                      };
                  };
              };
          };
      };
  };
  var run = function (dictRowToList) {
      return function (dictAnalyserRefs) {
          return function (dictMakeAnalyserCallbacks) {
              return function (dictAnalysers) {
                  return function (dictMonoid) {
                      return function (trigger) {
                          return function (inWorld) {
                              return function (engineInfo) {
                                  return function (ffiSnapshot) {
                                      return function (scene) {
                                          return FRP_Event.makeEvent(function (reporter) {
                                              return function __do() {
                                                  var analyserRefs = makeAnalyserRefs(dictAnalyserRefs)(Type_Proxy["Proxy"].value)();
                                                  var currentTimeoutCanceler = Effect_Ref["new"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))();
                                                  var currentClockInfo = Effect_Ref["new"]({
                                                      writeHeadStart: Data_Maybe.Nothing.value,
                                                      audioClockStart: Data_Maybe.Nothing.value
                                                  })();
                                                  var currentScene = Effect_Ref["new"](scene)();
                                                  var currentEasingAlg = Effect_Ref["new"](engineInfo.easingAlgorithm)();
                                                  var newWorld = Control_Apply.apply(FRP_Behavior.applyABehavior(FRP_Event.functorEvent))(Data_Functor.map(FRP_Behavior.functorABehavior(FRP_Event.functorEvent))(function (v) {
                                                      return function (v1) {
                                                          return {
                                                              world: v,
                                                              sysTime: v1
                                                          };
                                                      };
                                                  })(inWorld))(Data_Functor.map(FRP_Behavior.functorABehavior(FRP_Event.functorEvent))(Data_DateTime_Instant.unInstant)(FRP_Behavior_Time.instant));
                                                  var eventAndEnv = FRP_Behavior.sampleBy(FRP_Event.eventIsEvent)(function (v) {
                                                      return function (b) {
                                                          return {
                                                              trigger: new Data_Maybe.Just(b),
                                                              world: v.world,
                                                              sysTime: v.sysTime
                                                          };
                                                      };
                                                  })(newWorld)(trigger);
                                                  var analyserCallbacks = makeAnalyserCallbacks(dictMakeAnalyserCallbacks)(Type_Proxy["Proxy"].value)(analyserRefs);
                                                  var runInternal = function (fromEvents) {
                                                      return function (world$prime) {
                                                          return function __do() {
                                                              var clockInfo = Effect_Ref.read(currentClockInfo)();
                                                              var easingAlgNow = Effect_Ref.read(currentEasingAlg)();
                                                              var sceneNow = Effect_Ref.read(currentScene)();
                                                              var headroom = Control_Comonad_Cofree.head(easingAlgNow);
                                                              var headroomInSeconds = Data_Int.toNumber(headroom) / 1000.0;
                                                              var ctx = WAGS_Interpret.contextFromSnapshot(ffiSnapshot);
                                                              var audioClockPriorToComputation = WAGS_Interpret.getAudioClockTime(ctx)();
                                                              var audioClockStart = Data_Maybe.fromMaybe(audioClockPriorToComputation)(clockInfo.audioClockStart);
                                                              var time = audioClockPriorToComputation - audioClockStart;
                                                              var fromScene = WAGS_Control_Types.oneFrame(sceneNow)({
                                                                  world: fromEvents.world,
                                                                  trigger: fromEvents.trigger,
                                                                  sysTime: fromEvents.sysTime,
                                                                  time: time,
                                                                  headroom: headroom,
                                                                  headroomInSeconds: headroomInSeconds,
                                                                  analyserCallbacks: analyserCallbacks
                                                              });
                                                              var audioClockAfterComputation = WAGS_Interpret.getAudioClockTime(ctx)();
                                                              var writeHeadStart = Data_Maybe.fromMaybe(audioClockAfterComputation + headroomInSeconds)(clockInfo.writeHeadStart);
                                                              WAGS_Interpret.advanceWriteHead(ffiSnapshot)(writeHeadStart + time)();
                                                              var applied = Data_Functor.map(Data_Functor.functorArray)(Data_Function.applyFlipped(new Data_Tuple.Tuple(Data_Unit.unit, ffiSnapshot)))(fromScene.instructions);
                                                              WAGS_Interpret.renderAudio(Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.snd)(applied))();
                                                              var remainingTimeInSeconds = (audioClockPriorToComputation + headroomInSeconds) - audioClockAfterComputation;
                                                              var remainingTime = Data_Int.floor(1000.0 * remainingTimeInSeconds);
                                                              Effect_Ref.write(Control_Comonad_Cofree.tail(easingAlgNow)(remainingTime))(currentEasingAlg)();
                                                              Effect_Ref.write(fromScene.next)(currentScene)();
                                                              var analysers = getAnalysers(dictAnalysers)(Type_Proxy["Proxy"].value)(analyserRefs)();
                                                              reporter({
                                                                  instructions: Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.fst)(applied),
                                                                  res: fromScene.res,
                                                                  remainingTimeInSeconds: remainingTimeInSeconds,
                                                                  remainingTime: remainingTime,
                                                                  headroom: headroom,
                                                                  headroomInSeconds: headroomInSeconds,
                                                                  analysers: analysers
                                                              })();
                                                              Effect_Ref.write({
                                                                  audioClockStart: new Data_Maybe.Just(audioClockStart),
                                                                  writeHeadStart: new Data_Maybe.Just(writeHeadStart)
                                                              })(currentClockInfo)();
                                                              var canceler = FRP_Event.subscribe(FRP_Behavior.sample_(FRP_Event.eventIsEvent)(world$prime)(FRP_Event_Time.delay(Data_Ord.max(Data_Ord.ordInt)(1)(remainingTime))(Control_Applicative.pure(FRP_Event.applicativeEvent)(Data_Unit.unit))))(function (v) {
                                                                  return runInternal({
                                                                      world: v.world,
                                                                      sysTime: v.sysTime,
                                                                      trigger: Data_Maybe.Nothing.value
                                                                  })(world$prime);
                                                              })();
                                                              return Effect_Ref.write(canceler)(currentTimeoutCanceler)();
                                                          };
                                                      };
                                                  };
                                                  var unsubscribe = FRP_Event.subscribe(eventAndEnv)(function (ee) {
                                                      return function __do() {
                                                          var cancelTimeout = Effect_Ref.read(currentTimeoutCanceler)();
                                                          cancelTimeout();
                                                          return runInternal(ee)(newWorld)();
                                                      };
                                                  })();
                                                  return function __do() {
                                                      var cancelTimeout = Effect_Ref.read(currentTimeoutCanceler)();
                                                      cancelTimeout();
                                                      return unsubscribe();
                                                  };
                                              };
                                          });
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var runNoLoop = function (dictRowToList) {
      return function (dictAnalyserRefs) {
          return function (dictMakeAnalyserCallbacks) {
              return function (dictAnalysers) {
                  return function (dictMonoid) {
                      return function (trigger) {
                          return function (inWorld) {
                              return function (v) {
                                  return function (audioInfo) {
                                      return function (scene) {
                                          return FRP_Event.makeEvent(function (reporter) {
                                              return function __do() {
                                                  var analyserRefs = makeAnalyserRefs(dictAnalyserRefs)(Type_Proxy["Proxy"].value)();
                                                  var currentClockInfo = Effect_Ref["new"]({
                                                      writeHeadStart: Data_Maybe.Nothing.value,
                                                      audioClockStart: Data_Maybe.Nothing.value
                                                  })();
                                                  var currentScene = Effect_Ref["new"](scene)();
                                                  var newWorld = Control_Apply.apply(FRP_Behavior.applyABehavior(FRP_Event.functorEvent))(Data_Functor.map(FRP_Behavior.functorABehavior(FRP_Event.functorEvent))(function (v1) {
                                                      return function (v2) {
                                                          return {
                                                              world: v1,
                                                              sysTime: v2
                                                          };
                                                      };
                                                  })(inWorld))(Data_Functor.map(FRP_Behavior.functorABehavior(FRP_Event.functorEvent))(Data_DateTime_Instant.unInstant)(FRP_Behavior_Time.instant));
                                                  var eventAndEnv = FRP_Behavior.sampleBy(FRP_Event.eventIsEvent)(function (v1) {
                                                      return function (b) {
                                                          return {
                                                              trigger: b,
                                                              world: v1.world,
                                                              sysTime: v1.sysTime
                                                          };
                                                      };
                                                  })(newWorld)(trigger);
                                                  var analyserCallbacks = makeAnalyserCallbacks(dictMakeAnalyserCallbacks)(Type_Proxy["Proxy"].value)(analyserRefs);
                                                  var unsubscribe = FRP_Event.subscribe(eventAndEnv)(function (ee) {
                                                      return function __do() {
                                                          var sceneNow = Effect_Ref.read(currentScene)();
                                                          var ctx = WAGS_Interpret.contextFromSnapshot(audioInfo);
                                                          var audioClockPriorToComputation = WAGS_Interpret.getAudioClockTime(ctx)();
                                                          var clockInfo = Effect_Ref.read(currentClockInfo)();
                                                          var audioClockStart = Data_Maybe.fromMaybe(audioClockPriorToComputation)(clockInfo.audioClockStart);
                                                          var time = audioClockPriorToComputation - audioClockStart;
                                                          var fromScene = WAGS_Control_Types.oneFrame(sceneNow)({
                                                              world: ee.world,
                                                              trigger: ee.trigger,
                                                              sysTime: ee.sysTime,
                                                              time: time,
                                                              analyserCallbacks: analyserCallbacks
                                                          });
                                                          var audioClockAfterComputation = WAGS_Interpret.getAudioClockTime(ctx)();
                                                          var writeHeadStart = Data_Maybe.fromMaybe(audioClockAfterComputation + 2.0e-2)(clockInfo.writeHeadStart);
                                                          WAGS_Interpret.advanceWriteHead(audioInfo)(writeHeadStart + time)();
                                                          var applied = Data_Functor.map(Data_Functor.functorArray)(Data_Function.applyFlipped(new Data_Tuple.Tuple(Data_Unit.unit, audioInfo)))(fromScene.instructions);
                                                          WAGS_Interpret.renderAudio(Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.snd)(applied))();
                                                          Effect_Ref.write(fromScene.next)(currentScene)();
                                                          var analysers = getAnalysers(dictAnalysers)(Type_Proxy["Proxy"].value)(analyserRefs)();
                                                          reporter({
                                                              instructions: Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.fst)(applied),
                                                              res: fromScene.res,
                                                              analysers: analysers
                                                          })();
                                                          return Effect_Ref.write({
                                                              audioClockStart: new Data_Maybe.Just(audioClockStart),
                                                              writeHeadStart: new Data_Maybe.Just(writeHeadStart)
                                                          })(currentClockInfo)();
                                                      };
                                                  })();
                                                  return unsubscribe;
                                              };
                                          });
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var bufferToList = function (timeToCollect) {
      return function (incomingEvent) {
          var timed = FRP_Event_Time.withTime(incomingEvent);
          return FRP_Event.makeEvent(function (k) {
              return function __do() {
                  var currentTimeoutId = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                  var currentEventList = Effect_Ref["new"](Data_List_Types.Nil.value)();
                  var unsub = FRP_Event.subscribe(timed)(function (a) {
                      return function __do() {
                          Effect_Ref.modify_(Data_List_Types.Cons.create(a))(currentEventList)();
                          var inTimeout = Effect_Ref.read(currentTimeoutId)();
                          return Control_Applicative.when(Effect.applicativeEffect)(Data_Maybe.isNothing(inTimeout))(Control_Bind.bindFlipped(Effect.bindEffect)((function () {
                              var $54 = Data_Function.flip(Effect_Ref.write)(currentTimeoutId);
                              return function ($55) {
                                  return $54(Data_Maybe.Just.create($55));
                              };
                          })())(Effect_Timer.setTimeout(timeToCollect)(function __do() {
                              var cil = Effect_Ref.read(currentEventList)();
                              Effect_Ref.write(Data_List_Types.Nil.value)(currentEventList)();
                              Effect_Ref.write(Data_Maybe.Nothing.value)(currentTimeoutId)();
                              return k(cil)();
                          })))();
                      };
                  })();
                  return function __do() {
                      Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(currentTimeoutId))(Data_Function.flip(Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe))(Effect_Timer.clearTimeout))();
                      return unsub();
                  };
              };
          });
      };
  };
  var analyserRefsNil = {
      makeAnalyserRefs: function (v) {
          return Control_Applicative.pure(Effect.applicativeEffect)({});
      }
  };
  var analyserRefsCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictLacks) {
              return function (dictAnalyserRefs) {
                  return {
                      makeAnalyserRefs: function (v) {
                          return function __do() {
                              var ref = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                              return Data_Functor.map(Effect.functorEffect)(Record.insert(dictIsSymbol)()()(Type_Proxy["Proxy"].value)(ref))(makeAnalyserRefs(dictAnalyserRefs)(Type_Proxy["Proxy"].value))();
                          };
                      }
                  };
              };
          };
      };
  };
  exports["bufferToList"] = bufferToList;
  exports["run"] = run;
  exports["runNoLoop"] = runNoLoop;
  exports["getAnalysersNil"] = getAnalysersNil;
  exports["getAnalysersCons"] = getAnalysersCons;
  exports["analyserRefsNil"] = analyserRefsNil;
  exports["analyserRefsCons"] = analyserRefsCons;
  exports["workWithAnalysersNil"] = workWithAnalysersNil;
  exports["workWithAnalysersCons"] = workWithAnalysersCons;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.AtariSpeaks"] = $PS["WAGS.Example.AtariSpeaks"] || {};
  var exports = $PS["WAGS.Example.AtariSpeaks"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Comonad_Cofree = $PS["Control.Comonad.Cofree"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Promise = $PS["Control.Promise"];
  var ConvertableOptions = $PS["ConvertableOptions"];
  var Data_ArrayBuffer_Typed = $PS["Data.ArrayBuffer.Typed"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Functor_Indexed = $PS["Data.Functor.Indexed"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_String_Utils = $PS["Data.String.Utils"];
  var Data_UInt = $PS["Data.UInt"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var FRP_Behavior = $PS["FRP.Behavior"];
  var FRP_Event = $PS["FRP.Event"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_Subscription = $PS["Halogen.Subscription"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions_Graph = $PS["WAGS.Control.Functions.Graph"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Run = $PS["WAGS.Run"];                
  var StartAudio = (function () {
      function StartAudio() {

      };
      StartAudio.value = new StartAudio();
      return StartAudio;
  })();
  var StopAudio = (function () {
      function StopAudio() {

      };
      StopAudio.value = new StopAudio();
      return StopAudio;
  })();
  var Freqz = (function () {
      function Freqz(value0) {
          this.value0 = value0;
      };
      Freqz.create = function (value0) {
          return new Freqz(value0);
      };
      return Freqz;
  })();
  var vol = 1.4;
  var scene = function (v) {
      var rad = $$Math.pi * v.time;
      return WAGS_Create_Optionals.speaker({
          analyse: WAGS_Create_Optionals.analyser(v.analyserCallbacks.myAnalyser)({
              analysed: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0)({
                  gain0: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(0.3 * vol)({
                      loop0: WAGS_Create_Optionals.loopBuf(WAGS_Create_Optionals.loopBufCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertLoopBufPlaybackRate(WAGS_Graph_Paramable.paramableNumber))()()()({
                          reflectSymbol: function () {
                              return "playbackRate";
                          }
                      })))(ConvertableOptions.defaultsRecord()())))({
                          playbackRate: 1.0 + 0.1 * $$Math.sin(rad)
                      })(v.world.atar)
                  }),
                  gain1: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(0.15 * vol)({
                      loop1: WAGS_Create_Optionals.loopBuf(WAGS_Create_Optionals.loopBufCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertLoopBufPlaybackRate(WAGS_Graph_Paramable.paramableNumber))()()()({
                          reflectSymbol: function () {
                              return "playbackRate";
                          }
                      }))(WAGS_Create_Optionals.convertLoopBufStart)()()()({
                          reflectSymbol: function () {
                              return "loopStart";
                          }
                      }))(WAGS_Create_Optionals.convertLoopBufEnd)()()()({
                          reflectSymbol: function () {
                              return "loopEnd";
                          }
                      })))(ConvertableOptions.defaultsRecord()())))({
                          playbackRate: 1.5 + 0.1 * $$Math.sin(2.0 * rad),
                          loopStart: 0.1 + 0.1 * $$Math.sin(rad),
                          loopEnd: 0.5 + 0.25 * $$Math.sin(2.0 * rad)
                      })(v.world.atar)
                  }),
                  gain2: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(0.3 * vol)({
                      loop2: WAGS_Create_Optionals.loopBuf(WAGS_Create_Optionals.loopBufCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertLoopBufPlaybackRate(WAGS_Graph_Paramable.paramableNumber))()()()({
                          reflectSymbol: function () {
                              return "playbackRate";
                          }
                      })))(ConvertableOptions.defaultsRecord()())))({
                          playbackRate: 0.25
                      })(v.world.atar)
                  })
              })
          })
      });
  };
  var render = function (v) {
      return Halogen_HTML_Elements.div_(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Elements.h1_([ Halogen_HTML_Core.text("Atari speaks") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v1) {
          return StartAudio.value;
      }) ])([ Halogen_HTML_Core.text("Start audio") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v1) {
          return StopAudio.value;
      }) ])([ Halogen_HTML_Core.text("Stop audio") ]) ])(Data_Functor.map(Data_Functor.functorArray)(function (freq) {
          return Halogen_HTML_Elements.p([  ])([ Halogen_HTML_Core.text(freq) ]);
      })(v.freqz)));
  };
  var piece = WAGS_Control_Functions_Graph.istart()(Data_Monoid.monoidUnit)(WAGS_Interpret.mixedAudioInterpret)((function () {
      var $47 = WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSpeaker()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "analyse";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createAnalyser({
          reflectSymbol: function () {
              return "analyse";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "analysed";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "analysed";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain0";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain0";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "loop0";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createLoopBuf({
          reflectSymbol: function () {
              return "loop0";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain1";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain1";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "loop1";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createLoopBuf({
          reflectSymbol: function () {
              return "loop1";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain2";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain2";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "loop2";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createLoopBuf({
          reflectSymbol: function () {
              return "loop2";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))))(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "analyse";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TAllpass";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "analysed";
          }
      })({
          reflectSymbol: function () {
              return "analyse";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TAllpass";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain0";
          }
      })({
          reflectSymbol: function () {
              return "analysed";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain1";
          }
      })({
          reflectSymbol: function () {
              return "analysed";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain2";
          }
      })({
          reflectSymbol: function () {
              return "analysed";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "loop0";
          }
      })({
          reflectSymbol: function () {
              return "gain0";
          }
      })()()({
          reflectSymbol: function () {
              return "TLoopBuf";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "loop1";
          }
      })({
          reflectSymbol: function () {
              return "gain1";
          }
      })()()({
          reflectSymbol: function () {
              return "TLoopBuf";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "loop2";
          }
      })({
          reflectSymbol: function () {
              return "gain2";
          }
      })()()({
          reflectSymbol: function () {
              return "TLoopBuf";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))));
      return function ($48) {
          return $47(scene($48));
      };
  })())(WAGS_Control_Functions_Graph.iloop(Data_Monoid.monoidUnit)()(WAGS_Interpret.mixedAudioInterpret)(function (e) {
      return function (v) {
          return Data_Functor_Indexed.ivoid(WAGS_Control_Indexed.ixFunctorIxWAG)(WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "speaker";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeSpeaker())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "analyse";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeAnalyser({
              reflectSymbol: function () {
                  return "analyse";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "analysed";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeGain({
              reflectSymbol: function () {
                  return "analysed";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "gain0";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeGain({
              reflectSymbol: function () {
                  return "gain0";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "loop0";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeLoopBuf({
              reflectSymbol: function () {
                  return "loop0";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "gain1";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeGain({
              reflectSymbol: function () {
                  return "gain1";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "loop1";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeLoopBuf({
              reflectSymbol: function () {
                  return "loop1";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "gain2";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeGain({
              reflectSymbol: function () {
                  return "gain2";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "loop2";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeLoopBuf({
              reflectSymbol: function () {
                  return "loop2";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLNil)))))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLNil))))(scene(e)));
      };
  }));
  var initialState = function (v) {
      return {
          unsubscribe: Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit),
          audioCtx: Data_Maybe.Nothing.value,
          unsubscribeFromHalogen: Data_Maybe.Nothing.value,
          freqz: [  ]
      };
  };
  var easingAlgorithm = (function () {
      var fOf = function (initialTime) {
          return Control_Comonad_Cofree.mkCofree(initialTime)(function (adj) {
              return fOf(Data_Ord.max(Data_Ord.ordInt)(20)(initialTime - adj | 0));
          });
      };
      return fOf(20);
  })();
  var handleAction = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof StartAudio) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Halogen_Subscription.create))(function (v1) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.subscribe(v1.emitter))(function (unsubscribeFromHalogen) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.context))(function (audioCtx) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Control_Bind.bind(Effect.bindEffect)(WAGS_Interpret.contextState(audioCtx))(Effect_Console.info)))(function () {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Control_Promise.toAffE(WAGS_Interpret.contextResume(audioCtx))))(function () {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.makeFFIAudioSnapshot(audioCtx)))(function (ffiAudio) {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(WAGS_Interpret.decodeAudioDataFromUri(audioCtx)("https://freesound.org/data/previews/100/100981_1234256-lq.mp3")))(function (atar) {
                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(FRP_Event.subscribe(WAGS_Run.run()(WAGS_Run.analyserRefsCons({
                                                  reflectSymbol: function () {
                                                      return "myAnalyser";
                                                  }
                                              })()()(WAGS_Run.analyserRefsNil))(WAGS_Run.workWithAnalysersCons({
                                                  reflectSymbol: function () {
                                                      return "myAnalyser";
                                                  }
                                              })()()()()(WAGS_Run.workWithAnalysersNil))(WAGS_Run.getAnalysersCons({
                                                  reflectSymbol: function () {
                                                      return "myAnalyser";
                                                  }
                                              })()()()()(WAGS_Run.getAnalysersNil))(Data_Monoid.monoidUnit)(Control_Applicative.pure(FRP_Event.applicativeEvent)(Data_Unit.unit))(Control_Applicative.pure(FRP_Behavior.applicativeABehavior(FRP_Event.functorEvent))({
                                                  atar: atar
                                              }))({
                                                  easingAlgorithm: easingAlgorithm
                                              })(ffiAudio)(piece))(function (v2) {
                                                  return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v2.analysers.myAnalyser)(function (myAnalyser$prime) {
                                                      return function __do() {
                                                          var frequencyData = WAGS_Interpret.getByteFrequencyData(myAnalyser$prime)();
                                                          var arr = Data_ArrayBuffer_Typed.toArray(Data_ArrayBuffer_Typed.typedArrayUint8)(frequencyData)();
                                                          Halogen_Subscription.notify(v1.listener)(new Freqz(Data_Functor.map(Data_Functor.functorArray)(function (i) {
                                                              return Data_String_Utils.unsafeRepeat(Data_UInt.toInt(i) + 1 | 0)(">");
                                                          })(arr)))();
                                                          return Data_Unit.unit;
                                                      };
                                                  });
                                              })))(function (unsubscribe) {
                                                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                                      var $31 = {};
                                                      for (var $32 in v2) {
                                                          if ({}.hasOwnProperty.call(v2, $32)) {
                                                              $31[$32] = v2[$32];
                                                          };
                                                      };
                                                      $31.unsubscribe = unsubscribe;
                                                      $31.unsubscribeFromHalogen = new Data_Maybe.Just(unsubscribeFromHalogen);
                                                      $31.audioCtx = new Data_Maybe.Just(audioCtx);
                                                      return $31;
                                                  });
                                              });
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              };
              if (v instanceof Freqz) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $36 = {};
                      for (var $37 in v1) {
                          if ({}.hasOwnProperty.call(v1, $37)) {
                              $36[$37] = v1[$37];
                          };
                      };
                      $36.freqz = v.value0;
                      return $36;
                  });
              };
              if (v instanceof StopAudio) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(v1.unsubscribe))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v1.unsubscribeFromHalogen)(Halogen_Query_HalogenM.unsubscribe))(function () {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v1.audioCtx)((function () {
                                  var $49 = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()));
                                  return function ($50) {
                                      return $49(WAGS_Interpret.close($50));
                                  };
                              })()))(function () {
                                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                      var $41 = {};
                                      for (var $42 in v2) {
                                          if ({}.hasOwnProperty.call(v2, $42)) {
                                              $41[$42] = v2[$42];
                                          };
                                      };
                                      $41.unsubscribe = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                                      $41.audioCtx = Data_Maybe.Nothing.value;
                                      return $41;
                                  });
                              });
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at WAGS.Example.AtariSpeaks (line 161, column 16 - line 192, column 64): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render,
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictMonadAff.MonadEffect0())(dictMonadAff),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: Halogen_Component.defaultEval.receive,
                  initialize: Halogen_Component.defaultEval.initialize,
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.DrumMachine"] = $PS["WAGS.Example.DrumMachine"] || {};
  var exports = $PS["WAGS.Example.DrumMachine"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Comonad_Cofree = $PS["Control.Comonad.Cofree"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var ConvertableOptions = $PS["ConvertableOptions"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Ref = $PS["Effect.Ref"];
  var FRP_Behavior = $PS["FRP.Behavior"];
  var FRP_Event = $PS["FRP.Event"];
  var FRP_Event_Time = $PS["FRP.Event.Time"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions_Graph = $PS["WAGS.Control.Functions.Graph"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Run = $PS["WAGS.Run"];                
  var StartAudio = (function () {
      function StartAudio() {

      };
      StartAudio.value = new StartAudio();
      return StartAudio;
  })();
  var StopAudio = (function () {
      function StopAudio() {

      };
      StopAudio.value = new StopAudio();
      return StopAudio;
  })();
  var render = function (v) {
      return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.h1_([ Halogen_HTML_Core.text("Drum Machine") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v1) {
          return StartAudio.value;
      }) ])([ Halogen_HTML_Core.text("Start audio") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v1) {
          return StopAudio.value;
      }) ])([ Halogen_HTML_Core.text("Stop audio") ]) ]);
  };
  var initialState = function (v) {
      return {
          unsubscribe: Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit),
          audioCtx: Data_Maybe.Nothing.value
      };
  };
  var gap = 0.27;
  var scene = function (shouldReset) {
      return function (v) {
          var tgFloor = Data_Int.floor(v.time / gap);
          return WAGS_Create_Optionals.speaker({
              gain0: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0)({
                  play0: WAGS_Create_Optionals.playBuf(WAGS_Create_Optionals.playBufCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertPlayBufAudioOnOff)()()()({
                      reflectSymbol: function () {
                          return "onOff";
                      }
                  })))(ConvertableOptions.defaultsRecord()())))({
                      onOff: (function () {
                          var $25 = !shouldReset;
                          if ($25) {
                              return WAGS_Graph_Paramable.onOffIze(WAGS_Graph_Paramable.onOffIzeOnOff)(WAGS_Graph_Parameter["_on"]);
                          };
                          return WAGS_Graph_Parameter.ff(WAGS_Graph_Parameter.lensTimeAudioOnOff)(Data_Int.toNumber(tgFloor + 1 | 0) * gap - v.time)(WAGS_Graph_Paramable.onOffIze(WAGS_Graph_Paramable.onOffIzeOnOff)(WAGS_Graph_Parameter["_offOn"]));
                      })()
                  })(v.world.snare)
              })
          });
      };
  };
  var piece = WAGS_Control_Functions_Graph.istart()(Data_Monoid.monoidUnit)(WAGS_Interpret.mixedAudioInterpret)(function (e) {
      return Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSpeaker()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain0";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain0";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "play0";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createPlayBuf({
          reflectSymbol: function () {
              return "play0";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain0";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "play0";
          }
      })({
          reflectSymbol: function () {
              return "gain0";
          }
      })()()({
          reflectSymbol: function () {
              return "TPlayBuf";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(scene(false)(e)))(0.0);
  })(WAGS_Control_Functions_Graph.iloop(Data_Monoid.monoidUnit)()(WAGS_Interpret.mixedAudioInterpret)(function (v) {
      return function (lastCrossing) {
          var tgFloor = Data_Int.floor(v.time / gap);
          var crossingDivide = tgFloor !== Data_Int.floor((v.time + 6.0e-2) / gap);
          var crossDiff = v.time - lastCrossing;
          var shouldReset = crossingDivide && crossDiff > 0.2;
          return Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "speaker";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeSpeaker())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "gain0";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeGain({
              reflectSymbol: function () {
                  return "gain0";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "play0";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changePlayBuf({
              reflectSymbol: function () {
                  return "play0";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLNil))))(scene(shouldReset)(v)))((function () {
              if (shouldReset) {
                  return v.time;
              };
              return lastCrossing;
          })());
      };
  }));
  var easingAlgorithm = (function () {
      var fOf = function (initialTime) {
          return Control_Comonad_Cofree.mkCofree(initialTime)(function (adj) {
              return fOf(Data_Ord.max(Data_Ord.ordInt)(20)(initialTime - adj | 0));
          });
      };
      return fOf(20);
  })();
  var drumCf = Control_Comonad_Cofree.deferCofree(function (v) {
      return new Data_Tuple.Tuple("https://freesound.org/data/previews/321/321132_1337335-hq.mp3", Control_Comonad_Cofree.deferCofree(function (v1) {
          return new Data_Tuple.Tuple("https://freesound.org/data/previews/331/331589_5820980-hq.mp3", Control_Comonad_Cofree.deferCofree(function (v2) {
              return new Data_Tuple.Tuple("https://freesound.org/data/previews/84/84478_377011-hq.mp3", Control_Comonad_Cofree.deferCofree(function (v3) {
                  return new Data_Tuple.Tuple("https://freesound.org/data/previews/270/270156_1125482-hq.mp3", Control_Comonad_Cofree.deferCofree(function (v4) {
                      return new Data_Tuple.Tuple("https://freesound.org/data/previews/207/207956_19852-hq.mp3", drumCf);
                  }));
              }));
          }));
      }));
  });
  var handleAction = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof StartAudio) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.context))(function (audioCtx) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.makeFFIAudioSnapshot(audioCtx)))(function (ffiAudio) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(WAGS_Interpret.decodeAudioDataFromUri(audioCtx)(Control_Comonad_Cofree.head(drumCf))))(function (ibuf) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Ref["new"](Data_Newtype.unwrap()(Control_Comonad_Cofree.tail(drumCf)))))(function (rf) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Ref["new"](ibuf)))(function (bf) {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(FRP_Event.subscribe(FRP_Event_Time.interval(1000))(function (v1) {
                                          return function __do() {
                                              var cf = Effect_Ref.read(rf)();
                                              Effect_Ref.write(Data_Newtype.unwrap()(Control_Comonad_Cofree.tail(cf)))(rf)();
                                              return Effect_Aff.launchAff_(Control_Bind.bind(Effect_Aff.bindAff)(WAGS_Interpret.decodeAudioDataFromUri(audioCtx)(Control_Comonad_Cofree.head(cf)))(function (buf) {
                                                  return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write(buf)(bf));
                                              }))();
                                          };
                                      })))(function (ivlsub) {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(FRP_Event.subscribe(WAGS_Run.run()(WAGS_Run.analyserRefsNil)(WAGS_Run.workWithAnalysersNil)(WAGS_Run.getAnalysersNil)(Data_Monoid.monoidUnit)(Control_Applicative.pure(FRP_Event.applicativeEvent)(Data_Unit.unit))(Data_Functor.map(FRP_Behavior.functorABehavior(FRP_Event.functorEvent))(function (v1) {
                                              return {
                                                  snare: v1
                                              };
                                          })(FRP_Behavior.behavior(function (eAToB) {
                                              return FRP_Event.makeEvent(function (fB) {
                                                  return FRP_Event.subscribe(eAToB)(function (aToB) {
                                                      return function __do() {
                                                          var $41 = Effect_Ref.read(bf)();
                                                          return fB(aToB($41))();
                                                      };
                                                  });
                                              });
                                          })))({
                                              easingAlgorithm: easingAlgorithm
                                          })(ffiAudio)(piece))(function (v1) {
                                              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                                          })))(function (unsubscribe) {
                                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                                  var $32 = {};
                                                  for (var $33 in v1) {
                                                      if ({}.hasOwnProperty.call(v1, $33)) {
                                                          $32[$33] = v1[$33];
                                                      };
                                                  };
                                                  $32.unsubscribe = function __do() {
                                                      unsubscribe();
                                                      return ivlsub();
                                                  };
                                                  $32.audioCtx = new Data_Maybe.Just(audioCtx);
                                                  return $32;
                                              });
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              };
              if (v instanceof StopAudio) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(v1.unsubscribe))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v1.audioCtx)((function () {
                              var $42 = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()));
                              return function ($43) {
                                  return $42(WAGS_Interpret.close($43));
                              };
                          })()))(function () {
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                  var $36 = {};
                                  for (var $37 in v2) {
                                      if ({}.hasOwnProperty.call(v2, $37)) {
                                          $36[$37] = v2[$37];
                                      };
                                  };
                                  $36.unsubscribe = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                                  $36.audioCtx = Data_Maybe.Nothing.value;
                                  return $36;
                              });
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at WAGS.Example.DrumMachine (line 161, column 16 - line 205, column 64): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render,
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictMonadAff.MonadEffect0())(dictMonadAff),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: Halogen_Component.defaultEval.receive,
                  initialize: Halogen_Component.defaultEval.initialize,
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.HelloWorld"] = $PS["WAGS.Example.HelloWorld"] || {};
  var exports = $PS["WAGS.Example.HelloWorld"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Comonad_Cofree = $PS["Control.Comonad.Cofree"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor_Indexed = $PS["Data.Functor.Indexed"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var FRP_Behavior = $PS["FRP.Behavior"];
  var FRP_Event = $PS["FRP.Event"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions_Graph = $PS["WAGS.Control.Functions.Graph"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Run = $PS["WAGS.Run"];                
  var StartAudio = (function () {
      function StartAudio() {

      };
      StartAudio.value = new StartAudio();
      return StartAudio;
  })();
  var StopAudio = (function () {
      function StopAudio() {

      };
      StopAudio.value = new StopAudio();
      return StopAudio;
  })();
  var scene = function (time) {
      var rad = $$Math.pi * time;
      return WAGS_Create_Optionals.speaker({
          gain0: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(0.1)({
              sin0: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(440.0 + 10.0 * $$Math.sin(2.3 * rad))
          }),
          gain1: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(0.25)({
              sin1: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(235.0 + 10.0 * $$Math.sin(1.7 * rad))
          }),
          gain2: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(0.2)({
              sin2: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(337.0 + 10.0 * $$Math.sin(rad))
          }),
          gain3: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(0.1)({
              sin3: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(530.0 + 19.0 * (5.0 * $$Math.sin(rad)))
          })
      });
  };
  var render = function (v) {
      return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.h1_([ Halogen_HTML_Core.text("Hello world") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v1) {
          return StartAudio.value;
      }) ])([ Halogen_HTML_Core.text("Start audio") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v1) {
          return StopAudio.value;
      }) ])([ Halogen_HTML_Core.text("Stop audio") ]) ]);
  };
  var piece = WAGS_Control_Functions_Graph.istart()(Data_Monoid.monoidUnit)(WAGS_Interpret.mixedAudioInterpret)((function () {
      var $29 = WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSpeaker()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain0";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain0";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin0";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin0";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain1";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain1";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin1";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin1";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain2";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain2";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin2";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin2";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain3";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain3";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin3";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin3";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil)))))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain0";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain1";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain2";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain3";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil)))))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin0";
          }
      })({
          reflectSymbol: function () {
              return "gain0";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin1";
          }
      })({
          reflectSymbol: function () {
              return "gain1";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin2";
          }
      })({
          reflectSymbol: function () {
              return "gain2";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin3";
          }
      })({
          reflectSymbol: function () {
              return "gain3";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil)))))(WAGS_Create.connectAfterCreateNil))));
      var $30 = Data_Newtype.unwrap();
      return function ($31) {
          return $29(scene((function (v) {
              return v.time;
          })($30($31))));
      };
  })())(WAGS_Control_Functions_Graph.iloop(Data_Monoid.monoidUnit)()(WAGS_Interpret.mixedAudioInterpret)(function (v) {
      return function (v1) {
          return Data_Functor_Indexed.ivoid(WAGS_Control_Indexed.ixFunctorIxWAG)(WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "speaker";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeSpeaker())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "gain0";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeGain({
              reflectSymbol: function () {
                  return "gain0";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "sin0";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeSinOsc({
              reflectSymbol: function () {
                  return "sin0";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "gain1";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeGain({
              reflectSymbol: function () {
                  return "gain1";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "sin1";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeSinOsc({
              reflectSymbol: function () {
                  return "sin1";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "gain2";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeGain({
              reflectSymbol: function () {
                  return "gain2";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "sin2";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeSinOsc({
              reflectSymbol: function () {
                  return "sin2";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "gain3";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeGain({
              reflectSymbol: function () {
                  return "gain3";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "sin3";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeSinOsc({
              reflectSymbol: function () {
                  return "sin3";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLNil))))))(WAGS_Change.changeRLNil))))(scene(v.time)));
      };
  }));
  var initialState = function (v) {
      return {
          unsubscribe: Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit),
          audioCtx: Data_Maybe.Nothing.value
      };
  };
  var easingAlgorithm = (function () {
      var fOf = function (initialTime) {
          return Control_Comonad_Cofree.mkCofree(initialTime)(function (adj) {
              return fOf(Data_Ord.max(Data_Ord.ordInt)(20)(initialTime - adj | 0));
          });
      };
      return fOf(20);
  })();
  var handleAction = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof StartAudio) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.context))(function (audioCtx) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.makeFFIAudioSnapshot(audioCtx)))(function (ffiAudio) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(FRP_Event.subscribe(WAGS_Run.run()(WAGS_Run.analyserRefsNil)(WAGS_Run.workWithAnalysersNil)(WAGS_Run.getAnalysersNil)(Data_Monoid.monoidUnit)(Control_Applicative.pure(FRP_Event.applicativeEvent)(Data_Unit.unit))(Control_Applicative.pure(FRP_Behavior.applicativeABehavior(FRP_Event.functorEvent))(Data_Unit.unit))({
                              easingAlgorithm: easingAlgorithm
                          })(ffiAudio)(piece))(function (v1) {
                              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                          })))(function (unsubscribe) {
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $20 = {};
                                  for (var $21 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $21)) {
                                          $20[$21] = v1[$21];
                                      };
                                  };
                                  $20.unsubscribe = unsubscribe;
                                  $20.audioCtx = new Data_Maybe.Just(audioCtx);
                                  return $20;
                              });
                          });
                      });
                  });
              };
              if (v instanceof StopAudio) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(v1.unsubscribe))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v1.audioCtx)((function () {
                              var $32 = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()));
                              return function ($33) {
                                  return $32(WAGS_Interpret.close($33));
                              };
                          })()))(function () {
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                  var $24 = {};
                                  for (var $25 in v2) {
                                      if ({}.hasOwnProperty.call(v2, $25)) {
                                          $24[$25] = v2[$25];
                                      };
                                  };
                                  $24.unsubscribe = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                                  $24.audioCtx = Data_Maybe.Nothing.value;
                                  return $24;
                              });
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at WAGS.Example.HelloWorld (line 118, column 16 - line 132, column 64): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render,
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictMonadAff.MonadEffect0())(dictMonadAff),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: Halogen_Component.defaultEval.receive,
                  initialize: Halogen_Component.defaultEval.initialize,
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Timing"] = $PS["WAGS.Example.KitchenSink.Timing"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Timing"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Monad_State = $PS["Control.Monad.State"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Monoid_Additive = $PS["Data.Monoid.Additive"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Heterogeneous_Folding = $PS["Heterogeneous.Folding"];
  var Heterogeneous_Mapping = $PS["Heterogeneous.Mapping"];                
  var integrate = function (n) {
      return Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity))(function (v) {
          return function (v1) {
              return function (v2) {
                  return {
                      begin: v,
                      dur: v1,
                      end: v2
                  };
              };
          };
      })(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))))(Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Control_Applicative.pure(Data_Monoid_Additive.applicativeAdditive)(n))))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(Data_Semigroup.append(Data_Monoid_Additive.semigroupAdditive(Data_Semiring.semiringNumber))(Control_Applicative.pure(Data_Monoid_Additive.applicativeAdditive)(n))));
  };
  var deAdd = function (v) {
      return {
          begin: Data_Newtype.unwrap()(v.begin),
          dur: Data_Newtype.unwrap()(v.dur),
          end: Data_Newtype.unwrap()(v.end)
      };
  };
  var timing = Heterogeneous_Mapping.hmap(Heterogeneous_Mapping.hmapRecord()(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "ksAllpass";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "ksBandpass";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "ksConstant";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "ksConvolver";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "ksDelay";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "ksDynamicsCompressor";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "ksFeedback";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "ksHighpass";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "ksHighshelf";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "ksLoopBuf";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "ksLowpass";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "ksLowshelf";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "ksMicrophone";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "ksNotch";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "ksPeaking";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "ksPeriodicOsc";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "ksSawtoothOsc";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "ksSinOsc";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "ksSquareOsc";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "ksStereoPanner";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "ksTriangleOsc";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "ksWaveShaper";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexNil)()())()())()())()())()())()())()())()())()())()())()())()())()())()())()())()())()())()())()())()())()())()()))(deAdd)(Control_Monad_State.evalState(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity))(function (v) {
      return function (v1) {
          return function (v2) {
              return function (v3) {
                  return function (v4) {
                      return function (v5) {
                          return function (v6) {
                              return function (v7) {
                                  return function (v8) {
                                      return function (v9) {
                                          return function (v10) {
                                              return function (v11) {
                                                  return function (v12) {
                                                      return function (v13) {
                                                          return function (v14) {
                                                              return function (v15) {
                                                                  return function (v16) {
                                                                      return function (v17) {
                                                                          return function (v18) {
                                                                              return function (v19) {
                                                                                  return function (v20) {
                                                                                      return function (v21) {
                                                                                          return {
                                                                                              ksSinOsc: v,
                                                                                              ksTriangleOsc: v1,
                                                                                              ksSquareOsc: v2,
                                                                                              ksPeriodicOsc: v3,
                                                                                              ksSawtoothOsc: v4,
                                                                                              ksConvolver: v5,
                                                                                              ksAllpass: v6,
                                                                                              ksLowpass: v7,
                                                                                              ksHighshelf: v8,
                                                                                              ksLowshelf: v9,
                                                                                              ksBandpass: v10,
                                                                                              ksNotch: v11,
                                                                                              ksPeaking: v12,
                                                                                              ksHighpass: v13,
                                                                                              ksMicrophone: v14,
                                                                                              ksWaveShaper: v15,
                                                                                              ksDelay: v16,
                                                                                              ksFeedback: v17,
                                                                                              ksLoopBuf: v18,
                                                                                              ksStereoPanner: v19,
                                                                                              ksConstant: v20,
                                                                                              ksDynamicsCompressor: v21
                                                                                          };
                                                                                      };
                                                                                  };
                                                                              };
                                                                          };
                                                                      };
                                                                  };
                                                              };
                                                          };
                                                      };
                                                  };
                                              };
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  })(integrate(5.0)))(integrate(5.0)))(integrate(5.0)))(integrate(5.0)))(integrate(5.0)))(integrate(6.0)))(integrate(6.0)))(integrate(6.0)))(integrate(6.0)))(integrate(6.0)))(integrate(6.0)))(integrate(6.0)))(integrate(6.0)))(integrate(6.0)))(integrate(5.0)))(integrate(6.0)))(integrate(6.0)))(integrate(6.0)))(integrate(6.0)))(integrate(5.0)))(integrate(2.0)))(integrate(10.0)))(Data_Monoid.mempty(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringNumber))));
  var pieceTime = Heterogeneous_Folding.hfoldl(Heterogeneous_Folding.hfoldlRecord()(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ksAllpass";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ksBandpass";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ksConstant";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ksConvolver";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ksDelay";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ksDynamicsCompressor";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ksFeedback";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ksHighpass";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ksHighshelf";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ksLoopBuf";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ksLowpass";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ksLowshelf";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ksMicrophone";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ksNotch";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ksPeaking";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ksPeriodicOsc";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ksSawtoothOsc";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ksSinOsc";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ksSquareOsc";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ksStereoPanner";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ksTriangleOsc";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ksWaveShaper";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordNil))))))))))))))))))))))))(function (v) {
      return function (v1) {
          return Data_Ord.max(Data_Ord.ordNumber)(v)(v1.end);
      };
  })(0.0)(timing);
  exports["timing"] = timing;
  exports["pieceTime"] = pieceTime;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Types.DynamicsCompressor"] = $PS["WAGS.Example.KitchenSink.Types.DynamicsCompressor"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Types.DynamicsCompressor"];
  var ConvertableOptions = $PS["ConvertableOptions"];
  var Data_Ord = $PS["Data.Ord"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var ksDynamicsCompressorCreate = function (v) {
      return {
          compressor: WAGS_Create_Optionals.compressor(WAGS_Create_Optionals.compressorCTor(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsNil))(ConvertableOptions.defaultsRecord()())))({})({
              buf: WAGS_Create_Optionals.playBuf(WAGS_Create_Optionals.playBufCtor2)(v["buffers"]["my-buffer"])
          })
      };
  };
  var deltaKsDynamicsCompressor = function (v) {
      var $18 = Data_Ord.max(Data_Ord.ordNumber)(0.0);
      return function ($19) {
          return (function (time) {
              var switchW = $$Math.remainder(time)(4.0) < 2.0;
              var changes = {
                  mix: (function () {
                      var $8 = time > WAGS_Example_KitchenSink_Timing.timing.ksDynamicsCompressor.dur - 1.0;
                      if ($8) {
                          return 0.0;
                      };
                      return 1.0;
                  })(),
                  compressor: {
                      threshold: (function () {
                          var $9 = time > WAGS_Example_KitchenSink_Timing.timing.ksDynamicsCompressor.dur / 2.0;
                          if ($9) {
                              return -50.0;
                          };
                          return -40.0;
                      })(),
                      knee: (function () {
                          var $10 = time > WAGS_Example_KitchenSink_Timing.timing.ksDynamicsCompressor.dur / 3.0;
                          if ($10) {
                              return 20.0;
                          };
                          return 40.0;
                      })(),
                      ratio: (function () {
                          var $11 = time > WAGS_Example_KitchenSink_Timing.timing.ksDynamicsCompressor.dur / 4.0;
                          if ($11) {
                              return 2.0;
                          };
                          return 5.0;
                      })(),
                      attack: (function () {
                          var $12 = time > WAGS_Example_KitchenSink_Timing.timing.ksDynamicsCompressor.dur / 5.0;
                          if ($12) {
                              return 3.0e-3;
                          };
                          return 5.0e-3;
                      })(),
                      release: (function () {
                          var $13 = time > WAGS_Example_KitchenSink_Timing.timing.ksDynamicsCompressor.dur / 6.0;
                          if ($13) {
                              return 0.25;
                          };
                          return 0.5;
                      })()
                  },
                  buf: (function () {
                      if (switchW) {
                          return v["buffers"]["my-buffer"];
                      };
                      return v.buffers.shruti;
                  })()
              };
              return WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeBrowserAudioBuffer()()(WAGS_Graph_AudioUnit.monoidTPlayBuf)(WAGS_Change.oneShotChangePlayBufBuffer)(WAGS_Change.changeXPlayBuf({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "compressor";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "attack";
                  }
              })({
                  reflectSymbol: function () {
                      return "compressor";
                  }
              })()(WAGS_Change.canBeChangedAttackN(WAGS_Change.canBeChangedAttack({
                  reflectSymbol: function () {
                      return "compressor";
                  }
              })()()()))(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "knee";
                  }
              })({
                  reflectSymbol: function () {
                      return "compressor";
                  }
              })()(WAGS_Change.canBeChangedKneeN(WAGS_Change.canBeChangedKnee({
                  reflectSymbol: function () {
                      return "compressor";
                  }
              })()()()))(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "ratio";
                  }
              })({
                  reflectSymbol: function () {
                      return "compressor";
                  }
              })()(WAGS_Change.canBeChangedRatioN(WAGS_Change.canBeChangedRatio({
                  reflectSymbol: function () {
                      return "compressor";
                  }
              })()()()))(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "release";
                  }
              })({
                  reflectSymbol: function () {
                      return "compressor";
                  }
              })()(WAGS_Change.canBeChangedReleaseN(WAGS_Change.canBeChangedRelease({
                  reflectSymbol: function () {
                      return "compressor";
                  }
              })()()()))(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "threshold";
                  }
              })({
                  reflectSymbol: function () {
                      return "compressor";
                  }
              })()(WAGS_Change.canBeChangedThresholdN(WAGS_Change.canBeChangedThreshold({
                  reflectSymbol: function () {
                      return "compressor";
                  }
              })()()()))(WAGS_Change["change''Nil"])))))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil))))))(changes);
          })($18((function (v1) {
              return v1 - WAGS_Example_KitchenSink_Timing.timing.ksDynamicsCompressor.begin;
          })((function (v1) {
              return $$Math.remainder(v1)(WAGS_Example_KitchenSink_Timing.pieceTime);
          })($19))));
      };
  };
  exports["ksDynamicsCompressorCreate"] = ksDynamicsCompressorCreate;
  exports["deltaKsDynamicsCompressor"] = deltaKsDynamicsCompressor;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Types.Empty"] = $PS["WAGS.Example.KitchenSink.Types.Empty"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Types.Empty"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var cursorGain = Type_Proxy["Proxy"].value;
  exports["cursorGain"] = cursorGain;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Types.SinOsc"] = $PS["WAGS.Example.KitchenSink.Types.SinOsc"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Types.SinOsc"];
  var Data_Ord = $PS["Data.Ord"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var ksSinOscCreate = {
      sinOsc: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(440.0)
  };
  var deltaKsSinOsc = (function () {
      var $3 = Data_Ord.max(Data_Ord.ordNumber)(0.0);
      return function ($4) {
          return (function (time) {
              var switchOO = $$Math.remainder(time)(2.0) < 1.0;
              var rad = $$Math.pi * time;
              return WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "sinOsc";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })({
                  reflectSymbol: function () {
                      return "sinOsc";
                  }
              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                  reflectSymbol: function () {
                      return "sinOsc";
                  }
              })()()()))(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })({
                  reflectSymbol: function () {
                      return "sinOsc";
                  }
              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                  reflectSymbol: function () {
                      return "sinOsc";
                  }
              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                  mix: 0.1 - 0.1 * $$Math.cos(time),
                  sinOsc: {
                      onOff: (function () {
                          if (switchOO) {
                              return WAGS_Graph_Parameter["_on"];
                          };
                          return WAGS_Graph_Parameter["_off"];
                      })(),
                      freq: 440.0 + 50.0 * $$Math.pow($$Math.sin(rad * 1.5))(2.0)
                  }
              });
          })($3((function (v) {
              return v - WAGS_Example_KitchenSink_Timing.timing.ksSinOsc.begin;
          })((function (v) {
              return $$Math.remainder(v)(WAGS_Example_KitchenSink_Timing.pieceTime);
          })($4))));
      };
  })();
  exports["ksSinOscCreate"] = ksSinOscCreate;
  exports["deltaKsSinOsc"] = deltaKsSinOsc;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.TLP.DynamicsCompressor"] = $PS["WAGS.Example.KitchenSink.TLP.DynamicsCompressor"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.TLP.DynamicsCompressor"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var $$Math = $PS["Math"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Destroy = $PS["WAGS.Destroy"];
  var WAGS_Disconnect = $PS["WAGS.Disconnect"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Example_KitchenSink_Types_DynamicsCompressor = $PS["WAGS.Example.KitchenSink.Types.DynamicsCompressor"];
  var WAGS_Example_KitchenSink_Types_Empty = $PS["WAGS.Example.KitchenSink.Types.Empty"];
  var WAGS_Example_KitchenSink_Types_SinOsc = $PS["WAGS.Example.KitchenSink.Types.SinOsc"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var doDynamicsCompressor = WAGS_Control_Functions.ibranch(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return function (v1) {
          var $5 = $$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) < WAGS_Example_KitchenSink_Timing.timing.ksDynamicsCompressor.begin;
          if ($5) {
              return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(v1.loop)(Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })({
                  reflectSymbol: function () {
                      return "compressor";
                  }
              })()()({
                  reflectSymbol: function () {
                      return "TPlayBuf";
                  }
              })({
                  reflectSymbol: function () {
                      return "TDynamicsCompressor";
                  }
              })()()()()())({
                  source: Type_Proxy["Proxy"].value,
                  dest: Type_Proxy["Proxy"].value
              }))(function () {
                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
                      reflectSymbol: function () {
                          return "compressor";
                      }
                  })({
                      reflectSymbol: function () {
                          return "mix";
                      }
                  })()()({
                      reflectSymbol: function () {
                          return "TDynamicsCompressor";
                      }
                  })({
                      reflectSymbol: function () {
                          return "TGain";
                      }
                  })()()()()())({
                      source: Type_Proxy["Proxy"].value,
                      dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                  }))(function () {
                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                          reflectSymbol: function () {
                              return "compressor";
                          }
                      })()({
                          reflectSymbol: function () {
                              return "TDynamicsCompressor";
                          }
                      })()()())(Type_Proxy["Proxy"].value))(function () {
                          return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })()({
                              reflectSymbol: function () {
                                  return "TPlayBuf";
                              }
                          })()()())(Type_Proxy["Proxy"].value))(function () {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                                  reflectSymbol: function () {
                                      return "sinOsc";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                                  reflectSymbol: function () {
                                      return "sinOsc";
                                  }
                              })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))))(WAGS_Example_KitchenSink_Types_SinOsc.ksSinOscCreate))(function () {
                                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Connect.iconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Connect.connectInstance({
                                      reflectSymbol: function () {
                                          return "sinOsc";
                                      }
                                  })({
                                      reflectSymbol: function () {
                                          return "mix";
                                      }
                                  })()()({
                                      reflectSymbol: function () {
                                          return "TSinOsc";
                                      }
                                  })({
                                      reflectSymbol: function () {
                                          return "TGain";
                                      }
                                  })()()()()())({
                                      source: Type_Proxy["Proxy"].value,
                                      dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                                  }))(function () {
                                      return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)({
                                          iteration: v1.iteration + 1 | 0,
                                          loop: v1.loop
                                      });
                                  });
                              });
                          });
                      });
                  });
              })));
          };
          return new Data_Either.Right(Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Example_KitchenSink_Types_DynamicsCompressor.deltaKsDynamicsCompressor(v.world)(v.time))(v1));
      };
  });
  exports["doDynamicsCompressor"] = doDynamicsCompressor;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Types.Constant"] = $PS["WAGS.Example.KitchenSink.Types.Constant"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Types.Constant"];
  var Data_Function = $PS["Data.Function"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var ksConstantCreate = {
      constant: WAGS_Create_Optionals.constant(WAGS_Create_Optionals.constantCtor2(WAGS_Graph_Paramable.paramableNumber))(0.0)
  };
  var deltaKsConstant = Data_Function["const"](WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
      reflectSymbol: function () {
          return "constant";
      }
  })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTConstant)(WAGS_Change.oneShotChangeConstantOffset)(WAGS_Change.changeXConstant({
      reflectSymbol: function () {
          return "constant";
      }
  })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
      reflectSymbol: function () {
          return "mix";
      }
  })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
      reflectSymbol: function () {
          return "mix";
      }
  })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
      mix: 1.0,
      constant: 0.0
  }));
  exports["ksConstantCreate"] = ksConstantCreate;
  exports["deltaKsConstant"] = deltaKsConstant;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.TLP.Constant"] = $PS["WAGS.Example.KitchenSink.TLP.Constant"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.TLP.Constant"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var $$Math = $PS["Math"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Destroy = $PS["WAGS.Destroy"];
  var WAGS_Disconnect = $PS["WAGS.Disconnect"];
  var WAGS_Example_KitchenSink_TLP_DynamicsCompressor = $PS["WAGS.Example.KitchenSink.TLP.DynamicsCompressor"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Example_KitchenSink_Types_Constant = $PS["WAGS.Example.KitchenSink.Types.Constant"];
  var WAGS_Example_KitchenSink_Types_DynamicsCompressor = $PS["WAGS.Example.KitchenSink.Types.DynamicsCompressor"];
  var WAGS_Example_KitchenSink_Types_Empty = $PS["WAGS.Example.KitchenSink.Types.Empty"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var doConstant = WAGS_Control_Functions.ibranch(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return function (lsig) {
          var $2 = $$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) < WAGS_Example_KitchenSink_Timing.timing.ksConstant.end;
          if ($2) {
              return new Data_Either.Right(Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Example_KitchenSink_Types_Constant.deltaKsConstant(v.time))(lsig));
          };
          return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(WAGS_Example_KitchenSink_TLP_DynamicsCompressor.doDynamicsCompressor)(Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
              reflectSymbol: function () {
                  return "constant";
              }
          })({
              reflectSymbol: function () {
                  return "mix";
              }
          })()()({
              reflectSymbol: function () {
                  return "TConstant";
              }
          })({
              reflectSymbol: function () {
                  return "TGain";
              }
          })()()()()())({
              source: Type_Proxy["Proxy"].value,
              dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
          }))(function () {
              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                  reflectSymbol: function () {
                      return "constant";
                  }
              })()({
                  reflectSymbol: function () {
                      return "TConstant";
                  }
              })()()())(Type_Proxy["Proxy"].value))(function () {
                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                      reflectSymbol: function () {
                          return "compressor";
                      }
                  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createDynamicsCompressor({
                      reflectSymbol: function () {
                          return "compressor";
                      }
                  })()())()(WAGS_Create.createStepRLCons({
                      reflectSymbol: function () {
                          return "buf";
                      }
                  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createPlayBuf({
                      reflectSymbol: function () {
                          return "buf";
                      }
                  })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                      reflectSymbol: function () {
                          return "buf";
                      }
                  })({
                      reflectSymbol: function () {
                          return "compressor";
                      }
                  })()()({
                      reflectSymbol: function () {
                          return "TPlayBuf";
                      }
                  })({
                      reflectSymbol: function () {
                          return "TDynamicsCompressor";
                      }
                  })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(WAGS_Example_KitchenSink_Types_DynamicsCompressor.ksDynamicsCompressorCreate(v.world)))(function () {
                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Connect.iconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "compressor";
                          }
                      })({
                          reflectSymbol: function () {
                              return "mix";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TDynamicsCompressor";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())({
                          source: Type_Proxy["Proxy"].value,
                          dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                      }))(function () {
                          return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig);
                      });
                  });
              });
          })));
      };
  });
  exports["doConstant"] = doConstant;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Types.StereoPanner"] = $PS["WAGS.Example.KitchenSink.Types.StereoPanner"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Types.StereoPanner"];
  var Data_Ord = $PS["Data.Ord"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var ksStereoPannerCreate = function (v) {
      return {
          pan: WAGS_Create_Optionals.pan(WAGS_Graph_Paramable.paramableNumber)(0.0)({
              buf: WAGS_Create_Optionals.playBuf(WAGS_Create_Optionals.playBufCtor2)(v["buffers"]["my-buffer"])
          })
      };
  };
  var deltaKsStereoPanner = function (v) {
      var $14 = Data_Ord.max(Data_Ord.ordNumber)(0.0);
      return function ($15) {
          return (function (time) {
              var switchW = $$Math.remainder(time)(4.0) < 2.0;
              var switchOO = $$Math.remainder(time)(2.0) < 1.0;
              var pan = $$Math.sin(time * $$Math.pi);
              var onOff = (function () {
                  if (switchOO) {
                      return WAGS_Graph_Parameter["_on"];
                  };
                  return WAGS_Graph_Parameter["_off"];
              })();
              var mix = (function () {
                  var $9 = time > WAGS_Example_KitchenSink_Timing.timing.ksStereoPanner.dur - 1.0;
                  if ($9) {
                      return 0.0;
                  };
                  return 1.0;
              })();
              var buffer = (function () {
                  if (switchW) {
                      return v["buffers"]["my-buffer"];
                  };
                  return v.buffers.shruti;
              })();
              return WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "buffer";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedBuffer({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()())(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "pan";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTStereoPanner)(WAGS_Change.oneShotChangeStereoPanner)(WAGS_Change.changeXStereoPanner({
                  reflectSymbol: function () {
                      return "pan";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil))))))({
                  mix: mix,
                  pan: pan,
                  buf: {
                      onOff: onOff,
                      buffer: buffer
                  }
              });
          })($14((function (v1) {
              return v1 - WAGS_Example_KitchenSink_Timing.timing.ksStereoPanner.begin;
          })((function (v1) {
              return $$Math.remainder(v1)(WAGS_Example_KitchenSink_Timing.pieceTime);
          })($15))));
      };
  };
  exports["ksStereoPannerCreate"] = ksStereoPannerCreate;
  exports["deltaKsStereoPanner"] = deltaKsStereoPanner;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.TLP.StereoPanner"] = $PS["WAGS.Example.KitchenSink.TLP.StereoPanner"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.TLP.StereoPanner"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var $$Math = $PS["Math"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Destroy = $PS["WAGS.Destroy"];
  var WAGS_Disconnect = $PS["WAGS.Disconnect"];
  var WAGS_Example_KitchenSink_TLP_Constant = $PS["WAGS.Example.KitchenSink.TLP.Constant"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Example_KitchenSink_Types_Constant = $PS["WAGS.Example.KitchenSink.Types.Constant"];
  var WAGS_Example_KitchenSink_Types_Empty = $PS["WAGS.Example.KitchenSink.Types.Empty"];
  var WAGS_Example_KitchenSink_Types_StereoPanner = $PS["WAGS.Example.KitchenSink.Types.StereoPanner"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var doStereoPanner = WAGS_Control_Functions.ibranch(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return function (lsig) {
          var $2 = $$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) < WAGS_Example_KitchenSink_Timing.timing.ksStereoPanner.end;
          if ($2) {
              return new Data_Either.Right(Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Example_KitchenSink_Types_StereoPanner.deltaKsStereoPanner(v.world)(v.time))(lsig));
          };
          return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(WAGS_Example_KitchenSink_TLP_Constant.doConstant)(Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
              reflectSymbol: function () {
                  return "buf";
              }
          })({
              reflectSymbol: function () {
                  return "pan";
              }
          })()()({
              reflectSymbol: function () {
                  return "TPlayBuf";
              }
          })({
              reflectSymbol: function () {
                  return "TStereoPanner";
              }
          })()()()()())({
              source: Type_Proxy["Proxy"].value,
              dest: Type_Proxy["Proxy"].value
          }))(function () {
              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
                  reflectSymbol: function () {
                      return "pan";
                  }
              })({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()({
                  reflectSymbol: function () {
                      return "TStereoPanner";
                  }
              })({
                  reflectSymbol: function () {
                      return "TGain";
                  }
              })()()()()())({
                  source: Type_Proxy["Proxy"].value,
                  dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
              }))(function () {
                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                      reflectSymbol: function () {
                          return "pan";
                      }
                  })()({
                      reflectSymbol: function () {
                          return "TStereoPanner";
                      }
                  })()()())(Type_Proxy["Proxy"].value))(function () {
                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                          reflectSymbol: function () {
                              return "buf";
                          }
                      })()({
                          reflectSymbol: function () {
                              return "TPlayBuf";
                          }
                      })()()())(Type_Proxy["Proxy"].value))(function () {
                          return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                              reflectSymbol: function () {
                                  return "constant";
                              }
                          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createConstant({
                              reflectSymbol: function () {
                                  return "constant";
                              }
                          })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))))(WAGS_Example_KitchenSink_Types_Constant.ksConstantCreate))(function () {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Connect.iconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Connect.connectInstance({
                                  reflectSymbol: function () {
                                      return "constant";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "mix";
                                  }
                              })()()({
                                  reflectSymbol: function () {
                                      return "TConstant";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "TGain";
                                  }
                              })()()()()())({
                                  source: Type_Proxy["Proxy"].value,
                                  dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                              }))(function () {
                                  return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig);
                              });
                          });
                      });
                  });
              });
          })));
      };
  });
  exports["doStereoPanner"] = doStereoPanner;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Types.LoopBuf"] = $PS["WAGS.Example.KitchenSink.Types.LoopBuf"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Types.LoopBuf"];
  var ConvertableOptions = $PS["ConvertableOptions"];
  var Data_Ord = $PS["Data.Ord"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var ksLoopBufCreate = function (v) {
      return {
          loopBuf: WAGS_Create_Optionals.loopBuf(WAGS_Create_Optionals.loopBufCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertLoopBufPlaybackRate(WAGS_Graph_Paramable.paramableNumber))()()()({
              reflectSymbol: function () {
                  return "playbackRate";
              }
          }))(WAGS_Create_Optionals.convertLoopBufStart)()()()({
              reflectSymbol: function () {
                  return "loopStart";
              }
          }))(WAGS_Create_Optionals.convertLoopBufEnd)()()()({
              reflectSymbol: function () {
                  return "loopEnd";
              }
          })))(ConvertableOptions.defaultsRecord()())))({
              playbackRate: 1.0,
              loopStart: 1.0,
              loopEnd: 2.5
          })(v["buffers"]["my-buffer"])
      };
  };
  var deltaKsLoopBuf = function (v) {
      var $13 = Data_Ord.max(Data_Ord.ordNumber)(0.0);
      return function ($14) {
          return (function (time) {
              var switchW = $$Math.remainder(time)(4.0) < 2.0;
              var switchOO = $$Math.remainder(time)(2.0) < 1.0;
              var rad = $$Math.pi * time;
              var changeRec = {
                  onOff: (function () {
                      if (switchOO) {
                          return WAGS_Graph_Parameter["_on"];
                      };
                      return WAGS_Graph_Parameter["_off"];
                  })(),
                  playbackRate: 1.0 + 0.1 * $$Math.sin(rad),
                  loopStart: 1.0,
                  loopEnd: 1.4 + 0.2 * $$Math.sin(rad),
                  buffer: (function () {
                      if (switchW) {
                          return v["buffers"]["my-buffer"];
                      };
                      return v.buffers.shruti;
                  })()
              };
              return WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "loopBuf";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "buffer";
                  }
              })({
                  reflectSymbol: function () {
                      return "loopBuf";
                  }
              })()(WAGS_Change.canBeChangedBuffer({
                  reflectSymbol: function () {
                      return "loopBuf";
                  }
              })()()())(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "loopEnd";
                  }
              })({
                  reflectSymbol: function () {
                      return "loopBuf";
                  }
              })()(WAGS_Change.canBeChangedLoopEnd({
                  reflectSymbol: function () {
                      return "loopBuf";
                  }
              })()()())(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "loopStart";
                  }
              })({
                  reflectSymbol: function () {
                      return "loopBuf";
                  }
              })()(WAGS_Change.canBeChangedLoopStart({
                  reflectSymbol: function () {
                      return "loopBuf";
                  }
              })()()())(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "playbackRate";
                  }
              })({
                  reflectSymbol: function () {
                      return "loopBuf";
                  }
              })()(WAGS_Change.canBeChangedPlaybackRateN(WAGS_Change.canBeChangedPlaybackRate({
                  reflectSymbol: function () {
                      return "loopBuf";
                  }
              })()()()))(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })({
                  reflectSymbol: function () {
                      return "loopBuf";
                  }
              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                  reflectSymbol: function () {
                      return "loopBuf";
                  }
              })()()()))(WAGS_Change["change''Nil"])))))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil))))({
                  loopBuf: changeRec
              });
          })($13((function (v1) {
              return v1 - WAGS_Example_KitchenSink_Timing.timing.ksLoopBuf.begin;
          })((function (v1) {
              return $$Math.remainder(v1)(WAGS_Example_KitchenSink_Timing.pieceTime);
          })($14))));
      };
  };
  exports["ksLoopBufCreate"] = ksLoopBufCreate;
  exports["deltaKsLoopBuf"] = deltaKsLoopBuf;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.TLP.LoopBuf"] = $PS["WAGS.Example.KitchenSink.TLP.LoopBuf"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.TLP.LoopBuf"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var $$Math = $PS["Math"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Destroy = $PS["WAGS.Destroy"];
  var WAGS_Disconnect = $PS["WAGS.Disconnect"];
  var WAGS_Example_KitchenSink_TLP_StereoPanner = $PS["WAGS.Example.KitchenSink.TLP.StereoPanner"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Example_KitchenSink_Types_Empty = $PS["WAGS.Example.KitchenSink.Types.Empty"];
  var WAGS_Example_KitchenSink_Types_LoopBuf = $PS["WAGS.Example.KitchenSink.Types.LoopBuf"];
  var WAGS_Example_KitchenSink_Types_StereoPanner = $PS["WAGS.Example.KitchenSink.Types.StereoPanner"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var doLoopBuf = WAGS_Control_Functions.ibranch(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return function (lsig) {
          var $2 = $$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) < WAGS_Example_KitchenSink_Timing.timing.ksLoopBuf.end;
          if ($2) {
              return new Data_Either.Right(Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Example_KitchenSink_Types_LoopBuf.deltaKsLoopBuf(v.world)(v.time))(lsig));
          };
          return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(WAGS_Example_KitchenSink_TLP_StereoPanner.doStereoPanner)(Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
              reflectSymbol: function () {
                  return "loopBuf";
              }
          })({
              reflectSymbol: function () {
                  return "mix";
              }
          })()()({
              reflectSymbol: function () {
                  return "TLoopBuf";
              }
          })({
              reflectSymbol: function () {
                  return "TGain";
              }
          })()()()()())({
              source: Type_Proxy["Proxy"].value,
              dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
          }))(function () {
              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                  reflectSymbol: function () {
                      return "loopBuf";
                  }
              })()({
                  reflectSymbol: function () {
                      return "TLoopBuf";
                  }
              })()()())(Type_Proxy["Proxy"].value))(function () {
                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                      reflectSymbol: function () {
                          return "pan";
                      }
                  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createStereoPanner({
                      reflectSymbol: function () {
                          return "pan";
                      }
                  })()())()(WAGS_Create.createStepRLCons({
                      reflectSymbol: function () {
                          return "buf";
                      }
                  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createPlayBuf({
                      reflectSymbol: function () {
                          return "buf";
                      }
                  })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                      reflectSymbol: function () {
                          return "buf";
                      }
                  })({
                      reflectSymbol: function () {
                          return "pan";
                      }
                  })()()({
                      reflectSymbol: function () {
                          return "TPlayBuf";
                      }
                  })({
                      reflectSymbol: function () {
                          return "TStereoPanner";
                      }
                  })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(WAGS_Example_KitchenSink_Types_StereoPanner.ksStereoPannerCreate(v.world)))(function () {
                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Connect.iconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "pan";
                          }
                      })({
                          reflectSymbol: function () {
                              return "mix";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TStereoPanner";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())({
                          source: Type_Proxy["Proxy"].value,
                          dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                      }))(function () {
                          return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig);
                      });
                  });
              });
          })));
      };
  });
  exports["doLoopBuf"] = doLoopBuf;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Math"] = $PS["WAGS.Math"] || {};
  var exports = $PS["WAGS.Math"];
  var calcSlope = function (x0) {
      return function (y0) {
          return function (x1) {
              return function (y1) {
                  return function (x) {
                      var $1 = x1 === x0 || y1 === y0;
                      if ($1) {
                          return y0;
                      };
                      var m = (y1 - y0) / (x1 - x0);
                      var b = y0 - m * x0;
                      return m * x + b;
                  };
              };
          };
      };
  };
  exports["calcSlope"] = calcSlope;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Types.Feedback"] = $PS["WAGS.Example.KitchenSink.Types.Feedback"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Types.Feedback"];
  var Data_Ord = $PS["Data.Ord"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Math = $PS["WAGS.Math"];                
  var ksFeedbackCreate = function (v) {
      return {
          dmix: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0)({
              delay: WAGS_Create_Optionals.delay(WAGS_Graph_Paramable.paramableNumber)(0.3)({
                  highpass: WAGS_Create_Optionals.highpass(WAGS_Create_Optionals.highpassCtor2(WAGS_Graph_Paramable.paramableNumber))(2000.0)({
                      dmix: WAGS_Create_Optionals.ref
                  })
              }),
              buf: WAGS_Create_Optionals.playBuf(WAGS_Create_Optionals.playBufCtor2)(v["buffers"]["my-buffer"])
          })
      };
  };
  var deltaKsFeedback = function (v) {
      var $14 = Data_Ord.max(Data_Ord.ordNumber)(0.0);
      return function ($15) {
          return (function (time) {
              var switchW = $$Math.remainder(time)(4.0) < 2.0;
              var switchOO = $$Math.remainder(time)(2.0) < 1.0;
              var onOff = (function () {
                  if (switchOO) {
                      return WAGS_Graph_Parameter["_on"];
                  };
                  return WAGS_Graph_Parameter["_off"];
              })();
              var mix = (function () {
                  var $9 = time > WAGS_Example_KitchenSink_Timing.timing.ksFeedback.dur - 1.0;
                  if ($9) {
                      return 0.0;
                  };
                  return 1.0;
              })();
              var delay = WAGS_Math.calcSlope(0.0)(0.3)(WAGS_Example_KitchenSink_Timing.timing.ksFeedback.dur)(0.6)(time);
              var buffer = (function () {
                  if (switchW) {
                      return v["buffers"]["my-buffer"];
                  };
                  return v.buffers.shruti;
              })();
              return WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "buffer";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedBuffer({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()())(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "delay";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTDelay)(WAGS_Change.oneShotChangeDelay)(WAGS_Change.changeXDelay({
                  reflectSymbol: function () {
                      return "delay";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil))))))({
                  mix: mix,
                  delay: delay,
                  buf: {
                      onOff: onOff,
                      buffer: buffer
                  }
              });
          })($14((function (v1) {
              return v1 - WAGS_Example_KitchenSink_Timing.timing.ksFeedback.begin;
          })((function (v1) {
              return $$Math.remainder(v1)(WAGS_Example_KitchenSink_Timing.pieceTime);
          })($15))));
      };
  };
  exports["ksFeedbackCreate"] = ksFeedbackCreate;
  exports["deltaKsFeedback"] = deltaKsFeedback;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.TLP.Feedback"] = $PS["WAGS.Example.KitchenSink.TLP.Feedback"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.TLP.Feedback"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var $$Math = $PS["Math"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Destroy = $PS["WAGS.Destroy"];
  var WAGS_Disconnect = $PS["WAGS.Disconnect"];
  var WAGS_Example_KitchenSink_TLP_LoopBuf = $PS["WAGS.Example.KitchenSink.TLP.LoopBuf"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Example_KitchenSink_Types_Empty = $PS["WAGS.Example.KitchenSink.Types.Empty"];
  var WAGS_Example_KitchenSink_Types_Feedback = $PS["WAGS.Example.KitchenSink.Types.Feedback"];
  var WAGS_Example_KitchenSink_Types_LoopBuf = $PS["WAGS.Example.KitchenSink.Types.LoopBuf"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var doFeedback = WAGS_Control_Functions.ibranch(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return function (lsig) {
          var $2 = $$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) < WAGS_Example_KitchenSink_Timing.timing.ksFeedback.end;
          if ($2) {
              return new Data_Either.Right(Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Example_KitchenSink_Types_Feedback.deltaKsFeedback(v.world)(v.time))(lsig));
          };
          return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(WAGS_Example_KitchenSink_TLP_LoopBuf.doLoopBuf)(Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
              reflectSymbol: function () {
                  return "dmix";
              }
          })({
              reflectSymbol: function () {
                  return "highpass";
              }
          })()()({
              reflectSymbol: function () {
                  return "TGain";
              }
          })({
              reflectSymbol: function () {
                  return "THighpass";
              }
          })()()()()())({
              source: Type_Proxy["Proxy"].value,
              dest: Type_Proxy["Proxy"].value
          }))(function () {
              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
                  reflectSymbol: function () {
                      return "highpass";
                  }
              })({
                  reflectSymbol: function () {
                      return "delay";
                  }
              })()()({
                  reflectSymbol: function () {
                      return "THighpass";
                  }
              })({
                  reflectSymbol: function () {
                      return "TDelay";
                  }
              })()()()()())({
                  source: Type_Proxy["Proxy"].value,
                  dest: Type_Proxy["Proxy"].value
              }))(function () {
                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
                      reflectSymbol: function () {
                          return "delay";
                      }
                  })({
                      reflectSymbol: function () {
                          return "dmix";
                      }
                  })()()({
                      reflectSymbol: function () {
                          return "TDelay";
                      }
                  })({
                      reflectSymbol: function () {
                          return "TGain";
                      }
                  })()()()()())({
                      source: Type_Proxy["Proxy"].value,
                      dest: Type_Proxy["Proxy"].value
                  }))(function () {
                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
                          reflectSymbol: function () {
                              return "buf";
                          }
                      })({
                          reflectSymbol: function () {
                              return "dmix";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TPlayBuf";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())({
                          source: Type_Proxy["Proxy"].value,
                          dest: Type_Proxy["Proxy"].value
                      }))(function () {
                          return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
                              reflectSymbol: function () {
                                  return "dmix";
                              }
                          })({
                              reflectSymbol: function () {
                                  return "mix";
                              }
                          })()()({
                              reflectSymbol: function () {
                                  return "TGain";
                              }
                          })({
                              reflectSymbol: function () {
                                  return "TGain";
                              }
                          })()()()()())({
                              source: Type_Proxy["Proxy"].value,
                              dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                          }))(function () {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                                  reflectSymbol: function () {
                                      return "buf";
                                  }
                              })()({
                                  reflectSymbol: function () {
                                      return "TPlayBuf";
                                  }
                              })()()())(Type_Proxy["Proxy"].value))(function () {
                                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                                      reflectSymbol: function () {
                                          return "dmix";
                                      }
                                  })()({
                                      reflectSymbol: function () {
                                          return "TGain";
                                      }
                                  })()()())(Type_Proxy["Proxy"].value))(function () {
                                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                                          reflectSymbol: function () {
                                              return "delay";
                                          }
                                      })()({
                                          reflectSymbol: function () {
                                              return "TDelay";
                                          }
                                      })()()())(Type_Proxy["Proxy"].value))(function () {
                                          return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                                              reflectSymbol: function () {
                                                  return "highpass";
                                              }
                                          })()({
                                              reflectSymbol: function () {
                                                  return "THighpass";
                                              }
                                          })()()())(Type_Proxy["Proxy"].value))(function () {
                                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                                                  reflectSymbol: function () {
                                                      return "loopBuf";
                                                  }
                                              })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createLoopBuf({
                                                  reflectSymbol: function () {
                                                      return "loopBuf";
                                                  }
                                              })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))))(WAGS_Example_KitchenSink_Types_LoopBuf.ksLoopBufCreate(v.world)))(function () {
                                                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Connect.iconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Connect.connectInstance({
                                                      reflectSymbol: function () {
                                                          return "loopBuf";
                                                      }
                                                  })({
                                                      reflectSymbol: function () {
                                                          return "mix";
                                                      }
                                                  })()()({
                                                      reflectSymbol: function () {
                                                          return "TLoopBuf";
                                                      }
                                                  })({
                                                      reflectSymbol: function () {
                                                          return "TGain";
                                                      }
                                                  })()()()()())({
                                                      source: Type_Proxy["Proxy"].value,
                                                      dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                                                  }))(function () {
                                                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                                                          reflectSymbol: function () {
                                                              return "mix";
                                                          }
                                                      })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                                                          reflectSymbol: function () {
                                                              return "mix";
                                                          }
                                                      })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil))))({
                                                          mix: 1.0
                                                      }))(function () {
                                                          return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig);
                                                      });
                                                  });
                                              });
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              });
          })));
      };
  });
  exports["doFeedback"] = doFeedback;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Types.Delay"] = $PS["WAGS.Example.KitchenSink.Types.Delay"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Types.Delay"];
  var Data_Ord = $PS["Data.Ord"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Math = $PS["WAGS.Math"];                
  var ksDelayCreate = function (v) {
      return {
          dmix: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0)({
              delay: WAGS_Create_Optionals.delay(WAGS_Graph_Paramable.paramableNumber)(0.3)({
                  buf: WAGS_Create_Optionals.playBuf(WAGS_Create_Optionals.playBufCtor2)(v["buffers"]["my-buffer"])
              }),
              buf: WAGS_Create_Optionals.ref
          })
      };
  };
  var deltaKsDelay = function (v) {
      var $14 = Data_Ord.max(Data_Ord.ordNumber)(0.0);
      return function ($15) {
          return (function (time) {
              var switchW = $$Math.remainder(time)(4.0) < 2.0;
              var switchOO = $$Math.remainder(time)(2.0) < 1.0;
              var changes = {
                  mix: (function () {
                      var $8 = time > WAGS_Example_KitchenSink_Timing.timing.ksDelay.dur - 1.0;
                      if ($8) {
                          return 0.0;
                      };
                      return 1.0;
                  })(),
                  delay: WAGS_Math.calcSlope(0.0)(0.3)(WAGS_Example_KitchenSink_Timing.timing.ksDelay.dur)(0.6)(time),
                  buf: {
                      onOff: (function () {
                          if (switchOO) {
                              return WAGS_Graph_Parameter["_on"];
                          };
                          return WAGS_Graph_Parameter["_off"];
                      })(),
                      buffer: (function () {
                          if (switchW) {
                              return v["buffers"]["my-buffer"];
                          };
                          return v.buffers.shruti;
                      })()
                  }
              };
              return WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "buffer";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedBuffer({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()())(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "delay";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTDelay)(WAGS_Change.oneShotChangeDelay)(WAGS_Change.changeXDelay({
                  reflectSymbol: function () {
                      return "delay";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil))))))(changes);
          })($14((function (v1) {
              return v1 - WAGS_Example_KitchenSink_Timing.timing.ksDelay.begin;
          })((function (v1) {
              return $$Math.remainder(v1)(WAGS_Example_KitchenSink_Timing.pieceTime);
          })($15))));
      };
  };
  exports["ksDelayCreate"] = ksDelayCreate;
  exports["deltaKsDelay"] = deltaKsDelay;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.TLP.Delay"] = $PS["WAGS.Example.KitchenSink.TLP.Delay"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.TLP.Delay"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var $$Math = $PS["Math"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Destroy = $PS["WAGS.Destroy"];
  var WAGS_Disconnect = $PS["WAGS.Disconnect"];
  var WAGS_Example_KitchenSink_TLP_Feedback = $PS["WAGS.Example.KitchenSink.TLP.Feedback"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Example_KitchenSink_Types_Delay = $PS["WAGS.Example.KitchenSink.Types.Delay"];
  var WAGS_Example_KitchenSink_Types_Empty = $PS["WAGS.Example.KitchenSink.Types.Empty"];
  var WAGS_Example_KitchenSink_Types_Feedback = $PS["WAGS.Example.KitchenSink.Types.Feedback"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var doDelay = WAGS_Control_Functions.ibranch(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return function (lsig) {
          var $2 = $$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) < WAGS_Example_KitchenSink_Timing.timing.ksDelay.end;
          if ($2) {
              return new Data_Either.Right(Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Example_KitchenSink_Types_Delay.deltaKsDelay(v.world)(v.time))(lsig));
          };
          return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(WAGS_Example_KitchenSink_TLP_Feedback.doFeedback)(Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
              reflectSymbol: function () {
                  return "buf";
              }
          })({
              reflectSymbol: function () {
                  return "delay";
              }
          })()()({
              reflectSymbol: function () {
                  return "TPlayBuf";
              }
          })({
              reflectSymbol: function () {
                  return "TDelay";
              }
          })()()()()())({
              source: Type_Proxy["Proxy"].value,
              dest: Type_Proxy["Proxy"].value
          }))(function () {
              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
                  reflectSymbol: function () {
                      return "delay";
                  }
              })({
                  reflectSymbol: function () {
                      return "dmix";
                  }
              })()()({
                  reflectSymbol: function () {
                      return "TDelay";
                  }
              })({
                  reflectSymbol: function () {
                      return "TGain";
                  }
              })()()()()())({
                  source: Type_Proxy["Proxy"].value,
                  dest: Type_Proxy["Proxy"].value
              }))(function () {
                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
                      reflectSymbol: function () {
                          return "buf";
                      }
                  })({
                      reflectSymbol: function () {
                          return "dmix";
                      }
                  })()()({
                      reflectSymbol: function () {
                          return "TPlayBuf";
                      }
                  })({
                      reflectSymbol: function () {
                          return "TGain";
                      }
                  })()()()()())({
                      source: Type_Proxy["Proxy"].value,
                      dest: Type_Proxy["Proxy"].value
                  }))(function () {
                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
                          reflectSymbol: function () {
                              return "dmix";
                          }
                      })({
                          reflectSymbol: function () {
                              return "mix";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())({
                          source: Type_Proxy["Proxy"].value,
                          dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                      }))(function () {
                          return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })()({
                              reflectSymbol: function () {
                                  return "TPlayBuf";
                              }
                          })()()())(Type_Proxy["Proxy"].value))(function () {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                                  reflectSymbol: function () {
                                      return "delay";
                                  }
                              })()({
                                  reflectSymbol: function () {
                                      return "TDelay";
                                  }
                              })()()())(Type_Proxy["Proxy"].value))(function () {
                                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                                      reflectSymbol: function () {
                                          return "dmix";
                                      }
                                  })()({
                                      reflectSymbol: function () {
                                          return "TGain";
                                      }
                                  })()()())(Type_Proxy["Proxy"].value))(function () {
                                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                                          reflectSymbol: function () {
                                              return "dmix";
                                          }
                                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                                          reflectSymbol: function () {
                                              return "dmix";
                                          }
                                      })()())()(WAGS_Create.createStepRLCons({
                                          reflectSymbol: function () {
                                              return "buf";
                                          }
                                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createPlayBuf({
                                          reflectSymbol: function () {
                                              return "buf";
                                          }
                                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLCons({
                                          reflectSymbol: function () {
                                              return "delay";
                                          }
                                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createDelay({
                                          reflectSymbol: function () {
                                              return "delay";
                                          }
                                      })()())()(WAGS_Create.createStepRLCons({
                                          reflectSymbol: function () {
                                              return "highpass";
                                          }
                                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createHighpass({
                                          reflectSymbol: function () {
                                              return "highpass";
                                          }
                                      })()())()(WAGS_Create.createStepRLCons({
                                          reflectSymbol: function () {
                                              return "dmix";
                                          }
                                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createUnit)()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil)))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                                          reflectSymbol: function () {
                                              return "buf";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "dmix";
                                          }
                                      })()()({
                                          reflectSymbol: function () {
                                              return "TPlayBuf";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "TGain";
                                          }
                                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                                          reflectSymbol: function () {
                                              return "delay";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "dmix";
                                          }
                                      })()()({
                                          reflectSymbol: function () {
                                              return "TDelay";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "TGain";
                                          }
                                      })()()()()())(WAGS_Create.connectEdgesToNodeNil)))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                                          reflectSymbol: function () {
                                              return "highpass";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "delay";
                                          }
                                      })()()({
                                          reflectSymbol: function () {
                                              return "THighpass";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "TDelay";
                                          }
                                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                                          reflectSymbol: function () {
                                              return "dmix";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "highpass";
                                          }
                                      })()()({
                                          reflectSymbol: function () {
                                              return "TGain";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "THighpass";
                                          }
                                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil)))(WAGS_Create.connectAfterCreateNil))))(WAGS_Example_KitchenSink_Types_Feedback.ksFeedbackCreate(v.world)))(function () {
                                          return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Connect.iconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Connect.connectInstance({
                                              reflectSymbol: function () {
                                                  return "dmix";
                                              }
                                          })({
                                              reflectSymbol: function () {
                                                  return "mix";
                                              }
                                          })()()({
                                              reflectSymbol: function () {
                                                  return "TGain";
                                              }
                                          })({
                                              reflectSymbol: function () {
                                                  return "TGain";
                                              }
                                          })()()()()())({
                                              source: Type_Proxy["Proxy"].value,
                                              dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                                          }))(function () {
                                              return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig);
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              });
          })));
      };
  });
  exports["doDelay"] = doDelay;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Types.WaveShaper"] = $PS["WAGS.Example.KitchenSink.Types.WaveShaper"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Types.WaveShaper"];
  var Data_Ord = $PS["Data.Ord"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Oversample = $PS["WAGS.Graph.Oversample"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var ksWaveShaperCreate = function (v) {
      return {
          waveShaper: WAGS_Create_Optionals.waveShaper(WAGS_Graph_Oversample.isOversampleTwoX)(v["floatArrays"]["my-waveshaper"])(WAGS_Graph_AudioUnit.OversampleTwoX.value)({
              buf: WAGS_Create_Optionals.playBuf(WAGS_Create_Optionals.playBufCtor2)(v["buffers"]["my-buffer"])
          })
      };
  };
  var deltaKsWaveShaper = (function () {
      var $10 = Data_Ord.max(Data_Ord.ordNumber)(0.0);
      return function ($11) {
          return (function (time) {
              var switchOO = $$Math.remainder(time)(2.0) < 1.0;
              var onOff = (function () {
                  if (switchOO) {
                      return WAGS_Graph_Parameter["_on"];
                  };
                  return WAGS_Graph_Parameter["_off"];
              })();
              var mix = (function () {
                  var $9 = time > WAGS_Example_KitchenSink_Timing.timing.ksWaveShaper.dur - 1.0;
                  if ($9) {
                      return 0.0;
                  };
                  return 1.0;
              })();
              return WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()()))(WAGS_Change["change''Nil"])))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                  mix: mix,
                  buf: {
                      onOff: onOff
                  }
              });
          })($10((function (v) {
              return v - WAGS_Example_KitchenSink_Timing.timing.ksWaveShaper.begin;
          })((function (v) {
              return $$Math.remainder(v)(WAGS_Example_KitchenSink_Timing.pieceTime);
          })($11))));
      };
  })();
  exports["ksWaveShaperCreate"] = ksWaveShaperCreate;
  exports["deltaKsWaveShaper"] = deltaKsWaveShaper;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.TLP.WaveShaper"] = $PS["WAGS.Example.KitchenSink.TLP.WaveShaper"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.TLP.WaveShaper"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var $$Math = $PS["Math"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Destroy = $PS["WAGS.Destroy"];
  var WAGS_Disconnect = $PS["WAGS.Disconnect"];
  var WAGS_Example_KitchenSink_TLP_Delay = $PS["WAGS.Example.KitchenSink.TLP.Delay"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Example_KitchenSink_Types_Delay = $PS["WAGS.Example.KitchenSink.Types.Delay"];
  var WAGS_Example_KitchenSink_Types_Empty = $PS["WAGS.Example.KitchenSink.Types.Empty"];
  var WAGS_Example_KitchenSink_Types_WaveShaper = $PS["WAGS.Example.KitchenSink.Types.WaveShaper"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var doWaveShaper = WAGS_Control_Functions.ibranch(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return function (lsig) {
          var $2 = $$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) < WAGS_Example_KitchenSink_Timing.timing.ksWaveShaper.end;
          if ($2) {
              return new Data_Either.Right(Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Example_KitchenSink_Types_WaveShaper.deltaKsWaveShaper(v.time))(lsig));
          };
          return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(WAGS_Example_KitchenSink_TLP_Delay.doDelay)(Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
              reflectSymbol: function () {
                  return "buf";
              }
          })({
              reflectSymbol: function () {
                  return "waveShaper";
              }
          })()()({
              reflectSymbol: function () {
                  return "TPlayBuf";
              }
          })({
              reflectSymbol: function () {
                  return "TWaveShaper_OversampleTwoX";
              }
          })()()()()())({
              source: Type_Proxy["Proxy"].value,
              dest: Type_Proxy["Proxy"].value
          }))(function () {
              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
                  reflectSymbol: function () {
                      return "waveShaper";
                  }
              })({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()({
                  reflectSymbol: function () {
                      return "TWaveShaper_OversampleTwoX";
                  }
              })({
                  reflectSymbol: function () {
                      return "TGain";
                  }
              })()()()()())({
                  source: Type_Proxy["Proxy"].value,
                  dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
              }))(function () {
                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                      reflectSymbol: function () {
                          return "buf";
                      }
                  })()({
                      reflectSymbol: function () {
                          return "TPlayBuf";
                      }
                  })()()())(Type_Proxy["Proxy"].value))(function () {
                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                          reflectSymbol: function () {
                              return "waveShaper";
                          }
                      })()({
                          reflectSymbol: function () {
                              return "TWaveShaper_OversampleTwoX";
                          }
                      })()()())(Type_Proxy["Proxy"].value))(function () {
                          return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                              reflectSymbol: function () {
                                  return "dmix";
                              }
                          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                              reflectSymbol: function () {
                                  return "dmix";
                              }
                          })()())()(WAGS_Create.createStepRLCons({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createUnit)()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLCons({
                              reflectSymbol: function () {
                                  return "delay";
                              }
                          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createDelay({
                              reflectSymbol: function () {
                                  return "delay";
                              }
                          })()())()(WAGS_Create.createStepRLCons({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createPlayBuf({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil)))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })({
                              reflectSymbol: function () {
                                  return "dmix";
                              }
                          })()()({
                              reflectSymbol: function () {
                                  return "TPlayBuf";
                              }
                          })({
                              reflectSymbol: function () {
                                  return "TGain";
                              }
                          })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                              reflectSymbol: function () {
                                  return "delay";
                              }
                          })({
                              reflectSymbol: function () {
                                  return "dmix";
                              }
                          })()()({
                              reflectSymbol: function () {
                                  return "TDelay";
                              }
                          })({
                              reflectSymbol: function () {
                                  return "TGain";
                              }
                          })()()()()())(WAGS_Create.connectEdgesToNodeNil)))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })({
                              reflectSymbol: function () {
                                  return "delay";
                              }
                          })()()({
                              reflectSymbol: function () {
                                  return "TPlayBuf";
                              }
                          })({
                              reflectSymbol: function () {
                                  return "TDelay";
                              }
                          })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil)))(WAGS_Create.connectAfterCreateNil))))(WAGS_Example_KitchenSink_Types_Delay.ksDelayCreate(v.world)))(function () {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Connect.iconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Connect.connectInstance({
                                  reflectSymbol: function () {
                                      return "dmix";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "mix";
                                  }
                              })()()({
                                  reflectSymbol: function () {
                                      return "TGain";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "TGain";
                                  }
                              })()()()()())({
                                  source: Type_Proxy["Proxy"].value,
                                  dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                              }))(function () {
                                  return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig);
                              });
                          });
                      });
                  });
              });
          })));
      };
  });
  exports["doWaveShaper"] = doWaveShaper;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Types.Microphone"] = $PS["WAGS.Example.KitchenSink.Types.Microphone"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Types.Microphone"];
  var Data_Ord = $PS["Data.Ord"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var ksMicrophoneCreate = function (v) {
      return {
          microphone: WAGS_Create_Optionals.microphone(v.microphone)
      };
  };
  var deltaKsMicrophone = (function () {
      var $5 = Data_Ord.max(Data_Ord.ordNumber)(0.0);
      return function ($6) {
          return (function (time) {
              var rad = $$Math.pi * time;
              return WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil))))({
                  mix: 0.1 - 0.1 * $$Math.cos(rad)
              });
          })($5((function (v) {
              return v - WAGS_Example_KitchenSink_Timing.timing.ksMicrophone.begin;
          })((function (v) {
              return $$Math.remainder(v)(WAGS_Example_KitchenSink_Timing.pieceTime);
          })($6))));
      };
  })();
  exports["ksMicrophoneCreate"] = ksMicrophoneCreate;
  exports["deltaKsMicrophone"] = deltaKsMicrophone;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.TLP.Microphone"] = $PS["WAGS.Example.KitchenSink.TLP.Microphone"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.TLP.Microphone"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var $$Math = $PS["Math"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Destroy = $PS["WAGS.Destroy"];
  var WAGS_Disconnect = $PS["WAGS.Disconnect"];
  var WAGS_Example_KitchenSink_TLP_WaveShaper = $PS["WAGS.Example.KitchenSink.TLP.WaveShaper"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Example_KitchenSink_Types_Empty = $PS["WAGS.Example.KitchenSink.Types.Empty"];
  var WAGS_Example_KitchenSink_Types_Microphone = $PS["WAGS.Example.KitchenSink.Types.Microphone"];
  var WAGS_Example_KitchenSink_Types_WaveShaper = $PS["WAGS.Example.KitchenSink.Types.WaveShaper"];
  var WAGS_Graph_Oversample = $PS["WAGS.Graph.Oversample"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var doMicrophone = WAGS_Control_Functions.ibranch(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return function (lsig) {
          var $2 = $$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) < WAGS_Example_KitchenSink_Timing.timing.ksMicrophone.end;
          if ($2) {
              return new Data_Either.Right(Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Example_KitchenSink_Types_Microphone.deltaKsMicrophone(v.time))(lsig));
          };
          return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(WAGS_Example_KitchenSink_TLP_WaveShaper.doWaveShaper)(Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
              reflectSymbol: function () {
                  return "microphone";
              }
          })({
              reflectSymbol: function () {
                  return "mix";
              }
          })()()({
              reflectSymbol: function () {
                  return "TMicrophone";
              }
          })({
              reflectSymbol: function () {
                  return "TGain";
              }
          })()()()()())({
              source: Type_Proxy["Proxy"].value,
              dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
          }))(function () {
              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                  reflectSymbol: function () {
                      return "microphone";
                  }
              })()({
                  reflectSymbol: function () {
                      return "TMicrophone";
                  }
              })()()())(Type_Proxy["Proxy"].value))(function () {
                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                      reflectSymbol: function () {
                          return "waveShaper";
                      }
                  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createWaveShaper({
                      reflectSymbol: function () {
                          return "waveShaper";
                      }
                  })(WAGS_Graph_Oversample.isOversampleTwoX)()())()(WAGS_Create.createStepRLCons({
                      reflectSymbol: function () {
                          return "buf";
                      }
                  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createPlayBuf({
                      reflectSymbol: function () {
                          return "buf";
                      }
                  })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                      reflectSymbol: function () {
                          return "buf";
                      }
                  })({
                      reflectSymbol: function () {
                          return "waveShaper";
                      }
                  })()()({
                      reflectSymbol: function () {
                          return "TPlayBuf";
                      }
                  })({
                      reflectSymbol: function () {
                          return "TWaveShaper_OversampleTwoX";
                      }
                  })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(WAGS_Example_KitchenSink_Types_WaveShaper.ksWaveShaperCreate(v.world)))(function () {
                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Connect.iconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "waveShaper";
                          }
                      })({
                          reflectSymbol: function () {
                              return "mix";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TWaveShaper_OversampleTwoX";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())({
                          source: Type_Proxy["Proxy"].value,
                          dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                      }))(function () {
                          return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig);
                      });
                  });
              });
          })));
      };
  });
  exports["doMicrophone"] = doMicrophone;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Types.Highpass"] = $PS["WAGS.Example.KitchenSink.Types.Highpass"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Types.Highpass"];
  var ConvertableOptions = $PS["ConvertableOptions"];
  var Data_Ord = $PS["Data.Ord"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Math = $PS["WAGS.Math"];                
  var ksHighpassCreate = function (v) {
      return {
          highpass: WAGS_Create_Optionals.highpass(WAGS_Create_Optionals.highpassCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertHighpassFrequency(WAGS_Graph_Paramable.paramableNumber))()()()({
              reflectSymbol: function () {
                  return "freq";
              }
          })))(ConvertableOptions.defaultsRecord()())))({
              freq: 300.0
          })({
              buf: WAGS_Create_Optionals.playBuf(WAGS_Create_Optionals.playBufCtor2)(v["buffers"]["my-buffer"])
          })
      };
  };
  var deltaKsHighpass = function (v) {
      var $14 = Data_Ord.max(Data_Ord.ordNumber)(0.0);
      return function ($15) {
          return (function (time) {
              var switchW = $$Math.remainder(time)(4.0) < 2.0;
              var switchOO = $$Math.remainder(time)(2.0) < 1.0;
              var onOff = (function () {
                  if (switchOO) {
                      return WAGS_Graph_Parameter["_on"];
                  };
                  return WAGS_Graph_Parameter["_off"];
              })();
              var mix = (function () {
                  var $9 = time > WAGS_Example_KitchenSink_Timing.timing.ksHighpass.dur - 1.0;
                  if ($9) {
                      return 0.0;
                  };
                  return 1.0;
              })();
              var highpass = WAGS_Math.calcSlope(0.0)(300.0)(WAGS_Example_KitchenSink_Timing.timing.ksHighpass.dur)(2000.0)(time);
              var buffer = (function () {
                  if (switchW) {
                      return v["buffers"]["my-buffer"];
                  };
                  return v.buffers.shruti;
              })();
              return WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "buffer";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedBuffer({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()())(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "highpass";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTHighpass)(WAGS_Change.oneShotChangeHighpass)(WAGS_Change.changeXHighpass({
                  reflectSymbol: function () {
                      return "highpass";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil))))))({
                  mix: mix,
                  highpass: highpass,
                  buf: {
                      onOff: onOff,
                      buffer: buffer
                  }
              });
          })($14((function (v1) {
              return v1 - WAGS_Example_KitchenSink_Timing.timing.ksHighpass.begin;
          })((function (v1) {
              return $$Math.remainder(v1)(WAGS_Example_KitchenSink_Timing.pieceTime);
          })($15))));
      };
  };
  exports["ksHighpassCreate"] = ksHighpassCreate;
  exports["deltaKsHighpass"] = deltaKsHighpass;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.TLP.Highpass"] = $PS["WAGS.Example.KitchenSink.TLP.Highpass"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.TLP.Highpass"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var $$Math = $PS["Math"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Destroy = $PS["WAGS.Destroy"];
  var WAGS_Disconnect = $PS["WAGS.Disconnect"];
  var WAGS_Example_KitchenSink_TLP_Microphone = $PS["WAGS.Example.KitchenSink.TLP.Microphone"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Example_KitchenSink_Types_Empty = $PS["WAGS.Example.KitchenSink.Types.Empty"];
  var WAGS_Example_KitchenSink_Types_Highpass = $PS["WAGS.Example.KitchenSink.Types.Highpass"];
  var WAGS_Example_KitchenSink_Types_Microphone = $PS["WAGS.Example.KitchenSink.Types.Microphone"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var doHighpass = WAGS_Control_Functions.ibranch(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return function (lsig) {
          var $2 = $$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) < WAGS_Example_KitchenSink_Timing.timing.ksHighpass.end;
          if ($2) {
              return new Data_Either.Right(Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Example_KitchenSink_Types_Highpass.deltaKsHighpass(v.world)(v.time))(lsig));
          };
          return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(WAGS_Example_KitchenSink_TLP_Microphone.doMicrophone)(Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
              reflectSymbol: function () {
                  return "buf";
              }
          })({
              reflectSymbol: function () {
                  return "highpass";
              }
          })()()({
              reflectSymbol: function () {
                  return "TPlayBuf";
              }
          })({
              reflectSymbol: function () {
                  return "THighpass";
              }
          })()()()()())({
              source: Type_Proxy["Proxy"].value,
              dest: Type_Proxy["Proxy"].value
          }))(function () {
              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
                  reflectSymbol: function () {
                      return "highpass";
                  }
              })({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()({
                  reflectSymbol: function () {
                      return "THighpass";
                  }
              })({
                  reflectSymbol: function () {
                      return "TGain";
                  }
              })()()()()())({
                  source: Type_Proxy["Proxy"].value,
                  dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
              }))(function () {
                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                      reflectSymbol: function () {
                          return "highpass";
                      }
                  })()({
                      reflectSymbol: function () {
                          return "THighpass";
                      }
                  })()()())(Type_Proxy["Proxy"].value))(function () {
                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                          reflectSymbol: function () {
                              return "buf";
                          }
                      })()({
                          reflectSymbol: function () {
                              return "TPlayBuf";
                          }
                      })()()())(Type_Proxy["Proxy"].value))(function () {
                          return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                              reflectSymbol: function () {
                                  return "microphone";
                              }
                          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createMicrophone()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))))(WAGS_Example_KitchenSink_Types_Microphone.ksMicrophoneCreate(v.world)))(function () {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Connect.iconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Connect.connectInstance({
                                  reflectSymbol: function () {
                                      return "microphone";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "mix";
                                  }
                              })()()({
                                  reflectSymbol: function () {
                                      return "TMicrophone";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "TGain";
                                  }
                              })()()()()())({
                                  source: Type_Proxy["Proxy"].value,
                                  dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                              }))(function () {
                                  return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig);
                              });
                          });
                      });
                  });
              });
          })));
      };
  });
  exports["doHighpass"] = doHighpass;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Types.Peaking"] = $PS["WAGS.Example.KitchenSink.Types.Peaking"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Types.Peaking"];
  var ConvertableOptions = $PS["ConvertableOptions"];
  var Data_Ord = $PS["Data.Ord"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Math = $PS["WAGS.Math"];                
  var ksPeakingCreate = function (v) {
      return {
          peaking: WAGS_Create_Optionals.peaking(WAGS_Create_Optionals.peakingCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertPeakingFrequency(WAGS_Graph_Paramable.paramableNumber))()()()({
              reflectSymbol: function () {
                  return "freq";
              }
          })))(ConvertableOptions.defaultsRecord()())))({
              freq: 300.0
          })({
              buf: WAGS_Create_Optionals.playBuf(WAGS_Create_Optionals.playBufCtor2)(v["buffers"]["my-buffer"])
          })
      };
  };
  var deltaKsPeaking = function (v) {
      var $14 = Data_Ord.max(Data_Ord.ordNumber)(0.0);
      return function ($15) {
          return (function (time) {
              var switchW = $$Math.remainder(time)(4.0) < 2.0;
              var switchOO = $$Math.remainder(time)(2.0) < 1.0;
              var peaking = WAGS_Math.calcSlope(0.0)(300.0)(WAGS_Example_KitchenSink_Timing.timing.ksPeaking.dur)(2000.0)(time);
              var onOff = (function () {
                  if (switchOO) {
                      return WAGS_Graph_Parameter["_on"];
                  };
                  return WAGS_Graph_Parameter["_off"];
              })();
              var mix = (function () {
                  var $9 = time > WAGS_Example_KitchenSink_Timing.timing.ksPeaking.dur - 1.0;
                  if ($9) {
                      return 0.0;
                  };
                  return 1.0;
              })();
              var buffer = (function () {
                  if (switchW) {
                      return v["buffers"]["my-buffer"];
                  };
                  return v.buffers.shruti;
              })();
              return WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "buffer";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedBuffer({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()())(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "peaking";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTPeaking)(WAGS_Change.oneShotChangePeaking)(WAGS_Change.changeXPeaking({
                  reflectSymbol: function () {
                      return "peaking";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil))))))({
                  mix: mix,
                  peaking: peaking,
                  buf: {
                      onOff: onOff,
                      buffer: buffer
                  }
              });
          })($14((function (v1) {
              return v1 - WAGS_Example_KitchenSink_Timing.timing.ksPeaking.begin;
          })((function (v1) {
              return $$Math.remainder(v1)(WAGS_Example_KitchenSink_Timing.pieceTime);
          })($15))));
      };
  };
  exports["ksPeakingCreate"] = ksPeakingCreate;
  exports["deltaKsPeaking"] = deltaKsPeaking;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.TLP.Peaking"] = $PS["WAGS.Example.KitchenSink.TLP.Peaking"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.TLP.Peaking"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Apply_Indexed = $PS["Control.Apply.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var $$Math = $PS["Math"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Destroy = $PS["WAGS.Destroy"];
  var WAGS_Disconnect = $PS["WAGS.Disconnect"];
  var WAGS_Example_KitchenSink_TLP_Highpass = $PS["WAGS.Example.KitchenSink.TLP.Highpass"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Example_KitchenSink_Types_Empty = $PS["WAGS.Example.KitchenSink.Types.Empty"];
  var WAGS_Example_KitchenSink_Types_Highpass = $PS["WAGS.Example.KitchenSink.Types.Highpass"];
  var WAGS_Example_KitchenSink_Types_Peaking = $PS["WAGS.Example.KitchenSink.Types.Peaking"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var doPeaking = WAGS_Control_Functions.ibranch(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return function (lsig) {
          var $2 = $$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) < WAGS_Example_KitchenSink_Timing.timing.ksPeaking.end;
          if ($2) {
              return Data_Either.Right.create(Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(Control_Apply_Indexed.iapplySecond(WAGS_Control_Indexed.ixApplyIxWAG)(WAGS_Control_Functions.imodifyRes(Data_Function["const"]("Using a peaking filter")))(WAGS_Example_KitchenSink_Types_Peaking.deltaKsPeaking(v.world)(v.time)))(lsig));
          };
          return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(WAGS_Example_KitchenSink_TLP_Highpass.doHighpass)(Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
              reflectSymbol: function () {
                  return "buf";
              }
          })({
              reflectSymbol: function () {
                  return "peaking";
              }
          })()()({
              reflectSymbol: function () {
                  return "TPlayBuf";
              }
          })({
              reflectSymbol: function () {
                  return "TPeaking";
              }
          })()()()()())({
              source: Type_Proxy["Proxy"].value,
              dest: Type_Proxy["Proxy"].value
          }))(function () {
              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
                  reflectSymbol: function () {
                      return "peaking";
                  }
              })({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()({
                  reflectSymbol: function () {
                      return "TPeaking";
                  }
              })({
                  reflectSymbol: function () {
                      return "TGain";
                  }
              })()()()()())({
                  source: Type_Proxy["Proxy"].value,
                  dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
              }))(function () {
                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                      reflectSymbol: function () {
                          return "peaking";
                      }
                  })()({
                      reflectSymbol: function () {
                          return "TPeaking";
                      }
                  })()()())(Type_Proxy["Proxy"].value))(function () {
                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                          reflectSymbol: function () {
                              return "buf";
                          }
                      })()({
                          reflectSymbol: function () {
                              return "TPlayBuf";
                          }
                      })()()())(Type_Proxy["Proxy"].value))(function () {
                          return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                              reflectSymbol: function () {
                                  return "highpass";
                              }
                          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createHighpass({
                              reflectSymbol: function () {
                                  return "highpass";
                              }
                          })()())()(WAGS_Create.createStepRLCons({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createPlayBuf({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })({
                              reflectSymbol: function () {
                                  return "highpass";
                              }
                          })()()({
                              reflectSymbol: function () {
                                  return "TPlayBuf";
                              }
                          })({
                              reflectSymbol: function () {
                                  return "THighpass";
                              }
                          })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(WAGS_Example_KitchenSink_Types_Highpass.ksHighpassCreate(v.world)))(function () {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Connect.iconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Connect.connectInstance({
                                  reflectSymbol: function () {
                                      return "highpass";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "mix";
                                  }
                              })()()({
                                  reflectSymbol: function () {
                                      return "THighpass";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "TGain";
                                  }
                              })()()()()())({
                                  source: Type_Proxy["Proxy"].value,
                                  dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                              }))(function () {
                                  return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig);
                              });
                          });
                      });
                  });
              });
          })));
      };
  });
  exports["doPeaking"] = doPeaking;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Types.Notch"] = $PS["WAGS.Example.KitchenSink.Types.Notch"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Types.Notch"];
  var ConvertableOptions = $PS["ConvertableOptions"];
  var Data_Ord = $PS["Data.Ord"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Math = $PS["WAGS.Math"];                
  var ksNotchCreate = function (v) {
      return {
          notch: WAGS_Create_Optionals.notch(WAGS_Create_Optionals.notchCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertNotchFrequency(WAGS_Graph_Paramable.paramableNumber))()()()({
              reflectSymbol: function () {
                  return "freq";
              }
          })))(ConvertableOptions.defaultsRecord()())))({
              freq: 300.0
          })({
              buf: WAGS_Create_Optionals.playBuf(WAGS_Create_Optionals.playBufCtor2)(v["buffers"]["my-buffer"])
          })
      };
  };
  var deltaKsNotch = function (v) {
      var $14 = Data_Ord.max(Data_Ord.ordNumber)(0.0);
      return function ($15) {
          return (function (time) {
              var switchW = $$Math.remainder(time)(4.0) < 2.0;
              var switchOO = $$Math.remainder(time)(2.0) < 1.0;
              var onOff = (function () {
                  if (switchOO) {
                      return WAGS_Graph_Parameter["_on"];
                  };
                  return WAGS_Graph_Parameter["_off"];
              })();
              var notch = WAGS_Math.calcSlope(0.0)(300.0)(WAGS_Example_KitchenSink_Timing.timing.ksNotch.dur)(2000.0)(time);
              var mix = (function () {
                  var $9 = time > WAGS_Example_KitchenSink_Timing.timing.ksNotch.dur - 1.0;
                  if ($9) {
                      return 0.0;
                  };
                  return 1.0;
              })();
              var buffer = (function () {
                  if (switchW) {
                      return v["buffers"]["my-buffer"];
                  };
                  return v.buffers.shruti;
              })();
              return WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "buffer";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedBuffer({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()())(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "notch";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTNotch)(WAGS_Change.oneShotChangeNotch)(WAGS_Change.changeXNotch({
                  reflectSymbol: function () {
                      return "notch";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil))))))({
                  mix: mix,
                  notch: notch,
                  buf: {
                      onOff: onOff,
                      buffer: buffer
                  }
              });
          })($14((function (v1) {
              return v1 - WAGS_Example_KitchenSink_Timing.timing.ksNotch.begin;
          })((function (v1) {
              return $$Math.remainder(v1)(WAGS_Example_KitchenSink_Timing.pieceTime);
          })($15))));
      };
  };
  exports["ksNotchCreate"] = ksNotchCreate;
  exports["deltaKsNotch"] = deltaKsNotch;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.TLP.Notch"] = $PS["WAGS.Example.KitchenSink.TLP.Notch"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.TLP.Notch"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var $$Math = $PS["Math"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Destroy = $PS["WAGS.Destroy"];
  var WAGS_Disconnect = $PS["WAGS.Disconnect"];
  var WAGS_Example_KitchenSink_TLP_Peaking = $PS["WAGS.Example.KitchenSink.TLP.Peaking"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Example_KitchenSink_Types_Empty = $PS["WAGS.Example.KitchenSink.Types.Empty"];
  var WAGS_Example_KitchenSink_Types_Notch = $PS["WAGS.Example.KitchenSink.Types.Notch"];
  var WAGS_Example_KitchenSink_Types_Peaking = $PS["WAGS.Example.KitchenSink.Types.Peaking"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var doNotch = WAGS_Control_Functions.ibranch(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return function (lsig) {
          var $2 = $$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) < WAGS_Example_KitchenSink_Timing.timing.ksNotch.end;
          if ($2) {
              return new Data_Either.Right(Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Example_KitchenSink_Types_Notch.deltaKsNotch(v.world)(v.time))(lsig));
          };
          return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(WAGS_Example_KitchenSink_TLP_Peaking.doPeaking)(Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
              reflectSymbol: function () {
                  return "buf";
              }
          })({
              reflectSymbol: function () {
                  return "notch";
              }
          })()()({
              reflectSymbol: function () {
                  return "TPlayBuf";
              }
          })({
              reflectSymbol: function () {
                  return "TNotch";
              }
          })()()()()())({
              source: Type_Proxy["Proxy"].value,
              dest: Type_Proxy["Proxy"].value
          }))(function () {
              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
                  reflectSymbol: function () {
                      return "notch";
                  }
              })({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()({
                  reflectSymbol: function () {
                      return "TNotch";
                  }
              })({
                  reflectSymbol: function () {
                      return "TGain";
                  }
              })()()()()())({
                  source: Type_Proxy["Proxy"].value,
                  dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
              }))(function () {
                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                      reflectSymbol: function () {
                          return "notch";
                      }
                  })()({
                      reflectSymbol: function () {
                          return "TNotch";
                      }
                  })()()())(Type_Proxy["Proxy"].value))(function () {
                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                          reflectSymbol: function () {
                              return "buf";
                          }
                      })()({
                          reflectSymbol: function () {
                              return "TPlayBuf";
                          }
                      })()()())(Type_Proxy["Proxy"].value))(function () {
                          return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                              reflectSymbol: function () {
                                  return "peaking";
                              }
                          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createPeaking({
                              reflectSymbol: function () {
                                  return "peaking";
                              }
                          })()())()(WAGS_Create.createStepRLCons({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createPlayBuf({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })({
                              reflectSymbol: function () {
                                  return "peaking";
                              }
                          })()()({
                              reflectSymbol: function () {
                                  return "TPlayBuf";
                              }
                          })({
                              reflectSymbol: function () {
                                  return "TPeaking";
                              }
                          })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(WAGS_Example_KitchenSink_Types_Peaking.ksPeakingCreate(v.world)))(function () {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Connect.iconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Connect.connectInstance({
                                  reflectSymbol: function () {
                                      return "peaking";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "mix";
                                  }
                              })()()({
                                  reflectSymbol: function () {
                                      return "TPeaking";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "TGain";
                                  }
                              })()()()()())({
                                  source: Type_Proxy["Proxy"].value,
                                  dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                              }))(function () {
                                  return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig);
                              });
                          });
                      });
                  });
              });
          })));
      };
  });
  exports["doNotch"] = doNotch;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Types.Bandpass"] = $PS["WAGS.Example.KitchenSink.Types.Bandpass"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Types.Bandpass"];
  var ConvertableOptions = $PS["ConvertableOptions"];
  var Data_Ord = $PS["Data.Ord"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Math = $PS["WAGS.Math"];                
  var ksBandpassCreate = function (v) {
      return {
          bandpass: WAGS_Create_Optionals.bandpass(WAGS_Create_Optionals.bandpassCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertBandpassFrequency(WAGS_Graph_Paramable.paramableNumber))()()()({
              reflectSymbol: function () {
                  return "freq";
              }
          })))(ConvertableOptions.defaultsRecord()())))({
              freq: 300.0
          })({
              buf: WAGS_Create_Optionals.playBuf(WAGS_Create_Optionals.playBufCtor2)(v["buffers"]["my-buffer"])
          })
      };
  };
  var deltaKsBandpass = function (v) {
      var $14 = Data_Ord.max(Data_Ord.ordNumber)(0.0);
      return function ($15) {
          return (function (time) {
              var switchW = $$Math.remainder(time)(4.0) < 2.0;
              var switchOO = $$Math.remainder(time)(2.0) < 1.0;
              var onOff = (function () {
                  if (switchOO) {
                      return WAGS_Graph_Parameter["_on"];
                  };
                  return WAGS_Graph_Parameter["_off"];
              })();
              var buffer = (function () {
                  if (switchW) {
                      return v["buffers"]["my-buffer"];
                  };
                  return v.buffers.shruti;
              })();
              var changes = {
                  mix: (function () {
                      var $10 = time > WAGS_Example_KitchenSink_Timing.timing.ksBandpass.dur - 1.0;
                      if ($10) {
                          return 0.0;
                      };
                      return 1.0;
                  })(),
                  bandpass: {
                      freq: WAGS_Math.calcSlope(0.0)(300.0)(WAGS_Example_KitchenSink_Timing.timing.ksBandpass.dur)(2000.0)(time),
                      q: WAGS_Math.calcSlope(0.0)(1.0)(WAGS_Example_KitchenSink_Timing.timing.ksBandpass.dur)(20.0)(time)
                  },
                  buf: {
                      onOff: onOff,
                      buffer: buffer
                  }
              };
              return WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "bandpass";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })({
                  reflectSymbol: function () {
                      return "bandpass";
                  }
              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                  reflectSymbol: function () {
                      return "bandpass";
                  }
              })()()()))(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "q";
                  }
              })({
                  reflectSymbol: function () {
                      return "bandpass";
                  }
              })()(WAGS_Change.canBeChangedQN(WAGS_Change.canBeChangedQ({
                  reflectSymbol: function () {
                      return "bandpass";
                  }
              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "buffer";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedBuffer({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()())(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil))))))(changes);
          })($14((function (v1) {
              return v1 - WAGS_Example_KitchenSink_Timing.timing.ksBandpass.begin;
          })((function (v1) {
              return $$Math.remainder(v1)(WAGS_Example_KitchenSink_Timing.pieceTime);
          })($15))));
      };
  };
  exports["ksBandpassCreate"] = ksBandpassCreate;
  exports["deltaKsBandpass"] = deltaKsBandpass;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.TLP.Bandpass"] = $PS["WAGS.Example.KitchenSink.TLP.Bandpass"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.TLP.Bandpass"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var $$Math = $PS["Math"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Destroy = $PS["WAGS.Destroy"];
  var WAGS_Disconnect = $PS["WAGS.Disconnect"];
  var WAGS_Example_KitchenSink_TLP_Notch = $PS["WAGS.Example.KitchenSink.TLP.Notch"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Example_KitchenSink_Types_Bandpass = $PS["WAGS.Example.KitchenSink.Types.Bandpass"];
  var WAGS_Example_KitchenSink_Types_Empty = $PS["WAGS.Example.KitchenSink.Types.Empty"];
  var WAGS_Example_KitchenSink_Types_Notch = $PS["WAGS.Example.KitchenSink.Types.Notch"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var doBandpass = WAGS_Control_Functions.ibranch(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return function (lsig) {
          var $2 = $$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) < WAGS_Example_KitchenSink_Timing.timing.ksBandpass.end;
          if ($2) {
              return new Data_Either.Right(Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Example_KitchenSink_Types_Bandpass.deltaKsBandpass(v.world)(v.time))(lsig));
          };
          return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(WAGS_Example_KitchenSink_TLP_Notch.doNotch)(Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
              reflectSymbol: function () {
                  return "buf";
              }
          })({
              reflectSymbol: function () {
                  return "bandpass";
              }
          })()()({
              reflectSymbol: function () {
                  return "TPlayBuf";
              }
          })({
              reflectSymbol: function () {
                  return "TBandpass";
              }
          })()()()()())({
              source: Type_Proxy["Proxy"].value,
              dest: Type_Proxy["Proxy"].value
          }))(function () {
              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
                  reflectSymbol: function () {
                      return "bandpass";
                  }
              })({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()({
                  reflectSymbol: function () {
                      return "TBandpass";
                  }
              })({
                  reflectSymbol: function () {
                      return "TGain";
                  }
              })()()()()())({
                  source: Type_Proxy["Proxy"].value,
                  dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
              }))(function () {
                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                      reflectSymbol: function () {
                          return "bandpass";
                      }
                  })()({
                      reflectSymbol: function () {
                          return "TBandpass";
                      }
                  })()()())(Type_Proxy["Proxy"].value))(function () {
                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                          reflectSymbol: function () {
                              return "buf";
                          }
                      })()({
                          reflectSymbol: function () {
                              return "TPlayBuf";
                          }
                      })()()())(Type_Proxy["Proxy"].value))(function () {
                          return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                              reflectSymbol: function () {
                                  return "notch";
                              }
                          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createNotch({
                              reflectSymbol: function () {
                                  return "notch";
                              }
                          })()())()(WAGS_Create.createStepRLCons({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createPlayBuf({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })({
                              reflectSymbol: function () {
                                  return "notch";
                              }
                          })()()({
                              reflectSymbol: function () {
                                  return "TPlayBuf";
                              }
                          })({
                              reflectSymbol: function () {
                                  return "TNotch";
                              }
                          })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(WAGS_Example_KitchenSink_Types_Notch.ksNotchCreate(v.world)))(function () {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Connect.iconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Connect.connectInstance({
                                  reflectSymbol: function () {
                                      return "notch";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "mix";
                                  }
                              })()()({
                                  reflectSymbol: function () {
                                      return "TNotch";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "TGain";
                                  }
                              })()()()()())({
                                  source: Type_Proxy["Proxy"].value,
                                  dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                              }))(function () {
                                  return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig);
                              });
                          });
                      });
                  });
              });
          })));
      };
  });
  exports["doBandpass"] = doBandpass;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Types.Lowshelf"] = $PS["WAGS.Example.KitchenSink.Types.Lowshelf"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Types.Lowshelf"];
  var ConvertableOptions = $PS["ConvertableOptions"];
  var Data_Ord = $PS["Data.Ord"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Math = $PS["WAGS.Math"];                
  var ksLowshelfCreate = function (v) {
      return {
          lowshelf: WAGS_Create_Optionals.lowshelf(WAGS_Create_Optionals.lowshelfCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertLowshelfFrequency(WAGS_Graph_Paramable.paramableNumber))()()()({
              reflectSymbol: function () {
                  return "freq";
              }
          })))(ConvertableOptions.defaultsRecord()())))({
              freq: 300.0
          })({
              buf: WAGS_Create_Optionals.playBuf(WAGS_Create_Optionals.playBufCtor2)(v["buffers"]["my-buffer"])
          })
      };
  };
  var deltaKsLowshelf = function (v) {
      var $14 = Data_Ord.max(Data_Ord.ordNumber)(0.0);
      return function ($15) {
          return (function (time) {
              var switchW = $$Math.remainder(time)(4.0) < 2.0;
              var switchOO = $$Math.remainder(time)(2.0) < 1.0;
              var onOff = (function () {
                  if (switchOO) {
                      return WAGS_Graph_Parameter["_on"];
                  };
                  return WAGS_Graph_Parameter["_off"];
              })();
              var mix = (function () {
                  var $9 = time > WAGS_Example_KitchenSink_Timing.timing.ksLowshelf.dur - 1.0;
                  if ($9) {
                      return 0.0;
                  };
                  return 1.0;
              })();
              var lowshelf = WAGS_Math.calcSlope(0.0)(300.0)(WAGS_Example_KitchenSink_Timing.timing.ksLowshelf.dur)(2000.0)(time);
              var buffer = (function () {
                  if (switchW) {
                      return v["buffers"]["my-buffer"];
                  };
                  return v.buffers.shruti;
              })();
              return WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "buffer";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedBuffer({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()())(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "lowshelf";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTLowshelf)(WAGS_Change.oneShotChangeLowshelf)(WAGS_Change.changeXLowshelf({
                  reflectSymbol: function () {
                      return "lowshelf";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil))))))({
                  mix: mix,
                  lowshelf: lowshelf,
                  buf: {
                      onOff: onOff,
                      buffer: buffer
                  }
              });
          })($14((function (v1) {
              return v1 - WAGS_Example_KitchenSink_Timing.timing.ksLowshelf.begin;
          })((function (v1) {
              return $$Math.remainder(v1)(WAGS_Example_KitchenSink_Timing.pieceTime);
          })($15))));
      };
  };
  exports["ksLowshelfCreate"] = ksLowshelfCreate;
  exports["deltaKsLowshelf"] = deltaKsLowshelf;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.TLP.Lowshelf"] = $PS["WAGS.Example.KitchenSink.TLP.Lowshelf"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.TLP.Lowshelf"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var $$Math = $PS["Math"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Destroy = $PS["WAGS.Destroy"];
  var WAGS_Disconnect = $PS["WAGS.Disconnect"];
  var WAGS_Example_KitchenSink_TLP_Bandpass = $PS["WAGS.Example.KitchenSink.TLP.Bandpass"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Example_KitchenSink_Types_Bandpass = $PS["WAGS.Example.KitchenSink.Types.Bandpass"];
  var WAGS_Example_KitchenSink_Types_Empty = $PS["WAGS.Example.KitchenSink.Types.Empty"];
  var WAGS_Example_KitchenSink_Types_Lowshelf = $PS["WAGS.Example.KitchenSink.Types.Lowshelf"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var doLowshelf = WAGS_Control_Functions.ibranch(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return function (lsig) {
          var $2 = $$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) < WAGS_Example_KitchenSink_Timing.timing.ksLowshelf.end;
          if ($2) {
              return new Data_Either.Right(Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Example_KitchenSink_Types_Lowshelf.deltaKsLowshelf(v.world)(v.time))(lsig));
          };
          return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(WAGS_Example_KitchenSink_TLP_Bandpass.doBandpass)(Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
              reflectSymbol: function () {
                  return "buf";
              }
          })({
              reflectSymbol: function () {
                  return "lowshelf";
              }
          })()()({
              reflectSymbol: function () {
                  return "TPlayBuf";
              }
          })({
              reflectSymbol: function () {
                  return "TLowshelf";
              }
          })()()()()())({
              source: Type_Proxy["Proxy"].value,
              dest: Type_Proxy["Proxy"].value
          }))(function () {
              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
                  reflectSymbol: function () {
                      return "lowshelf";
                  }
              })({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()({
                  reflectSymbol: function () {
                      return "TLowshelf";
                  }
              })({
                  reflectSymbol: function () {
                      return "TGain";
                  }
              })()()()()())({
                  source: Type_Proxy["Proxy"].value,
                  dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
              }))(function () {
                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                      reflectSymbol: function () {
                          return "lowshelf";
                      }
                  })()({
                      reflectSymbol: function () {
                          return "TLowshelf";
                      }
                  })()()())(Type_Proxy["Proxy"].value))(function () {
                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                          reflectSymbol: function () {
                              return "buf";
                          }
                      })()({
                          reflectSymbol: function () {
                              return "TPlayBuf";
                          }
                      })()()())(Type_Proxy["Proxy"].value))(function () {
                          return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                              reflectSymbol: function () {
                                  return "bandpass";
                              }
                          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createBandpass({
                              reflectSymbol: function () {
                                  return "bandpass";
                              }
                          })()())()(WAGS_Create.createStepRLCons({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createPlayBuf({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })({
                              reflectSymbol: function () {
                                  return "bandpass";
                              }
                          })()()({
                              reflectSymbol: function () {
                                  return "TPlayBuf";
                              }
                          })({
                              reflectSymbol: function () {
                                  return "TBandpass";
                              }
                          })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(WAGS_Example_KitchenSink_Types_Bandpass.ksBandpassCreate(v.world)))(function () {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Connect.iconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Connect.connectInstance({
                                  reflectSymbol: function () {
                                      return "bandpass";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "mix";
                                  }
                              })()()({
                                  reflectSymbol: function () {
                                      return "TBandpass";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "TGain";
                                  }
                              })()()()()())({
                                  source: Type_Proxy["Proxy"].value,
                                  dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                              }))(function () {
                                  return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig);
                              });
                          });
                      });
                  });
              });
          })));
      };
  });
  exports["doLowshelf"] = doLowshelf;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Types.Highshelf"] = $PS["WAGS.Example.KitchenSink.Types.Highshelf"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Types.Highshelf"];
  var ConvertableOptions = $PS["ConvertableOptions"];
  var Data_Ord = $PS["Data.Ord"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Math = $PS["WAGS.Math"];                
  var ksHighshelfCreate = function (v) {
      return {
          highshelf: WAGS_Create_Optionals.highshelf(WAGS_Create_Optionals.highshelfCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertHighshelfFrequency(WAGS_Graph_Paramable.paramableNumber))()()()({
              reflectSymbol: function () {
                  return "freq";
              }
          })))(ConvertableOptions.defaultsRecord()())))({
              freq: 300.0
          })({
              buf: WAGS_Create_Optionals.playBuf(WAGS_Create_Optionals.playBufCtor2)(v["buffers"]["my-buffer"])
          })
      };
  };
  var deltaKsHighshelf = function (v) {
      var $14 = Data_Ord.max(Data_Ord.ordNumber)(0.0);
      return function ($15) {
          return (function (time) {
              var switchW = $$Math.remainder(time)(4.0) < 2.0;
              var switchOO = $$Math.remainder(time)(2.0) < 1.0;
              var onOff = (function () {
                  if (switchOO) {
                      return WAGS_Graph_Parameter["_on"];
                  };
                  return WAGS_Graph_Parameter["_off"];
              })();
              var mix = (function () {
                  var $9 = time > WAGS_Example_KitchenSink_Timing.timing.ksHighshelf.dur - 1.0;
                  if ($9) {
                      return 0.0;
                  };
                  return 1.0;
              })();
              var highshelf = WAGS_Math.calcSlope(0.0)(300.0)(WAGS_Example_KitchenSink_Timing.timing.ksHighshelf.dur)(2000.0)(time);
              var buffer = (function () {
                  if (switchW) {
                      return v["buffers"]["my-buffer"];
                  };
                  return v.buffers.shruti;
              })();
              return WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "buffer";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedBuffer({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()())(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "highshelf";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTHighshelf)(WAGS_Change.oneShotChangeHighshelf)(WAGS_Change.changeXHighshelf({
                  reflectSymbol: function () {
                      return "highshelf";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil))))))({
                  mix: mix,
                  highshelf: highshelf,
                  buf: {
                      onOff: onOff,
                      buffer: buffer
                  }
              });
          })($14((function (v1) {
              return v1 - WAGS_Example_KitchenSink_Timing.timing.ksHighshelf.begin;
          })((function (v1) {
              return $$Math.remainder(v1)(WAGS_Example_KitchenSink_Timing.pieceTime);
          })($15))));
      };
  };
  exports["ksHighshelfCreate"] = ksHighshelfCreate;
  exports["deltaKsHighshelf"] = deltaKsHighshelf;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.TLP.Highshelf"] = $PS["WAGS.Example.KitchenSink.TLP.Highshelf"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.TLP.Highshelf"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var $$Math = $PS["Math"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Destroy = $PS["WAGS.Destroy"];
  var WAGS_Disconnect = $PS["WAGS.Disconnect"];
  var WAGS_Example_KitchenSink_TLP_Lowshelf = $PS["WAGS.Example.KitchenSink.TLP.Lowshelf"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Example_KitchenSink_Types_Empty = $PS["WAGS.Example.KitchenSink.Types.Empty"];
  var WAGS_Example_KitchenSink_Types_Highshelf = $PS["WAGS.Example.KitchenSink.Types.Highshelf"];
  var WAGS_Example_KitchenSink_Types_Lowshelf = $PS["WAGS.Example.KitchenSink.Types.Lowshelf"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var doHighshelf = WAGS_Control_Functions.ibranch(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return function (lsig) {
          var $2 = $$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) < WAGS_Example_KitchenSink_Timing.timing.ksHighshelf.end;
          if ($2) {
              return new Data_Either.Right(Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Example_KitchenSink_Types_Highshelf.deltaKsHighshelf(v.world)(v.time))(lsig));
          };
          return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(WAGS_Example_KitchenSink_TLP_Lowshelf.doLowshelf)(Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
              reflectSymbol: function () {
                  return "buf";
              }
          })({
              reflectSymbol: function () {
                  return "highshelf";
              }
          })()()({
              reflectSymbol: function () {
                  return "TPlayBuf";
              }
          })({
              reflectSymbol: function () {
                  return "THighshelf";
              }
          })()()()()())({
              source: Type_Proxy["Proxy"].value,
              dest: Type_Proxy["Proxy"].value
          }))(function () {
              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
                  reflectSymbol: function () {
                      return "highshelf";
                  }
              })({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()({
                  reflectSymbol: function () {
                      return "THighshelf";
                  }
              })({
                  reflectSymbol: function () {
                      return "TGain";
                  }
              })()()()()())({
                  source: Type_Proxy["Proxy"].value,
                  dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
              }))(function () {
                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                      reflectSymbol: function () {
                          return "highshelf";
                      }
                  })()({
                      reflectSymbol: function () {
                          return "THighshelf";
                      }
                  })()()())(Type_Proxy["Proxy"].value))(function () {
                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                          reflectSymbol: function () {
                              return "buf";
                          }
                      })()({
                          reflectSymbol: function () {
                              return "TPlayBuf";
                          }
                      })()()())(Type_Proxy["Proxy"].value))(function () {
                          return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                              reflectSymbol: function () {
                                  return "lowshelf";
                              }
                          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createLowshelf({
                              reflectSymbol: function () {
                                  return "lowshelf";
                              }
                          })()())()(WAGS_Create.createStepRLCons({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createPlayBuf({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })({
                              reflectSymbol: function () {
                                  return "lowshelf";
                              }
                          })()()({
                              reflectSymbol: function () {
                                  return "TPlayBuf";
                              }
                          })({
                              reflectSymbol: function () {
                                  return "TLowshelf";
                              }
                          })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(WAGS_Example_KitchenSink_Types_Lowshelf.ksLowshelfCreate(v.world)))(function () {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Connect.iconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Connect.connectInstance({
                                  reflectSymbol: function () {
                                      return "lowshelf";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "mix";
                                  }
                              })()()({
                                  reflectSymbol: function () {
                                      return "TLowshelf";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "TGain";
                                  }
                              })()()()()())({
                                  source: Type_Proxy["Proxy"].value,
                                  dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                              }))(function () {
                                  return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig);
                              });
                          });
                      });
                  });
              });
          })));
      };
  });
  exports["doHighshelf"] = doHighshelf;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Types.Lowpass"] = $PS["WAGS.Example.KitchenSink.Types.Lowpass"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Types.Lowpass"];
  var ConvertableOptions = $PS["ConvertableOptions"];
  var Data_Ord = $PS["Data.Ord"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Math = $PS["WAGS.Math"];                
  var ksLowpassCreate = function (v) {
      return {
          lowpass: WAGS_Create_Optionals.lowpass(WAGS_Create_Optionals.lowpassCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertLowpassFrequency(WAGS_Graph_Paramable.paramableNumber))()()()({
              reflectSymbol: function () {
                  return "freq";
              }
          })))(ConvertableOptions.defaultsRecord()())))({
              freq: 300.0
          })({
              buf: WAGS_Create_Optionals.playBuf(WAGS_Create_Optionals.playBufCtor2)(v["buffers"]["my-buffer"])
          })
      };
  };
  var deltaKsLowpass = function (v) {
      var $14 = Data_Ord.max(Data_Ord.ordNumber)(0.0);
      return function ($15) {
          return (function (time) {
              var switchW = $$Math.remainder(time)(4.0) < 2.0;
              var switchOO = $$Math.remainder(time)(2.0) < 1.0;
              var onOff = (function () {
                  if (switchOO) {
                      return WAGS_Graph_Parameter["_on"];
                  };
                  return WAGS_Graph_Parameter["_off"];
              })();
              var mix = (function () {
                  var $9 = time > WAGS_Example_KitchenSink_Timing.timing.ksLowpass.dur - 1.0;
                  if ($9) {
                      return 0.0;
                  };
                  return 1.0;
              })();
              var lowpass = WAGS_Math.calcSlope(0.0)(300.0)(WAGS_Example_KitchenSink_Timing.timing.ksLowpass.dur)(2000.0)(time);
              var buffer = (function () {
                  if (switchW) {
                      return v["buffers"]["my-buffer"];
                  };
                  return v.buffers.shruti;
              })();
              return WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "buffer";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedBuffer({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()())(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "lowpass";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTLowpass)(WAGS_Change.oneShotChangeLowpass)(WAGS_Change.changeXLowpass({
                  reflectSymbol: function () {
                      return "lowpass";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil))))))({
                  mix: mix,
                  lowpass: lowpass,
                  buf: {
                      onOff: onOff,
                      buffer: buffer
                  }
              });
          })($14((function (v1) {
              return v1 - WAGS_Example_KitchenSink_Timing.timing.ksLowpass.begin;
          })((function (v1) {
              return $$Math.remainder(v1)(WAGS_Example_KitchenSink_Timing.pieceTime);
          })($15))));
      };
  };
  exports["ksLowpassCreate"] = ksLowpassCreate;
  exports["deltaKsLowpass"] = deltaKsLowpass;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.TLP.Lowpass"] = $PS["WAGS.Example.KitchenSink.TLP.Lowpass"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.TLP.Lowpass"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var $$Math = $PS["Math"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Destroy = $PS["WAGS.Destroy"];
  var WAGS_Disconnect = $PS["WAGS.Disconnect"];
  var WAGS_Example_KitchenSink_TLP_Highshelf = $PS["WAGS.Example.KitchenSink.TLP.Highshelf"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Example_KitchenSink_Types_Empty = $PS["WAGS.Example.KitchenSink.Types.Empty"];
  var WAGS_Example_KitchenSink_Types_Highshelf = $PS["WAGS.Example.KitchenSink.Types.Highshelf"];
  var WAGS_Example_KitchenSink_Types_Lowpass = $PS["WAGS.Example.KitchenSink.Types.Lowpass"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var doLowpass = WAGS_Control_Functions.ibranch(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return function (lsig) {
          var $2 = $$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) < WAGS_Example_KitchenSink_Timing.timing.ksLowpass.end;
          if ($2) {
              return new Data_Either.Right(Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Example_KitchenSink_Types_Lowpass.deltaKsLowpass(v.world)(v.time))(lsig));
          };
          return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(WAGS_Example_KitchenSink_TLP_Highshelf.doHighshelf)(Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
              reflectSymbol: function () {
                  return "buf";
              }
          })({
              reflectSymbol: function () {
                  return "lowpass";
              }
          })()()({
              reflectSymbol: function () {
                  return "TPlayBuf";
              }
          })({
              reflectSymbol: function () {
                  return "TLowpass";
              }
          })()()()()())({
              source: Type_Proxy["Proxy"].value,
              dest: Type_Proxy["Proxy"].value
          }))(function () {
              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
                  reflectSymbol: function () {
                      return "lowpass";
                  }
              })({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()({
                  reflectSymbol: function () {
                      return "TLowpass";
                  }
              })({
                  reflectSymbol: function () {
                      return "TGain";
                  }
              })()()()()())({
                  source: Type_Proxy["Proxy"].value,
                  dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
              }))(function () {
                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                      reflectSymbol: function () {
                          return "lowpass";
                      }
                  })()({
                      reflectSymbol: function () {
                          return "TLowpass";
                      }
                  })()()())(Type_Proxy["Proxy"].value))(function () {
                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                          reflectSymbol: function () {
                              return "buf";
                          }
                      })()({
                          reflectSymbol: function () {
                              return "TPlayBuf";
                          }
                      })()()())(Type_Proxy["Proxy"].value))(function () {
                          return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                              reflectSymbol: function () {
                                  return "highshelf";
                              }
                          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createHighshelf({
                              reflectSymbol: function () {
                                  return "highshelf";
                              }
                          })()())()(WAGS_Create.createStepRLCons({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createPlayBuf({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })({
                              reflectSymbol: function () {
                                  return "highshelf";
                              }
                          })()()({
                              reflectSymbol: function () {
                                  return "TPlayBuf";
                              }
                          })({
                              reflectSymbol: function () {
                                  return "THighshelf";
                              }
                          })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(WAGS_Example_KitchenSink_Types_Highshelf.ksHighshelfCreate(v.world)))(function () {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Connect.iconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Connect.connectInstance({
                                  reflectSymbol: function () {
                                      return "highshelf";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "mix";
                                  }
                              })()()({
                                  reflectSymbol: function () {
                                      return "THighshelf";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "TGain";
                                  }
                              })()()()()())({
                                  source: Type_Proxy["Proxy"].value,
                                  dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                              }))(function () {
                                  return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig);
                              });
                          });
                      });
                  });
              });
          })));
      };
  });
  exports["doLowpass"] = doLowpass;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Types.Allpass"] = $PS["WAGS.Example.KitchenSink.Types.Allpass"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Types.Allpass"];
  var ConvertableOptions = $PS["ConvertableOptions"];
  var Data_Ord = $PS["Data.Ord"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Math = $PS["WAGS.Math"];                
  var ksAllpassCreate = function (v) {
      return {
          allpass: WAGS_Create_Optionals.allpass(WAGS_Create_Optionals.allpassCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertAllpassFrequency(WAGS_Graph_Paramable.paramableNumber))()()()({
              reflectSymbol: function () {
                  return "freq";
              }
          })))(ConvertableOptions.defaultsRecord()())))({
              freq: 300.0
          })({
              buf: WAGS_Create_Optionals.playBuf(WAGS_Create_Optionals.playBufCtor2)(v["buffers"]["my-buffer"])
          })
      };
  };
  var deltaKsAllpass = function (v) {
      var $14 = Data_Ord.max(Data_Ord.ordNumber)(0.0);
      return function ($15) {
          return (function (time) {
              var switchW = $$Math.remainder(time)(4.0) < 2.0;
              var switchOO = $$Math.remainder(time)(2.0) < 1.0;
              var onOff = (function () {
                  if (switchOO) {
                      return WAGS_Graph_Parameter["_on"];
                  };
                  return WAGS_Graph_Parameter["_off"];
              })();
              var changes = {
                  mix: (function () {
                      var $9 = time > WAGS_Example_KitchenSink_Timing.timing.ksAllpass.dur - 1.0;
                      if ($9) {
                          return 0.0;
                      };
                      return 1.0;
                  })(),
                  allpass: WAGS_Math.calcSlope(0.0)(300.0)(WAGS_Example_KitchenSink_Timing.timing.ksAllpass.dur)(2000.0)(time),
                  buf: {
                      onOff: onOff,
                      buffer: (function () {
                          if (switchW) {
                              return v["buffers"]["my-buffer"];
                          };
                          return v.buffers.shruti;
                      })()
                  }
              };
              return WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "allpass";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTAllpass)(WAGS_Change.oneShotChangeAllpass)(WAGS_Change.changeXAllpass({
                  reflectSymbol: function () {
                      return "allpass";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "buffer";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedBuffer({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()())(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil))))))(changes);
          })($14((function (v1) {
              return v1 - WAGS_Example_KitchenSink_Timing.timing.ksAllpass.begin;
          })((function (v1) {
              return $$Math.remainder(v1)(WAGS_Example_KitchenSink_Timing.pieceTime);
          })($15))));
      };
  };
  exports["ksAllpassCreate"] = ksAllpassCreate;
  exports["deltaKsAllpass"] = deltaKsAllpass;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Patch"] = $PS["WAGS.Patch"] || {};
  var exports = $PS["WAGS.Patch"];
  var Control_Category = $PS["Control.Category"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var toGraphEffectsUnit = {
      toGraphEffects: function (dictAudioInterpret) {
          return function (v) {
              return function (v1) {
                  return Control_Category.identity(Control_Category.categoryFn);
              };
          };
      }
  };
  var toGraphEffects = function (dict) {
      return dict.toGraphEffects;
  };
  var toGraphEffectsConnectXToY = function (dictIsSymbol) {
      return function (dictIsSymbol1) {
          return function (dictToGraphEffects) {
              return {
                  toGraphEffects: function (dictAudioInterpret) {
                      return function (v) {
                          return function (cache) {
                              return function (i) {
                                  var toId = Data_Symbol.reflectSymbol(dictIsSymbol1)(Type_Proxy["Proxy"].value);
                                  var fromId = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                                  return toGraphEffects(dictToGraphEffects)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(cache)({
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(i.instructions)([ WAGS_Interpret.connectXToY(dictAudioInterpret)({
                                          fromId: fromId,
                                          fromUnit: "PATCH",
                                          toId: toId,
                                          toUnit: "PATCH"
                                      }) ])
                                  });
                              };
                          };
                      };
                  }
              };
          };
      };
  };
  var toGraphEffectsDestroyUnit = function (dictIsSymbol) {
      return function (dictToGraphEffects) {
          return {
              toGraphEffects: function (dictAudioInterpret) {
                  return function (v) {
                      return function (cache) {
                          return function (i) {
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                              return toGraphEffects(dictToGraphEffects)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(cache)({
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(i.instructions)([ WAGS_Interpret.destroyUnit(dictAudioInterpret)({
                                      id: id,
                                      unit: "PATCH"
                                  }) ])
                              });
                          };
                      };
                  };
              }
          };
      };
  };
  var toGraphEffectsDisconnectXFromY = function (dictIsSymbol) {
      return function (dictIsSymbol1) {
          return function (dictToGraphEffects) {
              return {
                  toGraphEffects: function (dictAudioInterpret) {
                      return function (v) {
                          return function (cache) {
                              return function (i) {
                                  var toId = Data_Symbol.reflectSymbol(dictIsSymbol1)(Type_Proxy["Proxy"].value);
                                  var fromId = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                                  return toGraphEffects(dictToGraphEffects)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(cache)({
                                      instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(i.instructions)([ WAGS_Interpret.disconnectXFromY(dictAudioInterpret)({
                                          fromId: fromId,
                                          fromUnit: "PATCH",
                                          toId: toId,
                                          toUnit: "PATCH"
                                      }) ])
                                  });
                              };
                          };
                      };
                  }
              };
          };
      };
  };
  var toGraphEffectsMakeAllpass = function (dictIsSymbol) {
      return function (dictToGraphEffects) {
          return {
              toGraphEffects: function (dictAudioInterpret) {
                  return function (v) {
                      return function (cache) {
                          return function (i) {
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                              return toGraphEffects(dictToGraphEffects)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(cache)({
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(i.instructions)([ WAGS_Interpret.makeAllpass(dictAudioInterpret)({
                                      id: id,
                                      freq: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(440.0),
                                      q: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(1.0)
                                  }) ])
                              });
                          };
                      };
                  };
              }
          };
      };
  };
  var toGraphEffectsMakeConvolver = function (dictIsSymbol) {
      return function (dictToGraphEffects) {
          return {
              toGraphEffects: function (dictAudioInterpret) {
                  return function (v) {
                      return function (cache) {
                          return function (i) {
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                              return toGraphEffects(dictToGraphEffects)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(cache)({
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(i.instructions)([ WAGS_Interpret.makePassthroughConvolver(dictAudioInterpret)({
                                      id: id
                                  }) ])
                              });
                          };
                      };
                  };
              }
          };
      };
  };
  var toGraphEffectsMakeLowpass = function (dictIsSymbol) {
      return function (dictToGraphEffects) {
          return {
              toGraphEffects: function (dictAudioInterpret) {
                  return function (v) {
                      return function (cache) {
                          return function (i) {
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                              return toGraphEffects(dictToGraphEffects)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(cache)({
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(i.instructions)([ WAGS_Interpret.makeLowpass(dictAudioInterpret)({
                                      id: id,
                                      freq: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(440.0),
                                      q: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(1.0)
                                  }) ])
                              });
                          };
                      };
                  };
              }
          };
      };
  };
  var toGraphEffectsMakePlayBuf = function (dictIsSymbol) {
      return function (dictToGraphEffects) {
          return {
              toGraphEffects: function (dictAudioInterpret) {
                  return function (v) {
                      return function (cache) {
                          return function (i) {
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                              return toGraphEffects(dictToGraphEffects)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(cache)({
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(i.instructions)([ WAGS_Interpret.makePlayBufWithDeferredBuffer(dictAudioInterpret)({
                                      id: id
                                  }) ])
                              });
                          };
                      };
                  };
              }
          };
      };
  };
  var toGraphEffectsMakeSpeaker = function (dictToGraphEffects) {
      return {
          toGraphEffects: function (dictAudioInterpret) {
              return function (v) {
                  return function (cache) {
                      return function (i) {
                          return toGraphEffects(dictToGraphEffects)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(cache)({
                              instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(i.instructions)([ WAGS_Interpret.makeSpeaker(dictAudioInterpret) ])
                          });
                      };
                  };
              };
          }
      };
  };
  var toGraphEffectsMakeSquareOsc = function (dictIsSymbol) {
      return function (dictToGraphEffects) {
          return {
              toGraphEffects: function (dictAudioInterpret) {
                  return function (v) {
                      return function (cache) {
                          return function (i) {
                              var id = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                              return toGraphEffects(dictToGraphEffects)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(cache)({
                                  instructions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(i.instructions)([ WAGS_Interpret.makeSquareOsc(dictAudioInterpret)({
                                      id: id,
                                      onOff: WAGS_Graph_Paramable.onOffIze(WAGS_Graph_Paramable.onOffIzeOnOff)(WAGS_Graph_Parameter["_off"]),
                                      freq: WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(440.0)
                                  }) ])
                              });
                          };
                      };
                  };
              }
          };
      };
  };
  var patch = function (dict) {
      return dict.patch;
  };                                    
  var ipatch = function (dictPatch) {
      return function (dictAudioInterpret) {
          return function (dictGetSubgraphs) {
              return function (dictGetTumults) {
                  return function (cache) {
                      return function (i) {
                          return patch(dictPatch)(dictAudioInterpret)(cache)(Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(i)(Data_Unit.unit));
                      };
                  };
              };
          };
      };
  };                                    
  var getTumultsRLNil = {
      getTumultsRL: function (v) {
          return function (v1) {
              return Foreign_Object.empty;
          };
      }
  };
  var getTumultsRL = function (dict) {
      return dict.getTumultsRL;
  };
  var getTumultsRLOther = function (dictGetTumultsRL) {
      return {
          getTumultsRL: function (v) {
              return getTumultsRL(dictGetTumultsRL)(Type_Proxy["Proxy"].value);
          }
      };
  };
  var getTumultsAll = function (dictRowToList) {
      return function (dictGetTumultsRL) {
          return {
              getTumults: function (v) {
                  return getTumultsRL(dictGetTumultsRL)(Type_Proxy["Proxy"].value);
              }
          };
      };
  };
  var getTumults = function (dict) {
      return dict.getTumults;
  };
  var getSubgraphsRLNil = {
      getSubgraphsRL: function (v) {
          return function (v1) {
              return Foreign_Object.empty;
          };
      }
  };
  var getSubgraphsRL = function (dict) {
      return dict.getSubgraphsRL;
  };
  var getSubgraphsRLOther = function (dictGetSubgraphsRL) {
      return {
          getSubgraphsRL: function (v) {
              return getSubgraphsRL(dictGetSubgraphsRL)(Type_Proxy["Proxy"].value);
          }
      };
  };
  var getSubgraphsAll = function (dictRowToList) {
      return function (dictGetSubgraphsRL) {
          return {
              getSubgraphs: function (v) {
                  return getSubgraphsRL(dictGetSubgraphsRL)(Type_Proxy["Proxy"].value);
              }
          };
      };
  };
  var getSubgraphs = function (dict) {
      return dict.getSubgraphs;
  };
  var patchAll = function (dictRowToList) {
      return function (dictRowToList1) {
          return function (dictPatchRL) {
              return function (dictGetSubgraphs) {
                  return function (dictGetTumults) {
                      return function (dictSortInstructions) {
                          return function (dictToGraphEffects) {
                              return {
                                  patch: function (dictAudioInterpret) {
                                      return function (cache) {
                                          return function (w) {
                                              var v = WAGS_Control_Types.unsafeUnWAG(w);
                                              var newCache = {
                                                  subgraphs: getSubgraphs(dictGetSubgraphs)(Type_Proxy["Proxy"].value)(cache.subgraphs),
                                                  tumults: getTumults(dictGetTumults)(Type_Proxy["Proxy"].value)(cache.tumults),
                                                  mediaElement: cache.mediaElement,
                                                  microphone: cache.microphone
                                              };
                                              var n = toGraphEffects(dictToGraphEffects)(dictAudioInterpret)(Type_Proxy["Proxy"].value)(newCache)({
                                                  instructions: v.context.instructions
                                              });
                                              return WAGS_Control_Types.unsafeWAG({
                                                  context: {
                                                      res: v.context.res,
                                                      instructions: n.instructions
                                                  },
                                                  value: v.value
                                              });
                                          };
                                      };
                                  },
                                  GetSubgraphs0: function () {
                                      return dictGetSubgraphs;
                                  },
                                  GetTumults1: function () {
                                      return dictGetTumults;
                                  }
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  exports["ipatch"] = ipatch;
  exports["toGraphEffectsUnit"] = toGraphEffectsUnit;
  exports["toGraphEffectsConnectXToY"] = toGraphEffectsConnectXToY;
  exports["toGraphEffectsDisconnectXFromY"] = toGraphEffectsDisconnectXFromY;
  exports["toGraphEffectsDestroyUnit"] = toGraphEffectsDestroyUnit;
  exports["toGraphEffectsMakeAllpass"] = toGraphEffectsMakeAllpass;
  exports["toGraphEffectsMakeConvolver"] = toGraphEffectsMakeConvolver;
  exports["toGraphEffectsMakeLowpass"] = toGraphEffectsMakeLowpass;
  exports["toGraphEffectsMakePlayBuf"] = toGraphEffectsMakePlayBuf;
  exports["toGraphEffectsMakeSquareOsc"] = toGraphEffectsMakeSquareOsc;
  exports["toGraphEffectsMakeSpeaker"] = toGraphEffectsMakeSpeaker;
  exports["getSubgraphsRLNil"] = getSubgraphsRLNil;
  exports["getSubgraphsRLOther"] = getSubgraphsRLOther;
  exports["getSubgraphsAll"] = getSubgraphsAll;
  exports["getTumultsRLNil"] = getTumultsRLNil;
  exports["getTumultsRLOther"] = getTumultsRLOther;
  exports["getTumultsAll"] = getTumultsAll;
  exports["patchAll"] = patchAll;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.TLP.Allpass"] = $PS["WAGS.Example.KitchenSink.TLP.Allpass"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.TLP.Allpass"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Either = $PS["Data.Either"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var $$Math = $PS["Math"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Destroy = $PS["WAGS.Destroy"];
  var WAGS_Disconnect = $PS["WAGS.Disconnect"];
  var WAGS_Example_KitchenSink_TLP_Lowpass = $PS["WAGS.Example.KitchenSink.TLP.Lowpass"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Example_KitchenSink_Types_Allpass = $PS["WAGS.Example.KitchenSink.Types.Allpass"];
  var WAGS_Example_KitchenSink_Types_Empty = $PS["WAGS.Example.KitchenSink.Types.Empty"];
  var WAGS_Example_KitchenSink_Types_Lowpass = $PS["WAGS.Example.KitchenSink.Types.Lowpass"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Patch = $PS["WAGS.Patch"];                
  var doAllpass = WAGS_Control_Functions.ibranch(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return function (lsig) {
          var $2 = $$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) < WAGS_Example_KitchenSink_Timing.timing.ksAllpass.end;
          if ($2) {
              return new Data_Either.Right(Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Example_KitchenSink_Types_Allpass.deltaKsAllpass(v.world)(v.time))(lsig));
          };
          var $3 = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(lsig.iteration)(2) === 0;
          if ($3) {
              return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(WAGS_Example_KitchenSink_TLP_Lowpass.doLowpass)(Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })({
                  reflectSymbol: function () {
                      return "allpass";
                  }
              })()()({
                  reflectSymbol: function () {
                      return "TPlayBuf";
                  }
              })({
                  reflectSymbol: function () {
                      return "TAllpass";
                  }
              })()()()()())({
                  source: Type_Proxy["Proxy"].value,
                  dest: Type_Proxy["Proxy"].value
              }))(function () {
                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
                      reflectSymbol: function () {
                          return "allpass";
                      }
                  })({
                      reflectSymbol: function () {
                          return "mix";
                      }
                  })()()({
                      reflectSymbol: function () {
                          return "TAllpass";
                      }
                  })({
                      reflectSymbol: function () {
                          return "TGain";
                      }
                  })()()()()())({
                      source: Type_Proxy["Proxy"].value,
                      dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                  }))(function () {
                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                          reflectSymbol: function () {
                              return "allpass";
                          }
                      })()({
                          reflectSymbol: function () {
                              return "TAllpass";
                          }
                      })()()())(Type_Proxy["Proxy"].value))(function () {
                          return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                              reflectSymbol: function () {
                                  return "buf";
                              }
                          })()({
                              reflectSymbol: function () {
                                  return "TPlayBuf";
                              }
                          })()()())(Type_Proxy["Proxy"].value))(function () {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                                  reflectSymbol: function () {
                                      return "lowpass";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createLowpass({
                                  reflectSymbol: function () {
                                      return "lowpass";
                                  }
                              })()())()(WAGS_Create.createStepRLCons({
                                  reflectSymbol: function () {
                                      return "buf";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createPlayBuf({
                                  reflectSymbol: function () {
                                      return "buf";
                                  }
                              })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                                  reflectSymbol: function () {
                                      return "buf";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "lowpass";
                                  }
                              })()()({
                                  reflectSymbol: function () {
                                      return "TPlayBuf";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "TLowpass";
                                  }
                              })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(WAGS_Example_KitchenSink_Types_Lowpass.ksLowpassCreate(v.world)))(function () {
                                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Connect.iconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Connect.connectInstance({
                                      reflectSymbol: function () {
                                          return "lowpass";
                                      }
                                  })({
                                      reflectSymbol: function () {
                                          return "mix";
                                      }
                                  })()()({
                                      reflectSymbol: function () {
                                          return "TLowpass";
                                      }
                                  })({
                                      reflectSymbol: function () {
                                          return "TGain";
                                      }
                                  })()()()()())({
                                      source: Type_Proxy["Proxy"].value,
                                      dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                                  }))(function () {
                                      return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig);
                                  });
                              });
                          });
                      });
                  });
              })));
          };
          return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(WAGS_Example_KitchenSink_TLP_Lowpass.doLowpass)(Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Patch.ipatch(WAGS_Patch.patchAll()()()(WAGS_Patch.getSubgraphsAll()(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLNil))))))(WAGS_Patch.getTumultsAll()(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLNil))))))()(WAGS_Patch.toGraphEffectsDisconnectXFromY({
              reflectSymbol: function () {
                  return "buf";
              }
          })({
              reflectSymbol: function () {
                  return "allpass";
              }
          })(WAGS_Patch.toGraphEffectsDisconnectXFromY({
              reflectSymbol: function () {
                  return "allpass";
              }
          })({
              reflectSymbol: function () {
                  return "mix";
              }
          })(WAGS_Patch.toGraphEffectsDestroyUnit({
              reflectSymbol: function () {
                  return "allpass";
              }
          })(WAGS_Patch.toGraphEffectsMakeLowpass({
              reflectSymbol: function () {
                  return "lowpass";
              }
          })(WAGS_Patch.toGraphEffectsConnectXToY({
              reflectSymbol: function () {
                  return "lowpass";
              }
          })({
              reflectSymbol: function () {
                  return "mix";
              }
          })(WAGS_Patch.toGraphEffectsConnectXToY({
              reflectSymbol: function () {
                  return "buf";
              }
          })({
              reflectSymbol: function () {
                  return "lowpass";
              }
          })(WAGS_Patch.toGraphEffectsUnit))))))))(WAGS_Interpret.mixedAudioInterpret)(WAGS_Patch.getSubgraphsAll()(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLNil))))))(WAGS_Patch.getTumultsAll()(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLNil))))))({
              microphone: Data_Maybe.Nothing.value,
              mediaElement: Data_Maybe.Nothing.value,
              subgraphs: {},
              tumults: {}
          }))(function () {
              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeBrowserAudioBuffer()()(WAGS_Graph_AudioUnit.monoidTPlayBuf)(WAGS_Change.oneShotChangePlayBufBuffer)(WAGS_Change.changeXPlayBuf({
                  reflectSymbol: function () {
                      return "buf";
                  }
              })()))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "lowpass";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTLowpass)(WAGS_Change.oneShotChangeLowpass)(WAGS_Change.changeXLowpass({
                  reflectSymbol: function () {
                      return "lowpass";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                  lowpass: 300.0,
                  buf: v["world"]["buffers"]["my-buffer"]
              }))(function () {
                  return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig);
              });
          })));
      };
  });
  exports["doAllpass"] = doAllpass;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.TLP.Convolver"] = $PS["WAGS.Example.KitchenSink.TLP.Convolver"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.TLP.Convolver"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Apply_Indexed = $PS["Control.Apply.Indexed"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Example_KitchenSink_TLP_Allpass = $PS["WAGS.Example.KitchenSink.TLP.Allpass"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Example_KitchenSink_Types_Allpass = $PS["WAGS.Example.KitchenSink.Types.Allpass"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Patch = $PS["WAGS.Patch"];                
  var doConvolver = WAGS_Control_Functions.ibranch(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return function (lsig) {
          var $2 = $$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) < WAGS_Example_KitchenSink_Timing.timing.ksConvolver.end;
          if ($2) {
              return new Data_Either.Right(Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig));
          };
          return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(WAGS_Example_KitchenSink_TLP_Allpass.doAllpass)(Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(Control_Apply_Indexed.iapplySecond(WAGS_Control_Indexed.ixApplyIxWAG)(WAGS_Patch.ipatch(WAGS_Patch.patchAll()()()(WAGS_Patch.getSubgraphsAll()(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLNil))))))(WAGS_Patch.getTumultsAll()(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLNil))))))()(WAGS_Patch.toGraphEffectsDisconnectXFromY({
              reflectSymbol: function () {
                  return "buf";
              }
          })({
              reflectSymbol: function () {
                  return "convolver";
              }
          })(WAGS_Patch.toGraphEffectsDisconnectXFromY({
              reflectSymbol: function () {
                  return "convolver";
              }
          })({
              reflectSymbol: function () {
                  return "mix";
              }
          })(WAGS_Patch.toGraphEffectsDestroyUnit({
              reflectSymbol: function () {
                  return "convolver";
              }
          })(WAGS_Patch.toGraphEffectsMakeAllpass({
              reflectSymbol: function () {
                  return "allpass";
              }
          })(WAGS_Patch.toGraphEffectsConnectXToY({
              reflectSymbol: function () {
                  return "allpass";
              }
          })({
              reflectSymbol: function () {
                  return "mix";
              }
          })(WAGS_Patch.toGraphEffectsConnectXToY({
              reflectSymbol: function () {
                  return "buf";
              }
          })({
              reflectSymbol: function () {
                  return "allpass";
              }
          })(WAGS_Patch.toGraphEffectsUnit))))))))(WAGS_Interpret.mixedAudioInterpret)(WAGS_Patch.getSubgraphsAll()(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLNil))))))(WAGS_Patch.getTumultsAll()(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLNil))))))({
              microphone: Data_Maybe.Nothing.value,
              mediaElement: Data_Maybe.Nothing.value,
              subgraphs: {},
              tumults: {}
          }))(WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "allpass";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeAllpass({
              reflectSymbol: function () {
                  return "allpass";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "buf";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changePlayBuf({
              reflectSymbol: function () {
                  return "buf";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLNil))))(WAGS_Example_KitchenSink_Types_Allpass.ksAllpassCreate(v.world))))(lsig)));
      };
  });
  exports["doConvolver"] = doConvolver;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.TLP.SawtoothOsc"] = $PS["WAGS.Example.KitchenSink.TLP.SawtoothOsc"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.TLP.SawtoothOsc"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Apply_Indexed = $PS["Control.Apply.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Example_KitchenSink_TLP_Convolver = $PS["WAGS.Example.KitchenSink.TLP.Convolver"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Patch = $PS["WAGS.Patch"];                
  var doSawtoothOsc = WAGS_Control_Functions.ibranch(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return function (lsig) {
          var $2 = $$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) < WAGS_Example_KitchenSink_Timing.timing.ksSawtoothOsc.end;
          if ($2) {
              return new Data_Either.Right(Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(Control_Applicative.when(WAGS_Control_Indexed.applicativeIxWAG)($$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) > WAGS_Example_KitchenSink_Timing.timing.ksSawtoothOsc.begin + 2.0)(WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "sawtoothOsc";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeCancellation(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTSawtoothOsc)(WAGS_Change.oneShotChangeSawtoothOscOffset)(WAGS_Change.changeXSawtoothOsc({
                  reflectSymbol: function () {
                      return "sawtoothOsc";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil))))({
                  sawtoothOsc: WAGS_Graph_Parameter.cancel
              })))(function () {
                  return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig);
              }));
          };
          return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(WAGS_Example_KitchenSink_TLP_Convolver.doConvolver)(Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(Control_Apply_Indexed.iapplySecond(WAGS_Control_Indexed.ixApplyIxWAG)(WAGS_Patch.ipatch(WAGS_Patch.patchAll()()()(WAGS_Patch.getSubgraphsAll()(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLNil))))))(WAGS_Patch.getTumultsAll()(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLNil))))))()(WAGS_Patch.toGraphEffectsDisconnectXFromY({
              reflectSymbol: function () {
                  return "sawtoothOsc";
              }
          })({
              reflectSymbol: function () {
                  return "mix";
              }
          })(WAGS_Patch.toGraphEffectsDestroyUnit({
              reflectSymbol: function () {
                  return "sawtoothOsc";
              }
          })(WAGS_Patch.toGraphEffectsMakeConvolver({
              reflectSymbol: function () {
                  return "convolver";
              }
          })(WAGS_Patch.toGraphEffectsMakePlayBuf({
              reflectSymbol: function () {
                  return "buf";
              }
          })(WAGS_Patch.toGraphEffectsConnectXToY({
              reflectSymbol: function () {
                  return "convolver";
              }
          })({
              reflectSymbol: function () {
                  return "mix";
              }
          })(WAGS_Patch.toGraphEffectsConnectXToY({
              reflectSymbol: function () {
                  return "buf";
              }
          })({
              reflectSymbol: function () {
                  return "convolver";
              }
          })(WAGS_Patch.toGraphEffectsUnit))))))))(WAGS_Interpret.mixedAudioInterpret)(WAGS_Patch.getSubgraphsAll()(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLNil))))))(WAGS_Patch.getTumultsAll()(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLNil))))))({
              microphone: Data_Maybe.Nothing.value,
              mediaElement: Data_Maybe.Nothing.value,
              subgraphs: {},
              tumults: {}
          }))(WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "buf";
              }
          })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
              reflectSymbol: function () {
                  return "buffer";
              }
          })({
              reflectSymbol: function () {
                  return "buf";
              }
          })()(WAGS_Change.canBeChangedBuffer({
              reflectSymbol: function () {
                  return "buf";
              }
          })()()())(WAGS_Change["change''Cons"]({
              reflectSymbol: function () {
                  return "onOff";
              }
          })({
              reflectSymbol: function () {
                  return "buf";
              }
          })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
              reflectSymbol: function () {
                  return "buf";
              }
          })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "convolver";
              }
          })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeBrowserAudioBuffer()()(WAGS_Graph_AudioUnit.monoidTConvolver)(WAGS_Change.oneShotChangeConvolver)(WAGS_Change.changeXConvolver({
              reflectSymbol: function () {
                  return "convolver";
              }
          })()))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
              buf: {
                  buffer: v["world"]["buffers"]["my-buffer"],
                  onOff: WAGS_Graph_Parameter["_on"]
              },
              convolver: v.world.buffers.reverb
          })))(lsig)));
      };
  });
  exports["doSawtoothOsc"] = doSawtoothOsc;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Types.PeriodicOsc"] = $PS["WAGS.Example.KitchenSink.Types.PeriodicOsc"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Types.PeriodicOsc"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Typelevel_Num_Ops = $PS["Data.Typelevel.Num.Ops"];
  var Data_Typelevel_Num_Sets = $PS["Data.Typelevel.Num.Sets"];
  var Data_Vec = $PS["Data.Vec"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var ksPeriodicOscCreate = function (v) {
      return {
          periodicOsc: WAGS_Create_Optionals.periodicOsc(WAGS_Create_Optionals.periodicOscCtor2()(WAGS_Graph_Paramable.paramableNumber))(v["periodicWaves"]["my-wave"])(440.0)
      };
  };
  var deltaKsPeriodicOsc = function (v) {
      var $13 = Data_Ord.max(Data_Ord.ordNumber)(0.0);
      return function ($14) {
          return (function (time) {
              var switchW = $$Math.remainder(time)(4.0) < 2.0;
              var switchOO = $$Math.remainder(time)(2.0) < 1.0;
              var rad = $$Math.pi * time;
              if (switchW) {
                  return WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                      reflectSymbol: function () {
                          return "mix";
                      }
                  })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                      reflectSymbol: function () {
                          return "mix";
                      }
                  })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                      reflectSymbol: function () {
                          return "periodicOsc";
                      }
                  })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                      reflectSymbol: function () {
                          return "freq";
                      }
                  })({
                      reflectSymbol: function () {
                          return "periodicOsc";
                      }
                  })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                      reflectSymbol: function () {
                          return "periodicOsc";
                      }
                  })()()()))(WAGS_Change["change''Cons"]({
                      reflectSymbol: function () {
                          return "waveform";
                      }
                  })({
                      reflectSymbol: function () {
                          return "periodicOsc";
                      }
                  })()(WAGS_Change.canBeChangedWaveform({
                      reflectSymbol: function () {
                          return "periodicOsc";
                      }
                  })()()())(WAGS_Change["change''Cons"]({
                      reflectSymbol: function () {
                          return "onOff";
                      }
                  })({
                      reflectSymbol: function () {
                          return "periodicOsc";
                      }
                  })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                      reflectSymbol: function () {
                          return "periodicOsc";
                      }
                  })()()()))(WAGS_Change["change''Nil"])))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                      mix: 0.1 - 0.1 * $$Math.cos(time),
                      periodicOsc: {
                          waveform: v["periodicWaves"]["my-wave"],
                          onOff: (function () {
                              if (switchOO) {
                                  return WAGS_Graph_Parameter["_on"];
                              };
                              return WAGS_Graph_Parameter["_off"];
                          })(),
                          freq: 440.0 + 50.0 * $$Math.pow($$Math.sin(rad * 1.5))(2.0)
                      }
                  });
              };
              return WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "periodicOsc";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })({
                  reflectSymbol: function () {
                      return "periodicOsc";
                  }
              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                  reflectSymbol: function () {
                      return "periodicOsc";
                  }
              })()()()))(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "waveform";
                  }
              })({
                  reflectSymbol: function () {
                      return "periodicOsc";
                  }
              })()(WAGS_Change.canBeChangedWaveformV({
                  reflectSymbol: function () {
                      return "periodicOsc";
                  }
              })()()()())(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })({
                  reflectSymbol: function () {
                      return "periodicOsc";
                  }
              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                  reflectSymbol: function () {
                      return "periodicOsc";
                  }
              })()()()))(WAGS_Change["change''Nil"])))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                  mix: 0.1 - 0.1 * $$Math.cos(time),
                  periodicOsc: {
                      onOff: (function () {
                          if (switchOO) {
                              return WAGS_Graph_Parameter["_on"];
                          };
                          return WAGS_Graph_Parameter["_off"];
                      })(),
                      waveform: new Data_Tuple.Tuple(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD5)()(Data_Typelevel_Num_Ops.divMod10D4D0)()(Data_Typelevel_Num_Ops.divMod10D5D0))(0.1)(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD4)()(Data_Typelevel_Num_Ops.divMod10D3D0)()(Data_Typelevel_Num_Ops.divMod10D4D0))(-0.3)(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD3)()(Data_Typelevel_Num_Ops.divMod10D2D0)()(Data_Typelevel_Num_Ops.divMod10D3D0))(-0.5)(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD2)()(Data_Typelevel_Num_Ops.divMod10D1D0)()(Data_Typelevel_Num_Ops.divMod10D2D0))(5.0e-2)(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD1)()(Data_Typelevel_Num_Ops.divMod10D0D0)()(Data_Typelevel_Num_Ops.divMod10D1D0))(0.2)(Data_Vec.empty))))), Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD5)()(Data_Typelevel_Num_Ops.divMod10D4D0)()(Data_Typelevel_Num_Ops.divMod10D5D0))(-5.0e-2)(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD4)()(Data_Typelevel_Num_Ops.divMod10D3D0)()(Data_Typelevel_Num_Ops.divMod10D4D0))(0.25)(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD3)()(Data_Typelevel_Num_Ops.divMod10D2D0)()(Data_Typelevel_Num_Ops.divMod10D3D0))(0.4)(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD2)()(Data_Typelevel_Num_Ops.divMod10D1D0)()(Data_Typelevel_Num_Ops.divMod10D2D0))(-0.2)(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD1)()(Data_Typelevel_Num_Ops.divMod10D0D0)()(Data_Typelevel_Num_Ops.divMod10D1D0))(5.0e-2)(Data_Vec.empty)))))),
                      freq: 440.0 + 50.0 * $$Math.pow($$Math.sin(rad * 1.5))(2.0)
                  }
              });
          })($13((function (v1) {
              return v1 - WAGS_Example_KitchenSink_Timing.timing.ksPeriodicOsc.begin;
          })((function (v1) {
              return $$Math.remainder(v1)(WAGS_Example_KitchenSink_Timing.pieceTime);
          })($14))));
      };
  };
  exports["ksPeriodicOscCreate"] = ksPeriodicOscCreate;
  exports["deltaKsPeriodicOsc"] = deltaKsPeriodicOsc;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Types.SawtoothOsc"] = $PS["WAGS.Example.KitchenSink.Types.SawtoothOsc"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Types.SawtoothOsc"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Unit = $PS["Data.Unit"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var stSpan = Data_Functor.map(Data_List_Types.functorList)((function () {
      var $4 = Data_Semiring.mul(Data_Semiring.semiringNumber)(4.0e-2);
      return function ($5) {
          return $4(Data_Int.toNumber($5));
      };
  })())(Data_List.range(0)(200));
  var ksSawtoothOscCreate = {
      sawtoothOsc: WAGS_Create_Optionals.sawtoothOsc(WAGS_Create_Optionals.sawtoothOscCtor2(WAGS_Graph_Paramable.paramableNumber))(440.0)
  };
  var deltaKsSawtoothOsc = function (time) {
      var rad = $$Math.pi * time;
      return WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
          reflectSymbol: function () {
              return "mix";
          }
      })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
          reflectSymbol: function () {
              return "mix";
          }
      })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
          reflectSymbol: function () {
              return "sawtoothOsc";
          }
      })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTSawtoothOsc)(WAGS_Change.oneShotChangeSawtoothOscOffset)(WAGS_Change.changeXSawtoothOsc({
          reflectSymbol: function () {
              return "sawtoothOsc";
          }
      })()))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
          mix: 0.1 - 0.1 * $$Math.cos(time),
          sawtoothOsc: Data_Lens_Setter.set(WAGS_Graph_Parameter.lensTime(WAGS_Graph_Parameter.lensTimeAudioParameter)(Data_Profunctor_Strong.strongFn))(time)(WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(440.0 + 50.0 * $$Math.pow($$Math.sin(rad * 1.5))(2.0)))
      });
  };
  var frontloadSawtoothOsc = (function () {
      var go = function (v) {
          if (v instanceof Data_List_Types.Nil) {
              return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(Data_Unit.unit);
          };
          if (v instanceof Data_List_Types.Cons) {
              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(deltaKsSawtoothOsc(v.value0))(function () {
                  return go(v.value1);
              });
          };
          throw new Error("Failed pattern match at WAGS.Example.KitchenSink.Types.SawtoothOsc (line 33, column 3 - line 33, column 80): " + [ v.constructor.name ]);
      };
      return go(stSpan);
  })();
  exports["ksSawtoothOscCreate"] = ksSawtoothOscCreate;
  exports["frontloadSawtoothOsc"] = frontloadSawtoothOsc;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.TLP.PeriodicOsc"] = $PS["WAGS.Example.KitchenSink.TLP.PeriodicOsc"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.TLP.PeriodicOsc"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var $$Math = $PS["Math"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Destroy = $PS["WAGS.Destroy"];
  var WAGS_Disconnect = $PS["WAGS.Disconnect"];
  var WAGS_Example_KitchenSink_TLP_SawtoothOsc = $PS["WAGS.Example.KitchenSink.TLP.SawtoothOsc"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Example_KitchenSink_Types_Empty = $PS["WAGS.Example.KitchenSink.Types.Empty"];
  var WAGS_Example_KitchenSink_Types_PeriodicOsc = $PS["WAGS.Example.KitchenSink.Types.PeriodicOsc"];
  var WAGS_Example_KitchenSink_Types_SawtoothOsc = $PS["WAGS.Example.KitchenSink.Types.SawtoothOsc"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var doPeriodicOsc = WAGS_Control_Functions.ibranch(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return function (lsig) {
          var $2 = $$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) < WAGS_Example_KitchenSink_Timing.timing.ksPeriodicOsc.end;
          if ($2) {
              return new Data_Either.Right(Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Example_KitchenSink_Types_PeriodicOsc.deltaKsPeriodicOsc(v.world)(v.time))(lsig));
          };
          return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(WAGS_Example_KitchenSink_TLP_SawtoothOsc.doSawtoothOsc)(Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
              reflectSymbol: function () {
                  return "periodicOsc";
              }
          })({
              reflectSymbol: function () {
                  return "mix";
              }
          })()()({
              reflectSymbol: function () {
                  return "TPeriodicOsc";
              }
          })({
              reflectSymbol: function () {
                  return "TGain";
              }
          })()()()()())({
              source: Type_Proxy["Proxy"].value,
              dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
          }))(function () {
              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                  reflectSymbol: function () {
                      return "periodicOsc";
                  }
              })()({
                  reflectSymbol: function () {
                      return "TPeriodicOsc";
                  }
              })()()())(Type_Proxy["Proxy"].value))(function () {
                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                      reflectSymbol: function () {
                          return "sawtoothOsc";
                      }
                  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSawtoothOsc({
                      reflectSymbol: function () {
                          return "sawtoothOsc";
                      }
                  })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))))(WAGS_Example_KitchenSink_Types_SawtoothOsc.ksSawtoothOscCreate))(function () {
                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Connect.iconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sawtoothOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "mix";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSawtoothOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())({
                          source: Type_Proxy["Proxy"].value,
                          dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                      }))(function () {
                          return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Example_KitchenSink_Types_SawtoothOsc.frontloadSawtoothOsc)(function () {
                              return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig);
                          });
                      });
                  });
              });
          })));
      };
  });
  exports["doPeriodicOsc"] = doPeriodicOsc;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Types.SquareOsc"] = $PS["WAGS.Example.KitchenSink.Types.SquareOsc"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Types.SquareOsc"];
  var Data_Ord = $PS["Data.Ord"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var ksSquareOscCreate = {
      squareOsc: WAGS_Create_Optionals.squareOsc(WAGS_Create_Optionals.squareOscCtor2(WAGS_Graph_Paramable.paramableNumber))(220.0)
  };
  var deltaKsSquareOsc = (function () {
      var $3 = Data_Ord.max(Data_Ord.ordNumber)(0.0);
      return function ($4) {
          return (function (time) {
              var switchOO = $$Math.remainder(time)(2.0) < 1.0;
              var rad = $$Math.pi * time;
              return WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "squareOsc";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })({
                  reflectSymbol: function () {
                      return "squareOsc";
                  }
              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                  reflectSymbol: function () {
                      return "squareOsc";
                  }
              })()()()))(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })({
                  reflectSymbol: function () {
                      return "squareOsc";
                  }
              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                  reflectSymbol: function () {
                      return "squareOsc";
                  }
              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                  mix: 0.1 - 0.1 * $$Math.cos(time),
                  squareOsc: {
                      onOff: (function () {
                          if (switchOO) {
                              return WAGS_Graph_Parameter["_on"];
                          };
                          return WAGS_Graph_Parameter["_off"];
                      })(),
                      freq: 220.0 + 50.0 * $$Math.pow($$Math.sin(rad * 1.5))(2.0)
                  }
              });
          })($3((function (v) {
              return v - WAGS_Example_KitchenSink_Timing.timing.ksSquareOsc.begin;
          })((function (v) {
              return $$Math.remainder(v)(WAGS_Example_KitchenSink_Timing.pieceTime);
          })($4))));
      };
  })();
  exports["ksSquareOscCreate"] = ksSquareOscCreate;
  exports["deltaKsSquareOsc"] = deltaKsSquareOsc;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.TLP.SquareOsc"] = $PS["WAGS.Example.KitchenSink.TLP.SquareOsc"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.TLP.SquareOsc"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Apply_Indexed = $PS["Control.Apply.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var $$Math = $PS["Math"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Destroy = $PS["WAGS.Destroy"];
  var WAGS_Disconnect = $PS["WAGS.Disconnect"];
  var WAGS_Example_KitchenSink_TLP_PeriodicOsc = $PS["WAGS.Example.KitchenSink.TLP.PeriodicOsc"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Example_KitchenSink_Types_Empty = $PS["WAGS.Example.KitchenSink.Types.Empty"];
  var WAGS_Example_KitchenSink_Types_PeriodicOsc = $PS["WAGS.Example.KitchenSink.Types.PeriodicOsc"];
  var WAGS_Example_KitchenSink_Types_SquareOsc = $PS["WAGS.Example.KitchenSink.Types.SquareOsc"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var doSquareOsc = WAGS_Control_Functions.ibranch(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return function (lsig) {
          var $2 = $$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) < WAGS_Example_KitchenSink_Timing.timing.ksSquareOsc.end;
          if ($2) {
              return new Data_Either.Right(Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(Control_Apply_Indexed.iapplySecond(WAGS_Control_Indexed.ixApplyIxWAG)(WAGS_Control_Functions.imodifyRes(Data_Function["const"]("Playing a square osc")))(WAGS_Example_KitchenSink_Types_SquareOsc.deltaKsSquareOsc(v.time)))(lsig));
          };
          return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(WAGS_Example_KitchenSink_TLP_PeriodicOsc.doPeriodicOsc)(Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
              reflectSymbol: function () {
                  return "squareOsc";
              }
          })({
              reflectSymbol: function () {
                  return "mix";
              }
          })()()({
              reflectSymbol: function () {
                  return "TSquareOsc";
              }
          })({
              reflectSymbol: function () {
                  return "TGain";
              }
          })()()()()())({
              source: Type_Proxy["Proxy"].value,
              dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
          }))(function () {
              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                  reflectSymbol: function () {
                      return "squareOsc";
                  }
              })()({
                  reflectSymbol: function () {
                      return "TSquareOsc";
                  }
              })()()())(Type_Proxy["Proxy"].value))(function () {
                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                      reflectSymbol: function () {
                          return "periodicOsc";
                      }
                  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createPeriodicOsc({
                      reflectSymbol: function () {
                          return "periodicOsc";
                      }
                  })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))))(WAGS_Example_KitchenSink_Types_PeriodicOsc.ksPeriodicOscCreate(v.world)))(function () {
                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Connect.iconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "periodicOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "mix";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TPeriodicOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())({
                          source: Type_Proxy["Proxy"].value,
                          dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                      }))(function () {
                          return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig);
                      });
                  });
              });
          })));
      };
  });
  exports["doSquareOsc"] = doSquareOsc;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Types.TriangleOsc"] = $PS["WAGS.Example.KitchenSink.Types.TriangleOsc"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Types.TriangleOsc"];
  var Data_Ord = $PS["Data.Ord"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var ksTriangleOscCreate = function (v) {
      return {
          recorder: WAGS_Create_Optionals.recorder(v["recorders"]["my-recorder"])({
              triangleOsc: WAGS_Create_Optionals.triangleOsc(WAGS_Create_Optionals.triangleOscCtor2(WAGS_Graph_Paramable.paramableNumber))(440.0)
          })
      };
  };
  var deltaKsTriangleOsc = (function () {
      var $7 = Data_Ord.max(Data_Ord.ordNumber)(0.0);
      return function ($8) {
          return (function (time) {
              var switchOO = $$Math.remainder(time)(2.0) < 1.0;
              var rad = $$Math.pi * time;
              return WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "triangleOsc";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })({
                  reflectSymbol: function () {
                      return "triangleOsc";
                  }
              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                  reflectSymbol: function () {
                      return "triangleOsc";
                  }
              })()()()))(WAGS_Change["change''Cons"]({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              })({
                  reflectSymbol: function () {
                      return "triangleOsc";
                  }
              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                  reflectSymbol: function () {
                      return "triangleOsc";
                  }
              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                  mix: 0.1 - 0.1 * $$Math.cos(time),
                  triangleOsc: {
                      onOff: (function () {
                          if (switchOO) {
                              return WAGS_Graph_Parameter["_on"];
                          };
                          return WAGS_Graph_Parameter["_off"];
                      })(),
                      freq: 440.0 + 50.0 * $$Math.pow($$Math.sin(rad * 1.5))(2.0)
                  }
              });
          })($7((function (v) {
              return v - WAGS_Example_KitchenSink_Timing.timing.ksTriangleOsc.begin;
          })((function (v) {
              return $$Math.remainder(v)(WAGS_Example_KitchenSink_Timing.pieceTime);
          })($8))));
      };
  })();
  exports["ksTriangleOscCreate"] = ksTriangleOscCreate;
  exports["deltaKsTriangleOsc"] = deltaKsTriangleOsc;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.TLP.TriangleOsc"] = $PS["WAGS.Example.KitchenSink.TLP.TriangleOsc"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.TLP.TriangleOsc"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Either = $PS["Data.Either"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var $$Math = $PS["Math"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Destroy = $PS["WAGS.Destroy"];
  var WAGS_Disconnect = $PS["WAGS.Disconnect"];
  var WAGS_Example_KitchenSink_TLP_SquareOsc = $PS["WAGS.Example.KitchenSink.TLP.SquareOsc"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Example_KitchenSink_Types_Empty = $PS["WAGS.Example.KitchenSink.Types.Empty"];
  var WAGS_Example_KitchenSink_Types_SquareOsc = $PS["WAGS.Example.KitchenSink.Types.SquareOsc"];
  var WAGS_Example_KitchenSink_Types_TriangleOsc = $PS["WAGS.Example.KitchenSink.Types.TriangleOsc"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Patch = $PS["WAGS.Patch"];                
  var doTriangleOsc = WAGS_Control_Functions.ibranch(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return function (lsig) {
          var $2 = $$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) < WAGS_Example_KitchenSink_Timing.timing.ksTriangleOsc.end;
          if ($2) {
              return new Data_Either.Right(Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Example_KitchenSink_Types_TriangleOsc.deltaKsTriangleOsc(v.time))(lsig));
          };
          return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(WAGS_Example_KitchenSink_TLP_SquareOsc.doSquareOsc)((function () {
              var $3 = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(lsig.iteration)(2) === 0;
              if ($3) {
                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Patch.ipatch(WAGS_Patch.patchAll()()()(WAGS_Patch.getSubgraphsAll()(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLNil)))))(WAGS_Patch.getTumultsAll()(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLNil)))))()(WAGS_Patch.toGraphEffectsDisconnectXFromY({
                      reflectSymbol: function () {
                          return "recorder";
                      }
                  })({
                      reflectSymbol: function () {
                          return "mix";
                      }
                  })(WAGS_Patch.toGraphEffectsDisconnectXFromY({
                      reflectSymbol: function () {
                          return "triangleOsc";
                      }
                  })({
                      reflectSymbol: function () {
                          return "recorder";
                      }
                  })(WAGS_Patch.toGraphEffectsDestroyUnit({
                      reflectSymbol: function () {
                          return "recorder";
                      }
                  })(WAGS_Patch.toGraphEffectsDestroyUnit({
                      reflectSymbol: function () {
                          return "triangleOsc";
                      }
                  })(WAGS_Patch.toGraphEffectsMakeSquareOsc({
                      reflectSymbol: function () {
                          return "squareOsc";
                      }
                  })(WAGS_Patch.toGraphEffectsConnectXToY({
                      reflectSymbol: function () {
                          return "squareOsc";
                      }
                  })({
                      reflectSymbol: function () {
                          return "mix";
                      }
                  })(WAGS_Patch.toGraphEffectsUnit))))))))(WAGS_Interpret.mixedAudioInterpret)(WAGS_Patch.getSubgraphsAll()(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLNil)))))(WAGS_Patch.getTumultsAll()(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLNil)))))({
                      microphone: Data_Maybe.Nothing.value,
                      mediaElement: Data_Maybe.Nothing.value,
                      subgraphs: {},
                      tumults: {}
                  }))(function () {
                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                          reflectSymbol: function () {
                              return "squareOsc";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTSquareOsc)(WAGS_Change.oneShotChangeSquareOscOffset)(WAGS_Change.changeXSquareOsc({
                          reflectSymbol: function () {
                              return "squareOsc";
                          }
                      })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil))))({
                          squareOsc: 220.0
                      }))(function () {
                          return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig);
                      });
                  });
              };
              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
                  reflectSymbol: function () {
                      return "recorder";
                  }
              })({
                  reflectSymbol: function () {
                      return "mix";
                  }
              })()()({
                  reflectSymbol: function () {
                      return "TRecorder";
                  }
              })({
                  reflectSymbol: function () {
                      return "TGain";
                  }
              })()()()()())({
                  source: Type_Proxy["Proxy"].value,
                  dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
              }))(function () {
                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
                      reflectSymbol: function () {
                          return "triangleOsc";
                      }
                  })({
                      reflectSymbol: function () {
                          return "recorder";
                      }
                  })()()({
                      reflectSymbol: function () {
                          return "TTriangleOsc";
                      }
                  })({
                      reflectSymbol: function () {
                          return "TRecorder";
                      }
                  })()()()()())({
                      source: Type_Proxy["Proxy"].value,
                      dest: Type_Proxy["Proxy"].value
                  }))(function () {
                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                          reflectSymbol: function () {
                              return "triangleOsc";
                          }
                      })()({
                          reflectSymbol: function () {
                              return "TTriangleOsc";
                          }
                      })()()())(Type_Proxy["Proxy"].value))(function () {
                          return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                              reflectSymbol: function () {
                                  return "recorder";
                              }
                          })()({
                              reflectSymbol: function () {
                                  return "TRecorder";
                              }
                          })()()())(Type_Proxy["Proxy"].value))(function () {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                                  reflectSymbol: function () {
                                      return "squareOsc";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSquareOsc({
                                  reflectSymbol: function () {
                                      return "squareOsc";
                                  }
                              })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))))(WAGS_Example_KitchenSink_Types_SquareOsc.ksSquareOscCreate))(function () {
                                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Connect.iconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Connect.connectInstance({
                                      reflectSymbol: function () {
                                          return "squareOsc";
                                      }
                                  })({
                                      reflectSymbol: function () {
                                          return "mix";
                                      }
                                  })()()({
                                      reflectSymbol: function () {
                                          return "TSquareOsc";
                                      }
                                  })({
                                      reflectSymbol: function () {
                                          return "TGain";
                                      }
                                  })()()()()())({
                                      source: Type_Proxy["Proxy"].value,
                                      dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                                  }))(function () {
                                      return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig);
                                  });
                              });
                          });
                      });
                  });
              });
          })()));
      };
  });
  exports["doTriangleOsc"] = doTriangleOsc;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.TLP.SinOsc"] = $PS["WAGS.Example.KitchenSink.TLP.SinOsc"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.TLP.SinOsc"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var $$Math = $PS["Math"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Destroy = $PS["WAGS.Destroy"];
  var WAGS_Disconnect = $PS["WAGS.Disconnect"];
  var WAGS_Example_KitchenSink_TLP_TriangleOsc = $PS["WAGS.Example.KitchenSink.TLP.TriangleOsc"];
  var WAGS_Example_KitchenSink_Timing = $PS["WAGS.Example.KitchenSink.Timing"];
  var WAGS_Example_KitchenSink_Types_Empty = $PS["WAGS.Example.KitchenSink.Types.Empty"];
  var WAGS_Example_KitchenSink_Types_SinOsc = $PS["WAGS.Example.KitchenSink.Types.SinOsc"];
  var WAGS_Example_KitchenSink_Types_TriangleOsc = $PS["WAGS.Example.KitchenSink.Types.TriangleOsc"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var doSinOsc = WAGS_Control_Functions.ibranch(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return function (lsig) {
          var $2 = $$Math.remainder(v.time)(WAGS_Example_KitchenSink_Timing.pieceTime) < WAGS_Example_KitchenSink_Timing.timing.ksSinOsc.end;
          if ($2) {
              return new Data_Either.Right(Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Example_KitchenSink_Types_SinOsc.deltaKsSinOsc(v.time))(lsig));
          };
          return Data_Either.Left.create(WAGS_Control_Functions.icont(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(WAGS_Example_KitchenSink_TLP_TriangleOsc.doTriangleOsc)(Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Disconnect.idisconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Disconnect.disconnector({
              reflectSymbol: function () {
                  return "sinOsc";
              }
          })({
              reflectSymbol: function () {
                  return "mix";
              }
          })()()({
              reflectSymbol: function () {
                  return "TSinOsc";
              }
          })({
              reflectSymbol: function () {
                  return "TGain";
              }
          })()()()()())({
              source: Type_Proxy["Proxy"].value,
              dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
          }))(function () {
              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Destroy.idestroy(WAGS_Interpret.mixedAudioInterpret)(WAGS_Destroy.destroyer({
                  reflectSymbol: function () {
                      return "sinOsc";
                  }
              })()({
                  reflectSymbol: function () {
                      return "TSinOsc";
                  }
              })()()())(Type_Proxy["Proxy"].value))(function () {
                  return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                      reflectSymbol: function () {
                          return "recorder";
                      }
                  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createRecorder({
                      reflectSymbol: function () {
                          return "recorder";
                      }
                  })()())()(WAGS_Create.createStepRLCons({
                      reflectSymbol: function () {
                          return "triangleOsc";
                      }
                  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createTriangleOsc({
                      reflectSymbol: function () {
                          return "triangleOsc";
                      }
                  })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                      reflectSymbol: function () {
                          return "triangleOsc";
                      }
                  })({
                      reflectSymbol: function () {
                          return "recorder";
                      }
                  })()()({
                      reflectSymbol: function () {
                          return "TTriangleOsc";
                      }
                  })({
                      reflectSymbol: function () {
                          return "TRecorder";
                      }
                  })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(WAGS_Example_KitchenSink_Types_TriangleOsc.ksTriangleOscCreate(v.world)))(function () {
                      return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Connect.iconnect(WAGS_Interpret.mixedAudioInterpret)(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "recorder";
                          }
                      })({
                          reflectSymbol: function () {
                              return "mix";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TRecorder";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())({
                          source: Type_Proxy["Proxy"].value,
                          dest: WAGS_Example_KitchenSink_Types_Empty.cursorGain
                      }))(function () {
                          return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(lsig);
                      });
                  });
              });
          })));
      };
  });
  exports["doSinOsc"] = doSinOsc;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink.Piece"] = $PS["WAGS.Example.KitchenSink.Piece"] || {};
  var exports = $PS["WAGS.Example.KitchenSink.Piece"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Example_KitchenSink_TLP_SinOsc = $PS["WAGS.Example.KitchenSink.TLP.SinOsc"];
  var WAGS_Example_KitchenSink_Types_SinOsc = $PS["WAGS.Example.KitchenSink.Types.SinOsc"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var piece = WAGS_Control_Functions.istart(Data_Monoid.monoidString)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Control_Types.isSceneScene)(function (v) {
      return Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSpeaker()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "mix";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "mix";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sinOsc";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sinOsc";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "mix";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sinOsc";
          }
      })({
          reflectSymbol: function () {
              return "mix";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(WAGS_Create_Optionals.speaker({
          mix: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(0.0)(WAGS_Example_KitchenSink_Types_SinOsc.ksSinOscCreate)
      })))({
          loop: WAGS_Example_KitchenSink_TLP_SinOsc.doSinOsc,
          iteration: 0
      });
  })(WAGS_Example_KitchenSink_TLP_SinOsc.doSinOsc);
  exports["piece"] = piece;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.KitchenSink"] = $PS["WAGS.Example.KitchenSink"] || {};
  var exports = $PS["WAGS.Example.KitchenSink"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Comonad_Cofree = $PS["Control.Comonad.Cofree"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Typelevel_Num_Ops = $PS["Data.Typelevel.Num.Ops"];
  var Data_Typelevel_Num_Sets = $PS["Data.Typelevel.Num.Sets"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Vec = $PS["Data.Vec"];
  var Effect = $PS["Effect"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var FRP_Behavior = $PS["FRP.Behavior"];
  var FRP_Event = $PS["FRP.Event"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_Subscription = $PS["Halogen.Subscription"];
  var $$Math = $PS["Math"];
  var WAGS_Example_KitchenSink_Piece = $PS["WAGS.Example.KitchenSink.Piece"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Rendered = $PS["WAGS.Rendered"];
  var WAGS_Run = $PS["WAGS.Run"];                
  var StartAudio = (function () {
      function StartAudio() {

      };
      StartAudio.value = new StartAudio();
      return StartAudio;
  })();
  var ReportGraph = (function () {
      function ReportGraph(value0) {
          this.value0 = value0;
      };
      ReportGraph.create = function (value0) {
          return new ReportGraph(value0);
      };
      return ReportGraph;
  })();
  var HydrateRecording = (function () {
      function HydrateRecording(value0) {
          this.value0 = value0;
      };
      HydrateRecording.create = function (value0) {
          return new HydrateRecording(value0);
      };
      return HydrateRecording;
  })();
  var StopAudio = (function () {
      function StopAudio() {

      };
      StopAudio.value = new StopAudio();
      return StopAudio;
  })();
  var render = function (state) {
      return Halogen_HTML_Elements.div_(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Elements.h1_([ Halogen_HTML_Core.text("Kitchen sink") ]), Halogen_HTML_Elements.p([  ])([ Halogen_HTML_Core.text("Unit tests for WAGS. Tries to test everything!") ]), Halogen_HTML_Elements.p([  ])([ Halogen_HTML_Core.text("As the audio plays, the current graph should appear below.") ]), Halogen_HTML_Elements.p([  ])([ Halogen_HTML_Core.text("When data is available for a recording (which should happen every time the triangleOsc plays) an audio tag should appear.") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v) {
          return StartAudio.value;
      }) ])([ Halogen_HTML_Core.text("Start audio") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v) {
          return StopAudio.value;
      }) ])([ Halogen_HTML_Core.text("Stop audio") ]), Halogen_HTML_Elements.p([  ])([ Halogen_HTML_Core.text("Graph :: " + Data_Show.show(Data_Maybe.showMaybe(Data_Show.showString))(state.graph)) ]) ])(Data_Maybe.maybe([  ])(function (aud) {
          return [ Halogen_HTML_Elements.audio([ Halogen_HTML_Properties.src(aud), Halogen_HTML_Properties.controls(true) ])([  ]) ];
      })(state.audioSrc)));
  };
  var makeDistortionCurve = function (k) {
      var deg = $$Math.pi / 180.0;
      return Data_Functor.map(Data_Functor.functorArray)(function (i) {
          var x = (Data_Int.toNumber(i) * 2.0) / Data_Int.toNumber(44100) - 1.0;
          return ((3.0 + k) * x * 20.0 * deg) / ($$Math.pi + k * $$Math.abs(x));
      })(Data_Array.range(0)(44100 - 1 | 0));
  };
  var initialState = function (v) {
      return {
          unsubscribeFromWAGS: Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit),
          unsubscribeFromHalogen: Data_Maybe.Nothing.value,
          audioCtx: Data_Maybe.Nothing.value,
          graph: Data_Maybe.Nothing.value,
          audioSrc: Data_Maybe.Nothing.value
      };
  };
  var fetchBuffer = function (dictMonadAff) {
      return function (audioCtx) {
          return function (addr) {
              return Effect_Aff_Class.liftAff(dictMonadAff)(WAGS_Interpret.decodeAudioDataFromUri(audioCtx)(addr));
          };
      };
  };
  var easingAlgorithm = (function () {
      var fOf = function (initialTime) {
          return Control_Comonad_Cofree.mkCofree(initialTime)(function (adj) {
              return fOf(Data_Ord.max(Data_Ord.ordInt)(10)(initialTime - adj | 0));
          });
      };
      return fOf(20);
  })();
  var handleAction = function (dictMonadThrow) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (v) {
                  if (v instanceof HydrateRecording) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $20 = {};
                          for (var $21 in v1) {
                              if ({}.hasOwnProperty.call(v1, $21)) {
                                  $20[$21] = v1[$21];
                              };
                          };
                          $20.audioSrc = Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.value0);
                          return $20;
                      });
                  };
                  if (v instanceof ReportGraph) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $24 = {};
                          for (var $25 in v1) {
                              if ({}.hasOwnProperty.call(v1, $25)) {
                                  $24[$25] = v1[$25];
                              };
                          };
                          $24.graph = Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                              reflectSymbol: function () {
                                  return "analysers";
                              }
                          })(Data_Show.showRecordFieldsCons({
                              reflectSymbol: function () {
                                  return "headroom";
                              }
                          })(Data_Show.showRecordFieldsCons({
                              reflectSymbol: function () {
                                  return "headroomInSeconds";
                              }
                          })(Data_Show.showRecordFieldsCons({
                              reflectSymbol: function () {
                                  return "instructions";
                              }
                          })(Data_Show.showRecordFieldsCons({
                              reflectSymbol: function () {
                                  return "remainingTime";
                              }
                          })(Data_Show.showRecordFieldsCons({
                              reflectSymbol: function () {
                                  return "remainingTimeInSeconds";
                              }
                          })(Data_Show.showRecordFieldsCons({
                              reflectSymbol: function () {
                                  return "res";
                              }
                          })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showNumber))(Data_Show.showInt))(Data_Show.showArray(WAGS_Rendered.showInstruction)))(Data_Show.showNumber))(Data_Show.showInt))(Data_Show.showRecord()(Data_Show.showRecordFieldsNil))))(v.value0));
                          return $24;
                      });
                  };
                  if (v instanceof StartAudio) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(handleAction(dictMonadThrow)(dictMonadAff.MonadEffect0())(dictMonadAff)(StopAudio.value))(function () {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Halogen_Subscription.create))(function (v1) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.subscribe(v1.emitter))(function (unsubscribeFromHalogen) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.context))(function (audioCtx) {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.makeFFIAudioSnapshot(audioCtx)))(function (ffiAudio) {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.makePeriodicWave()(audioCtx)(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD2)()(Data_Typelevel_Num_Ops.divMod10D1D0)()(Data_Typelevel_Num_Ops.divMod10D2D0))(0.0)(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD1)()(Data_Typelevel_Num_Ops.divMod10D0D0)()(Data_Typelevel_Num_Ops.divMod10D1D0))(-0.1)(Data_Vec.empty)))(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD2)()(Data_Typelevel_Num_Ops.divMod10D1D0)()(Data_Typelevel_Num_Ops.divMod10D2D0))(0.0)(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD1)()(Data_Typelevel_Num_Ops.divMod10D0D0)()(Data_Typelevel_Num_Ops.divMod10D1D0))(5.0e-2)(Data_Vec.empty)))))(function (myWave) {
                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.makeFloatArray(makeDistortionCurve(400.0))))(function (wicked) {
                                                  var recorder = WAGS_Interpret.mediaRecorderToUrl("audio/ogg; codecs=opus")((function () {
                                                      var $43 = Halogen_Subscription.notify(v1.listener);
                                                      return function ($44) {
                                                          return $43(HydrateRecording.create($44));
                                                      };
                                                  })());
                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(WAGS_Interpret.getMicrophoneAndCamera(true)(false)))(function (v2) {
                                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Halogen_Query_HalogenM.monadThrowHalogenM(dictMonadThrow))(Effect_Exception.error("Microphone not available")))(Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM))(v2.microphone))(function (microphone) {
                                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(fetchBuffer(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(audioCtx)("https://freesound.org/data/previews/353/353194_5121236-hq.mp3"))(function (chimes) {
                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(fetchBuffer(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(audioCtx)("https://freesound.org/data/previews/513/513742_153257-hq.mp3"))(function (shruti) {
                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(fetchBuffer(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(audioCtx)("https://freesound.org/data/previews/555/555786_10147844-hq.mp3"))(function (reverb) {
                                                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(FRP_Event.subscribe(WAGS_Run.run()(WAGS_Run.analyserRefsNil)(WAGS_Run.workWithAnalysersNil)(WAGS_Run.getAnalysersNil)(Data_Monoid.monoidString)(Control_Applicative.pure(FRP_Event.applicativeEvent)(Data_Unit.unit))(Control_Applicative.pure(FRP_Behavior.applicativeABehavior(FRP_Event.functorEvent))({
                                                                          buffers: {
                                                                              "my-buffer": chimes,
                                                                              reverb: reverb,
                                                                              shruti: shruti
                                                                          },
                                                                          microphone: microphone,
                                                                          recorders: {
                                                                              "my-recorder": recorder
                                                                          },
                                                                          floatArrays: {
                                                                              "my-waveshaper": wicked
                                                                          },
                                                                          periodicWaves: {
                                                                              "my-wave": myWave
                                                                          }
                                                                      }))({
                                                                          easingAlgorithm: easingAlgorithm
                                                                      })(ffiAudio)(WAGS_Example_KitchenSink_Piece.piece))((function () {
                                                                          var $45 = Halogen_Subscription.notify(v1.listener);
                                                                          return function ($46) {
                                                                              return $45(ReportGraph.create($46));
                                                                          };
                                                                      })())))(function (unsubscribeFromWAGS) {
                                                                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                                                                              var $30 = {};
                                                                              for (var $31 in v3) {
                                                                                  if ({}.hasOwnProperty.call(v3, $31)) {
                                                                                      $30[$31] = v3[$31];
                                                                                  };
                                                                              };
                                                                              $30.unsubscribeFromWAGS = unsubscribeFromWAGS;
                                                                              $30.unsubscribeFromHalogen = Control_Applicative.pure(Data_Maybe.applicativeMaybe)(unsubscribeFromHalogen);
                                                                              $30.audioCtx = new Data_Maybe.Just(audioCtx);
                                                                              return $30;
                                                                          });
                                                                      });
                                                                  });
                                                              });
                                                          });
                                                      });
                                                  });
                                              });
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  };
                  if (v instanceof StopAudio) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(v1.unsubscribeFromWAGS))(function () {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v1.audioCtx)((function () {
                                  var $47 = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()));
                                  return function ($48) {
                                      return $47(WAGS_Interpret.close($48));
                                  };
                              })()))(function () {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v1.unsubscribeFromHalogen)(Halogen_Query_HalogenM.unsubscribe))(function () {
                                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                          var $37 = {};
                                          for (var $38 in v2) {
                                              if ({}.hasOwnProperty.call(v2, $38)) {
                                                  $37[$38] = v2[$38];
                                              };
                                          };
                                          $37.unsubscribeFromWAGS = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                                          $37.audioCtx = Data_Maybe.Nothing.value;
                                          return $37;
                                      });
                                  });
                              });
                          });
                      });
                  };
                  throw new Error("Failed pattern match at WAGS.Example.KitchenSink (line 111, column 16 - line 163, column 72): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictMonadThrow) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render,
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictMonadThrow)(dictMonadAff.MonadEffect0())(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: Halogen_Component.defaultEval.receive,
                      initialize: Halogen_Component.defaultEval.initialize,
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.Makenna"] = $PS["WAGS.Example.Makenna"] || {};
  var exports = $PS["WAGS.Example.Makenna"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Comonad_Cofree = $PS["Control.Comonad.Cofree"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Lens_Tuple = $PS["Data.Lens.Lens.Tuple"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Typelevel_Num_Ops = $PS["Data.Typelevel.Num.Ops"];
  var Data_Typelevel_Num_Sets = $PS["Data.Typelevel.Num.Sets"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Vec = $PS["Data.Vec"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var FRP_Behavior = $PS["FRP.Behavior"];
  var FRP_Event = $PS["FRP.Event"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Heterogeneous_Mapping = $PS["Heterogeneous.Mapping"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions_Graph = $PS["WAGS.Control.Functions.Graph"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Math = $PS["WAGS.Math"];
  var WAGS_Run = $PS["WAGS.Run"];                
  var StartAudio = (function () {
      function StartAudio() {

      };
      StartAudio.value = new StartAudio();
      return StartAudio;
  })();
  var StopAudio = (function () {
      function StopAudio() {

      };
      StopAudio.value = new StopAudio();
      return StopAudio;
  })();
  var shortAsdr = function (t) {
      if (t < 0.15) {
          return WAGS_Math.calcSlope(0.0)(0.0)(0.15)(0.15)(t);
      };
      if (t < 0.25) {
          return WAGS_Math.calcSlope(0.15)(0.15)(0.25)(5.0e-2)(t);
      };
      if (t < 0.36) {
          return WAGS_Math.calcSlope(0.25)(5.0e-2)(0.36)(0.0)(t);
      };
      if (Data_Boolean.otherwise) {
          return 0.0;
      };
      throw new Error("Failed pattern match at WAGS.Example.Makenna (line 116, column 1 - line 116, column 30): " + [ t.constructor.name ]);
  };
  var score = [ new Data_Tuple.Tuple(2.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(70.0)), new Data_Tuple.Tuple(1.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(70.0)), new Data_Tuple.Tuple(3.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(72.0)), new Data_Tuple.Tuple(3.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(70.0)), new Data_Tuple.Tuple(3.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(75.0)), new Data_Tuple.Tuple(4.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(74.0)), new Data_Tuple.Tuple(2.0, Control_Plus.empty(Data_Maybe.plusMaybe)), new Data_Tuple.Tuple(2.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(70.0)), new Data_Tuple.Tuple(1.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(70.0)), new Data_Tuple.Tuple(3.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(72.0)), new Data_Tuple.Tuple(3.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(70.0)), new Data_Tuple.Tuple(3.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(77.0)), new Data_Tuple.Tuple(4.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(75.0)), new Data_Tuple.Tuple(2.0, Control_Plus.empty(Data_Maybe.plusMaybe)), new Data_Tuple.Tuple(2.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(70.0)), new Data_Tuple.Tuple(1.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(70.0)), new Data_Tuple.Tuple(3.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(82.0)), new Data_Tuple.Tuple(3.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(79.0)), new Data_Tuple.Tuple(3.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(75.0)), new Data_Tuple.Tuple(3.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(74.0)), new Data_Tuple.Tuple(4.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(72.0)), new Data_Tuple.Tuple(2.0, Control_Plus.empty(Data_Maybe.plusMaybe)), new Data_Tuple.Tuple(2.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(80.0)), new Data_Tuple.Tuple(1.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(80.0)), new Data_Tuple.Tuple(3.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(79.0)), new Data_Tuple.Tuple(3.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(75.0)), new Data_Tuple.Tuple(3.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(77.0)), new Data_Tuple.Tuple(6.0, Control_Applicative.pure(Data_Maybe.applicativeMaybe)(75.0)) ];
  var rest0 = new Data_Tuple.Tuple({
      start: 0.0,
      dur: 2.0,
      end: 2.0
  }, Control_Plus.empty(Data_Maybe.plusMaybe));
  var score$prime = (function () {
      var folded = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (v) {
          return function (v1) {
              var $$new = new Data_Tuple.Tuple({
                  start: (Data_Tuple.fst(v.cur)).end,
                  dur: v1.value0,
                  end: (Data_Tuple.fst(v.cur)).end + v1.value0
              }, Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
                  return v2 - 19.0;
              })(v1.value1));
              return {
                  cur: $$new,
                  acc: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.acc)([ $$new ])
              };
          };
      })({
          cur: rest0,
          acc: [ rest0 ]
      })(score);
      return folded.acc;
  })();
  var midiToCps = function (i) {
      return 440.0 * $$Math.pow(2.0)((i - 69.0) / 12.0);
  };
  var initialState = function (v) {
      return {
          unsubscribe: Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit),
          audioCtx: Data_Maybe.Nothing.value
      };
  };
  var inTempo = Data_Lens_Setter.over(Data_Lens_Lens_Tuple["_1"](Data_Profunctor_Strong.strongFn))(Heterogeneous_Mapping.hmap(Heterogeneous_Mapping.hmapRecord()(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "dur";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "end";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexCons({
      reflectSymbol: function () {
          return "start";
      }
  })(Heterogeneous_Mapping.constMapping(Heterogeneous_Mapping.mappingFunction))(Heterogeneous_Mapping.mapRecordWithIndexNil)()())()())()()))(function (v) {
      return v * 0.3;
  }));
  var score$prime$prime = Data_Functor.map(Data_Functor.functorArray)(inTempo)(score$prime);
  var easingAlgorithm = (function () {
      var fOf = function (initialTime) {
          return Control_Comonad_Cofree.mkCofree(initialTime)(function (adj) {
              return fOf(Data_Ord.max(Data_Ord.ordInt)(20)(initialTime - adj | 0));
          });
      };
      return fOf(20);
  })();
  var buttonStyle = Halogen_HTML_Properties.style("padding: 3px; margin: 5px");
  var render = Data_Function["const"](Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.h1_([ Halogen_HTML_Core.text("Happy Birthday, Makenna!") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v) {
      return StartAudio.value;
  }), buttonStyle ])([ Halogen_HTML_Core.text("Play") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v) {
      return StopAudio.value;
  }), buttonStyle ])([ Halogen_HTML_Core.text("Stop") ]) ]));
  var asdr = function (t) {
      return function (d) {
          if (d < 0.4) {
              return shortAsdr(t);
          };
          if (t < 0.0) {
              return 0.0;
          };
          if (t < 0.2) {
              return WAGS_Math.calcSlope(0.0)(0.0)(0.2)(0.3)(t);
          };
          if (t < 0.4) {
              return WAGS_Math.calcSlope(0.2)(0.3)(0.4)(0.1)(t);
          };
          if (t < d - 6.0e-2) {
              return WAGS_Math.calcSlope(0.4)(0.1)(d - 6.0e-2)(0.0)(t);
          };
          if (Data_Boolean.otherwise) {
              return 0.0;
          };
          throw new Error("Failed pattern match at WAGS.Example.Makenna (line 123, column 1 - line 123, column 35): " + [ t.constructor.name, d.constructor.name ]);
      };
  };
  var scene = function (v) {
      return function (v1) {
          return function (to) {
              return WAGS_Create_Optionals.speaker({
                  gain: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableAudioParameter)(WAGS_Graph_Parameter.ff(WAGS_Graph_Parameter.lensTimeAudioParameter)(to)(WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(Data_Maybe.maybe(0.0)(Data_Function["const"](asdr(v.time - v1.value0.start)(v1.value0.dur)))(v1.value1))))({
                      osc: WAGS_Create_Optionals.periodicOsc(WAGS_Create_Optionals.periodicOscCtor2()(WAGS_Graph_Paramable.paramableAudioParameter))(v.world.bday)(WAGS_Graph_Parameter.ff(WAGS_Graph_Parameter.lensTimeAudioParameter)(to)(WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(midiToCps(Data_Maybe.fromMaybe(60.0)(v1.value1)))))
                  })
              });
          };
      };
  };
  var createFrame = function (e) {
      return Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSpeaker()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "osc";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createPeriodicOsc({
          reflectSymbol: function () {
              return "osc";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "osc";
          }
      })({
          reflectSymbol: function () {
              return "gain";
          }
      })()()({
          reflectSymbol: function () {
              return "TPeriodicOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(scene(e)(inTempo(rest0))(0.0)))(Data_List.fromFoldable(Data_Foldable.foldableArray)(score$prime$prime));
  };
  var piece = WAGS_Control_Functions_Graph.istart()(Data_Monoid.monoidUnit)(WAGS_Interpret.mixedAudioInterpret)(createFrame)(WAGS_Control_Functions_Graph.iloop(Data_Monoid.monoidUnit)()(WAGS_Interpret.mixedAudioInterpret)(function (v) {
      return function (l) {
          var f = function ($copy_v1) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v1) {
                  if (v1 instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(Data_List_Types.Nil.value);
                  };
                  if (v1 instanceof Data_List_Types.Cons) {
                      if (v.time > (Data_Tuple.fst(v1.value0)).end) {
                          $copy_v1 = v1.value1;
                          return;
                      };
                      if (Data_Boolean.otherwise) {
                          $tco_done = true;
                          return Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                              reflectSymbol: function () {
                                  return "speaker";
                              }
                          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeSpeaker())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                              reflectSymbol: function () {
                                  return "gain";
                              }
                          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeGain({
                              reflectSymbol: function () {
                                  return "gain";
                              }
                          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                              reflectSymbol: function () {
                                  return "osc";
                              }
                          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changePeriodicOsc({
                              reflectSymbol: function () {
                                  return "osc";
                              }
                          })()(WAGS_Change.changePeriodicXOsc({
                              reflectSymbol: function () {
                                  return "osc";
                              }
                          })()))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLNil))))(scene(v)(v1.value0)(5.0e-2)))(new Data_List_Types.Cons(v1.value0, v1.value1));
                      };
                  };
                  throw new Error("Failed pattern match at WAGS.Example.Makenna (line 163, column 13 - line 167, column 63): " + [ v1.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v1);
              };
              return $tco_result;
          };
          return f(l);
      };
  }));
  var handleAction = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof StartAudio) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(handleAction(dictMonadAff.MonadEffect0())(dictMonadAff)(StopAudio.value))(function () {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(function __do() {
                          var audioCtx = WAGS_Interpret.context();
                          var ffiAudio = WAGS_Interpret.makeFFIAudioSnapshot(audioCtx)();
                          var bday = WAGS_Interpret.makePeriodicWave()(audioCtx)(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD4)()(Data_Typelevel_Num_Ops.divMod10D3D0)()(Data_Typelevel_Num_Ops.divMod10D4D0))(2.0e-2)(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD3)()(Data_Typelevel_Num_Ops.divMod10D2D0)()(Data_Typelevel_Num_Ops.divMod10D3D0))(0.3)(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD2)()(Data_Typelevel_Num_Ops.divMod10D1D0)()(Data_Typelevel_Num_Ops.divMod10D2D0))(-0.1)(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD1)()(Data_Typelevel_Num_Ops.divMod10D0D0)()(Data_Typelevel_Num_Ops.divMod10D1D0))(-0.25)(Data_Vec.empty)))))(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD4)()(Data_Typelevel_Num_Ops.divMod10D3D0)()(Data_Typelevel_Num_Ops.divMod10D4D0))(-3.0e-2)(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD3)()(Data_Typelevel_Num_Ops.divMod10D2D0)()(Data_Typelevel_Num_Ops.divMod10D3D0))(-0.25)(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD2)()(Data_Typelevel_Num_Ops.divMod10D1D0)()(Data_Typelevel_Num_Ops.divMod10D2D0))(5.0e-2)(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD1)()(Data_Typelevel_Num_Ops.divMod10D0D0)()(Data_Typelevel_Num_Ops.divMod10D1D0))(0.2)(Data_Vec.empty)))))();
                          var unsubscribe = FRP_Event.subscribe(WAGS_Run.run()(WAGS_Run.analyserRefsNil)(WAGS_Run.workWithAnalysersNil)(WAGS_Run.getAnalysersNil)(Data_Monoid.monoidUnit)(Control_Applicative.pure(FRP_Event.applicativeEvent)(Data_Unit.unit))(Control_Applicative.pure(FRP_Behavior.applicativeABehavior(FRP_Event.functorEvent))({
                              bday: bday
                          }))({
                              easingAlgorithm: easingAlgorithm
                          })(ffiAudio)(piece))(function (v1) {
                              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                          })();
                          return {
                              unsubscribe: unsubscribe,
                              audioCtx: audioCtx
                          };
                      }))(function (v1) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                              var $48 = {};
                              for (var $49 in v2) {
                                  if ({}.hasOwnProperty.call(v2, $49)) {
                                      $48[$49] = v2[$49];
                                  };
                              };
                              $48.unsubscribe = v1.unsubscribe;
                              $48.audioCtx = new Data_Maybe.Just(v1.audioCtx);
                              return $48;
                          });
                      });
                  });
              };
              if (v instanceof StopAudio) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(function __do() {
                          v1.unsubscribe();
                          return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v1.audioCtx)(WAGS_Interpret.close)();
                      }))(function () {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                              var $54 = {};
                              for (var $55 in v2) {
                                  if ({}.hasOwnProperty.call(v2, $55)) {
                                      $54[$55] = v2[$55];
                                  };
                              };
                              $54.unsubscribe = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                              $54.audioCtx = Data_Maybe.Nothing.value;
                              return $54;
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at WAGS.Example.Makenna (line 226, column 16 - line 249, column 64): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render,
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictMonadAff.MonadEffect0())(dictMonadAff),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: Halogen_Component.defaultEval.receive,
                  initialize: Halogen_Component.defaultEval.initialize,
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.NoLoop"] = $PS["WAGS.Example.NoLoop"] || {};
  var exports = $PS["WAGS.Example.NoLoop"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array_NonEmpty = $PS["Data.Array.NonEmpty"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Functor_Indexed = $PS["Data.Functor.Indexed"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var FRP_Behavior = $PS["FRP.Behavior"];
  var FRP_Event = $PS["FRP.Event"];
  var FRP_Event_Class = $PS["FRP.Event.Class"];
  var FRP_Event_Time = $PS["FRP.Event.Time"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions_Graph = $PS["WAGS.Control.Functions.Graph"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Run = $PS["WAGS.Run"];                
  var StartAudio = (function () {
      function StartAudio() {

      };
      StartAudio.value = new StartAudio();
      return StartAudio;
  })();
  var StopAudio = (function () {
      function StopAudio() {

      };
      StopAudio.value = new StopAudio();
      return StopAudio;
  })();
  var render = function (v) {
      return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.h1_([ Halogen_HTML_Core.text("No loop rendering") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v1) {
          return StartAudio.value;
      }) ])([ Halogen_HTML_Core.text("Start audio") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v1) {
          return StopAudio.value;
      }) ])([ Halogen_HTML_Core.text("Stop audio") ]) ]);
  };
  var initialState = function (v) {
      return {
          unsubscribe: Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit),
          audioCtx: Data_Maybe.Nothing.value
      };
  };
  var defaultEnv = Data_Array_NonEmpty.fromNonEmpty(new Data_NonEmpty.NonEmpty(0.0, [ 0.0 ]));
  var env = function (v) {
      return {
          values: Data_Maybe.fromMaybe(defaultEnv)(Data_Array_NonEmpty.fromArray(v.v)),
          timeOffset: v.o,
          duration: v.d
      };
  };
  var scene = function (mult) {
      return WAGS_Create_Optionals.speaker({
          gain0: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableEnvelope)(env({
              v: [ 0.0, 0.2, 5.0e-2, 2.5e-2, 0.0 ],
              o: 0.0,
              d: 2.0
          }))({
              sin0: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(220.0 * mult)
          }),
          gain1: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableEnvelope)(env({
              v: [ 0.0, 5.0e-2, 2.5e-2, 2.5e-2, 0.0 ],
              o: 0.0,
              d: 2.0
          }))({
              sin1: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(220.0 * mult * 2.0)
          }),
          gain2: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableEnvelope)(env({
              v: [ 0.0, 0.3, 5.0e-2, 2.5e-2, 0.0 ],
              o: 0.0,
              d: 2.0
          }))({
              sin2: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(220.0 * mult * 3.0)
          }),
          gain3: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableEnvelope)(env({
              v: [ 0.0, 5.0e-2, 2.5e-2, 2.5e-2, 0.0 ],
              o: 0.0,
              d: 2.0
          }))({
              sin3: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(220.0 * mult * 4.0)
          })
      });
  };
  var piece = WAGS_Control_Functions_Graph.istart()(Data_Monoid.monoidUnit)(WAGS_Interpret.mixedAudioInterpret)((function () {
      var $42 = WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSpeaker()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain0";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain0";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin0";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin0";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain1";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain1";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin1";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin1";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain2";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain2";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin2";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin2";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain3";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain3";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin3";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin3";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil)))))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain0";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain1";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain2";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain3";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil)))))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin0";
          }
      })({
          reflectSymbol: function () {
              return "gain0";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin1";
          }
      })({
          reflectSymbol: function () {
              return "gain1";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin2";
          }
      })({
          reflectSymbol: function () {
              return "gain2";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin3";
          }
      })({
          reflectSymbol: function () {
              return "gain3";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil)))))(WAGS_Create.connectAfterCreateNil))));
      var $43 = Data_Newtype.unwrap();
      return function ($44) {
          return $42(scene((function (v) {
              return v.trigger;
          })($43($44))));
      };
  })())(WAGS_Control_Functions_Graph.iloop(Data_Monoid.monoidUnit)()(WAGS_Interpret.mixedAudioInterpret)(function (v) {
      return function (v1) {
          return Data_Functor_Indexed.ivoid(WAGS_Control_Indexed.ixFunctorIxWAG)(WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "speaker";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeSpeaker())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "gain0";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeGain({
              reflectSymbol: function () {
                  return "gain0";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "sin0";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeSinOsc({
              reflectSymbol: function () {
                  return "sin0";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "gain1";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeGain({
              reflectSymbol: function () {
                  return "gain1";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "sin1";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeSinOsc({
              reflectSymbol: function () {
                  return "sin1";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "gain2";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeGain({
              reflectSymbol: function () {
                  return "gain2";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "sin2";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeSinOsc({
              reflectSymbol: function () {
                  return "sin2";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "gain3";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeGain({
              reflectSymbol: function () {
                  return "gain3";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "sin3";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeSinOsc({
              reflectSymbol: function () {
                  return "sin3";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLNil))))))(WAGS_Change.changeRLNil))))(scene(v.trigger)));
      };
  }));
  var handleAction = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof StartAudio) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.context))(function (audioCtx) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.makeFFIAudioSnapshot(audioCtx)))(function (ffiAudio) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(FRP_Event.subscribe(WAGS_Run.runNoLoop()(WAGS_Run.analyserRefsNil)(WAGS_Run.workWithAnalysersNil)(WAGS_Run.getAnalysersNil)(Data_Monoid.monoidUnit)(Control_Alt.alt(FRP_Event.altEvent)(Data_Functor.mapFlipped(FRP_Event.functorEvent)(FRP_Event_Class.fold(FRP_Event.eventIsEvent)(function (v1) {
                              return function (v2) {
                                  var $28 = v2.value0 >= 4.0;
                                  if ($28) {
                                      return new Data_Tuple.Tuple(v2.value0 - 1.0, false);
                                  };
                                  var $29 = v2.value0 <= 1.0;
                                  if ($29) {
                                      return new Data_Tuple.Tuple(v2.value0 + 1.0, true);
                                  };
                                  return new Data_Tuple.Tuple((function () {
                                      if (v2.value1) {
                                          return Data_Semiring.add(Data_Semiring.semiringNumber);
                                      };
                                      return Data_Ring.sub(Data_Ring.ringNumber);
                                  })()(v2.value0)(1.0), v2.value1);
                              };
                          })(FRP_Event_Time.interval(2000))(new Data_Tuple.Tuple(1.0, true)))(Data_Tuple.fst))(Control_Applicative.pure(FRP_Event.applicativeEvent)(1.0)))(Control_Applicative.pure(FRP_Behavior.applicativeABehavior(FRP_Event.functorEvent))(Data_Unit.unit))({})(ffiAudio)(piece))(function (v1) {
                              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                          })))(function (unsubscribe) {
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $33 = {};
                                  for (var $34 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $34)) {
                                          $33[$34] = v1[$34];
                                      };
                                  };
                                  $33.unsubscribe = unsubscribe;
                                  $33.audioCtx = new Data_Maybe.Just(audioCtx);
                                  return $33;
                              });
                          });
                      });
                  });
              };
              if (v instanceof StopAudio) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(v1.unsubscribe))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v1.audioCtx)((function () {
                              var $45 = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()));
                              return function ($46) {
                                  return $45(WAGS_Interpret.close($46));
                              };
                          })()))(function () {
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                  var $37 = {};
                                  for (var $38 in v2) {
                                      if ({}.hasOwnProperty.call(v2, $38)) {
                                          $37[$38] = v2[$38];
                                      };
                                  };
                                  $37.unsubscribe = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                                  $37.audioCtx = Data_Maybe.Nothing.value;
                                  return $37;
                              });
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at WAGS.Example.NoLoop (line 155, column 16 - line 181, column 64): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render,
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictMonadAff.MonadEffect0())(dictMonadAff),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: Halogen_Component.defaultEval.receive,
                  initialize: Halogen_Component.defaultEval.initialize,
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Tumult.Make"] = $PS["WAGS.Tumult.Make"] || {};
  var exports = $PS["WAGS.Tumult.Make"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Vec = $PS["Data.Vec"];
  var WAGS_Control_Functions = $PS["WAGS.Control.Functions"];
  var WAGS_Control_Functions_Subgraph = $PS["WAGS.Control.Functions.Subgraph"];
  var WAGS_Control_Types = $PS["WAGS.Control.Types"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Tumult = $PS["WAGS.Tumult"];                
  var tumultuously = function (dictPos) {
      return function (dictRowToList) {
          return function (dictCreate) {
              return function (dictSubgraphIsRenderable) {
                  return function (dictNodesCanBeTumultuous) {
                      return function (scenes) {
                          var go = function (scene) {
                              var init = WAGS_Create.create(dictCreate)(WAGS_Interpret.freeAudioInterpret)(Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(WAGS_Control_Functions.start(Data_Monoid.monoidUnit)(WAGS_Interpret.freeAudioInterpret))(scene));
                              var subscene = WAGS_Control_Functions_Subgraph["makeSceneR'"](Data_Monoid.monoidUnit)()(WAGS_Interpret.freeAudioInterpret)(init)(WAGS_Control_Functions_Subgraph.freeze(Data_Monoid.monoidUnit)()(WAGS_Interpret.freeAudioInterpret));
                              var frame = WAGS_Control_Types.oneSubFrame(subscene)(Data_Unit.unit);
                              return Data_Functor.map(Data_Functor.functorArray)(Data_Function.applyFlipped(Data_Unit.unit))(frame.instructions);
                          };
                          return WAGS_Tumult.unsafeTumult(Data_Functor.map(Data_Functor.functorArray)(go)(Data_Vec.toArray(scenes)));
                      };
                  };
              };
          };
      };
  };
  exports["tumultuously"] = tumultuously;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.SMC2022"] = $PS["WAGS.Example.SMC2022"] || {};
  var exports = $PS["WAGS.Example.SMC2022"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Comonad_Cofree = $PS["Control.Comonad.Cofree"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor_Indexed = $PS["Data.Functor.Indexed"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Typelevel_Num_Ops = $PS["Data.Typelevel.Num.Ops"];
  var Data_Typelevel_Num_Sets = $PS["Data.Typelevel.Num.Sets"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Vec = $PS["Data.Vec"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var FRP_Behavior = $PS["FRP.Behavior"];
  var FRP_Event = $PS["FRP.Event"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var $$Math = $PS["Math"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions_Graph = $PS["WAGS.Control.Functions.Graph"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Run = $PS["WAGS.Run"];
  var WAGS_Tumult_Make = $PS["WAGS.Tumult.Make"];                
  var Fast = (function () {
      function Fast() {

      };
      Fast.value = new Fast();
      return Fast;
  })();
  var Slow = (function () {
      function Slow() {

      };
      Slow.value = new Slow();
      return Slow;
  })();
  var StartAudio = (function () {
      function StartAudio() {

      };
      StartAudio.value = new StartAudio();
      return StartAudio;
  })();
  var StopAudio = (function () {
      function StopAudio() {

      };
      StopAudio.value = new StopAudio();
      return StopAudio;
  })();
  var SetExample = (function () {
      function SetExample(value0) {
          this.value0 = value0;
      };
      SetExample.create = function (value0) {
          return new SetExample(value0);
      };
      return SetExample;
  })();
  var render = function (v) {
      return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.h1_([ Halogen_HTML_Core.text("Hello world") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v1) {
          return StartAudio.value;
      }) ])([ Halogen_HTML_Core.text("Start audio") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v1) {
          return StopAudio.value;
      }) ])([ Halogen_HTML_Core.text("Stop audio") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v1) {
          return new SetExample((function () {
              if (v.whichExample instanceof Fast) {
                  return Slow.value;
              };
              if (v.whichExample instanceof Slow) {
                  return Fast.value;
              };
              throw new Error("Failed pattern match at WAGS.Example.SMC2022 (line 144, column 39 - line 146, column 25): " + [ v.whichExample.constructor.name ]);
          })());
      }) ])([ Halogen_HTML_Core.text((function () {
          if (v.whichExample instanceof Fast) {
              return "use runtime rep";
          };
          if (v.whichExample instanceof Slow) {
              return "use compile-time rep";
          };
          throw new Error("Failed pattern match at WAGS.Example.SMC2022 (line 148, column 19 - line 150, column 43): " + [ v.whichExample.constructor.name ]);
      })()) ]) ]);
  };
  var initialState = function (v) {
      return {
          unsubscribe: Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit),
          audioCtx: Data_Maybe.Nothing.value,
          whichExample: Fast.value
      };
  };
  var fsin0 = function (time) {
      return $$Math.sin(time * $$Math.pi) * 30.0 + 100.0;
  };
  var scene$prime = function (time) {
      return {
          gain0: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin0: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(fsin0(time))
          }),
          gain1: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin1: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(200.0)
          }),
          gain2: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin2: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(200.0)
          }),
          gain3: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin3: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(300.0)
          }),
          gain4: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin4: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(400.0)
          }),
          gain5: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin5: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(500.0)
          }),
          gain6: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin6: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(600.0)
          }),
          gain7: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin7: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(700.0)
          }),
          gain8: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin8: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(800.0)
          }),
          gain9: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin9: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(900.0)
          }),
          gain10: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin10: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(1000.0)
          }),
          gain11: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin11: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(1100.0)
          }),
          gain12: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin12: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(1200.0)
          }),
          gain13: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin13: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(1300.0)
          }),
          gain14: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin14: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(1400.0)
          }),
          gain15: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin15: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(1500.0)
          }),
          gain16: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin16: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(1600.0)
          }),
          gain17: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin17: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(1700.0)
          }),
          gain18: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin18: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(1800.0)
          }),
          gain19: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin19: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(1900.0)
          }),
          gain20: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin20: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(2000.0)
          }),
          gain21: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin21: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(2100.0)
          }),
          gain22: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin22: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(2200.0)
          }),
          gain23: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin23: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(2300.0)
          }),
          gain24: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin24: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(2400.0)
          }),
          gain25: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin25: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(2500.0)
          }),
          gain26: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin26: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(2600.0)
          }),
          gain27: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin27: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(2700.0)
          }),
          gain28: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin28: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(2800.0)
          }),
          gain29: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0e-2)({
              sin29: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(2900.0)
          })
      };
  };
  var pieceS = WAGS_Control_Functions_Graph.loopUsingScene(Data_Monoid.monoidUnit)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
      reflectSymbol: function () {
          return "speaker";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSpeaker()())()(WAGS_Create.createStepRLCons({
      reflectSymbol: function () {
          return "gn";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
      reflectSymbol: function () {
          return "gn";
      }
  })()())()(WAGS_Create.createStepRLConsC({
      reflectSymbol: function () {
          return "tmt";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil)(WAGS_Create.createTumult({
      reflectSymbol: function () {
          return "tmt";
      }
  })({
      reflectSymbol: function () {
          return "output";
      }
  })(Data_Typelevel_Num_Sets.posD1)()()))(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
      reflectSymbol: function () {
          return "gn";
      }
  })({
      reflectSymbol: function () {
          return "speaker";
      }
  })()()({
      reflectSymbol: function () {
          return "TGain";
      }
  })({
      reflectSymbol: function () {
          return "TSpeaker";
      }
  })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
      reflectSymbol: function () {
          return "tmt";
      }
  })({
      reflectSymbol: function () {
          return "gn";
      }
  })()()({
      reflectSymbol: function () {
          return "TTumult";
      }
  })({
      reflectSymbol: function () {
          return "TGain";
      }
  })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
      reflectSymbol: function () {
          return "speaker";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeSpeaker())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
      reflectSymbol: function () {
          return "gn";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeGain({
      reflectSymbol: function () {
          return "gn";
      }
  })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
      reflectSymbol: function () {
          return "tmt";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeTumult({
      reflectSymbol: function () {
          return "tmt";
      }
  })({
      reflectSymbol: function () {
          return "output";
      }
  })(Data_Typelevel_Num_Sets.posD1)())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLNil))))()(function (v) {
      return function (v1) {
          return {
              control: Data_Unit.unit,
              scene: WAGS_Create_Optionals.speaker({
                  gn: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0)({
                      tmt: WAGS_Create_Optionals.tumult(Data_Typelevel_Num_Sets.posD1)(WAGS_Tumult_Make.tumultuously(Data_Typelevel_Num_Sets.posD1)()(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain0";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain0";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin0";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin0";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain1";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain1";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin1";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin1";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain10";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain10";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin10";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin10";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain11";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain11";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin11";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin11";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain12";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain12";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin12";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin12";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain13";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain13";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin13";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin13";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain14";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain14";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin14";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin14";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain15";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain15";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin15";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin15";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain16";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain16";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin16";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin16";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain17";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain17";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin17";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin17";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain18";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain18";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin18";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin18";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain19";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain19";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin19";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin19";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain2";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain2";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin2";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin2";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain20";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain20";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin20";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin20";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain21";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain21";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin21";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin21";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain22";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain22";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin22";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin22";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain23";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain23";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin23";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin23";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain24";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain24";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin24";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin24";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain25";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain25";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin25";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin25";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain26";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain26";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin26";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin26";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain27";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain27";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin27";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin27";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain28";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain28";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin28";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin28";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain29";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain29";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin29";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin29";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain3";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain3";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin3";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin3";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain4";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain4";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin4";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin4";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain5";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain5";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin5";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin5";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain6";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain6";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin6";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin6";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain7";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain7";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin7";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin7";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain8";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain8";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin8";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin8";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "gain9";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                          reflectSymbol: function () {
                              return "gain9";
                          }
                      })()())()(WAGS_Create.createStepRLCons({
                          reflectSymbol: function () {
                              return "sin9";
                          }
                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                          reflectSymbol: function () {
                              return "sin9";
                          }
                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil)))))))))))))))))))))))))))))))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain0";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain1";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain10";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain11";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain12";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain13";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain14";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain15";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain16";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain17";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain18";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain19";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain2";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain20";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain21";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain22";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain23";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain24";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain25";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain26";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain27";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain28";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain29";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain3";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain4";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain5";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain6";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain7";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain8";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "gain9";
                          }
                      })({
                          reflectSymbol: function () {
                              return "output";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil)))))))))))))))))))))))))))))))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin0";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain0";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin1";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain1";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin10";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain10";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin11";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain11";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin12";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain12";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin13";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain13";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin14";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain14";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin15";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain15";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin16";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain16";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin17";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain17";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin18";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain18";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin19";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain19";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin2";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain2";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin20";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain20";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin21";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain21";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin22";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain22";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin23";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain23";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin24";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain24";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin25";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain25";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin26";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain26";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin27";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain27";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin28";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain28";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin29";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain29";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin3";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain3";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin4";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain4";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin5";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain5";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin6";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain6";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin7";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain7";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin8";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain8";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                          reflectSymbol: function () {
                              return "sin9";
                          }
                      })({
                          reflectSymbol: function () {
                              return "gain9";
                          }
                      })()()({
                          reflectSymbol: function () {
                              return "TSinOsc";
                          }
                      })({
                          reflectSymbol: function () {
                              return "TGain";
                          }
                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil)))))))))))))))))))))))))))))))(WAGS_Create.connectAfterCreateNil))))()()(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD1)()(Data_Typelevel_Num_Ops.divMod10D0D0)()(Data_Typelevel_Num_Ops.divMod10D1D0))({
                          output: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0)(scene$prime(v.time))
                      })(Data_Vec.empty)))({})
                  })
              })
          };
      };
  })(Data_Monoid.mempty(Data_Monoid.monoidFn(Data_Monoid.monoidUnit)));
  var scene = function (time) {
      return WAGS_Create_Optionals.speaker(scene$prime(time));
  };
  var pieceF = WAGS_Control_Functions_Graph.istart()(Data_Monoid.monoidUnit)(WAGS_Interpret.mixedAudioInterpret)((function () {
      var $46 = WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSpeaker()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain0";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain0";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin0";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin0";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain1";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain1";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin1";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin1";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain10";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain10";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin10";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin10";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain11";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain11";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin11";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin11";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain12";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain12";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin12";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin12";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain13";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain13";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin13";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin13";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain14";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain14";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin14";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin14";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain15";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain15";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin15";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin15";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain16";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain16";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin16";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin16";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain17";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain17";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin17";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin17";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain18";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain18";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin18";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin18";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain19";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain19";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin19";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin19";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain2";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain2";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin2";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin2";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain20";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain20";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin20";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin20";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain21";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain21";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin21";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin21";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain22";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain22";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin22";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin22";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain23";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain23";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin23";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin23";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain24";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain24";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin24";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin24";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain25";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain25";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin25";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin25";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain26";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain26";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin26";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin26";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain27";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain27";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin27";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin27";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain28";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain28";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin28";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin28";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain29";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain29";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin29";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin29";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain3";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain3";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin3";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin3";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain4";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain4";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin4";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin4";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain5";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain5";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin5";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin5";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain6";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain6";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin6";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin6";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain7";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain7";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin7";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin7";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain8";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain8";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin8";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin8";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "gain9";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "gain9";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "sin9";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "sin9";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil)))))))))))))))))))))))))))))))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain0";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain1";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain10";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain11";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain12";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain13";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain14";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain15";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain16";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain17";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain18";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain19";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain2";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain20";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain21";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain22";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain23";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain24";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain25";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain26";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain27";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain28";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain29";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain3";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain4";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain5";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain6";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain7";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain8";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "gain9";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil)))))))))))))))))))))))))))))))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin0";
          }
      })({
          reflectSymbol: function () {
              return "gain0";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin1";
          }
      })({
          reflectSymbol: function () {
              return "gain1";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin10";
          }
      })({
          reflectSymbol: function () {
              return "gain10";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin11";
          }
      })({
          reflectSymbol: function () {
              return "gain11";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin12";
          }
      })({
          reflectSymbol: function () {
              return "gain12";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin13";
          }
      })({
          reflectSymbol: function () {
              return "gain13";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin14";
          }
      })({
          reflectSymbol: function () {
              return "gain14";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin15";
          }
      })({
          reflectSymbol: function () {
              return "gain15";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin16";
          }
      })({
          reflectSymbol: function () {
              return "gain16";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin17";
          }
      })({
          reflectSymbol: function () {
              return "gain17";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin18";
          }
      })({
          reflectSymbol: function () {
              return "gain18";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin19";
          }
      })({
          reflectSymbol: function () {
              return "gain19";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin2";
          }
      })({
          reflectSymbol: function () {
              return "gain2";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin20";
          }
      })({
          reflectSymbol: function () {
              return "gain20";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin21";
          }
      })({
          reflectSymbol: function () {
              return "gain21";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin22";
          }
      })({
          reflectSymbol: function () {
              return "gain22";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin23";
          }
      })({
          reflectSymbol: function () {
              return "gain23";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin24";
          }
      })({
          reflectSymbol: function () {
              return "gain24";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin25";
          }
      })({
          reflectSymbol: function () {
              return "gain25";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin26";
          }
      })({
          reflectSymbol: function () {
              return "gain26";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin27";
          }
      })({
          reflectSymbol: function () {
              return "gain27";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin28";
          }
      })({
          reflectSymbol: function () {
              return "gain28";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin29";
          }
      })({
          reflectSymbol: function () {
              return "gain29";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin3";
          }
      })({
          reflectSymbol: function () {
              return "gain3";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin4";
          }
      })({
          reflectSymbol: function () {
              return "gain4";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin5";
          }
      })({
          reflectSymbol: function () {
              return "gain5";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin6";
          }
      })({
          reflectSymbol: function () {
              return "gain6";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin7";
          }
      })({
          reflectSymbol: function () {
              return "gain7";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin8";
          }
      })({
          reflectSymbol: function () {
              return "gain8";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "sin9";
          }
      })({
          reflectSymbol: function () {
              return "gain9";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil)))))))))))))))))))))))))))))))(WAGS_Create.connectAfterCreateNil))));
      var $47 = Data_Newtype.unwrap();
      return function ($48) {
          return $46(scene((function (v) {
              return v.time;
          })($47($48))));
      };
  })())(WAGS_Control_Functions_Graph.iloop(Data_Monoid.monoidUnit)()(WAGS_Interpret.mixedAudioInterpret)(function (v) {
      return function (v1) {
          return Data_Functor_Indexed.ivoid(WAGS_Control_Indexed.ixFunctorIxWAG)(WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "sin0";
              }
          })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTSinOsc)(WAGS_Change.oneShotChangeSinOscOffset)(WAGS_Change.changeXSinOsc({
              reflectSymbol: function () {
                  return "sin0";
              }
          })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil))))({
              sin0: fsin0(v.time)
          }));
      };
  }));
  var easingAlgorithm = (function () {
      var fOf = function (initialTime) {
          return Control_Comonad_Cofree.mkCofree(initialTime)(function (adj) {
              return fOf(Data_Ord.max(Data_Ord.ordInt)(20)(initialTime - adj | 0));
          });
      };
      return fOf(20);
  })();
  var handleAction = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof StartAudio) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.context))(function (audioCtx) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.makeFFIAudioSnapshot(audioCtx)))(function (ffiAudio) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(FRP_Event.subscribe(WAGS_Run.run()(WAGS_Run.analyserRefsNil)(WAGS_Run.workWithAnalysersNil)(WAGS_Run.getAnalysersNil)(Data_Monoid.monoidUnit)(Control_Applicative.pure(FRP_Event.applicativeEvent)(Data_Unit.unit))(Control_Applicative.pure(FRP_Behavior.applicativeABehavior(FRP_Event.functorEvent))(Data_Unit.unit))({
                                  easingAlgorithm: easingAlgorithm
                              })(ffiAudio)((function () {
                                  if (v1.whichExample instanceof Fast) {
                                      return pieceF;
                                  };
                                  if (v1.whichExample instanceof Slow) {
                                      return pieceS;
                                  };
                                  throw new Error("Failed pattern match at WAGS.Example.SMC2022 (line 163, column 70 - line 165, column 29): " + [ v1.whichExample.constructor.name ]);
                              })()))(function (v2) {
                                  return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                              })))(function (unsubscribe) {
                                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                      var $32 = {};
                                      for (var $33 in v2) {
                                          if ({}.hasOwnProperty.call(v2, $33)) {
                                              $32[$33] = v2[$33];
                                          };
                                      };
                                      $32.unsubscribe = unsubscribe;
                                      $32.audioCtx = new Data_Maybe.Just(audioCtx);
                                      return $32;
                                  });
                              });
                          });
                      });
                  });
              };
              if (v instanceof SetExample) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $36 = {};
                      for (var $37 in v1) {
                          if ({}.hasOwnProperty.call(v1, $37)) {
                              $36[$37] = v1[$37];
                          };
                      };
                      $36.whichExample = v.value0;
                      return $36;
                  });
              };
              if (v instanceof StopAudio) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(v1.unsubscribe))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v1.audioCtx)((function () {
                              var $49 = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()));
                              return function ($50) {
                                  return $49(WAGS_Interpret.close($50));
                              };
                          })()))(function () {
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                  var $41 = {};
                                  for (var $42 in v2) {
                                      if ({}.hasOwnProperty.call(v2, $42)) {
                                          $41[$42] = v2[$42];
                                      };
                                  };
                                  $41.unsubscribe = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                                  $41.audioCtx = Data_Maybe.Nothing.value;
                                  return $41;
                              });
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at WAGS.Example.SMC2022 (line 155, column 16 - line 174, column 64): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render,
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictMonadAff.MonadEffect0())(dictMonadAff),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: Halogen_Component.defaultEval.receive,
                  initialize: Halogen_Component.defaultEval.initialize,
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.SkipMachine"] = $PS["WAGS.Example.SkipMachine"] || {};
  var exports = $PS["WAGS.Example.SkipMachine"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Apply_Indexed = $PS["Control.Apply.Indexed"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Comonad = $PS["Control.Comonad"];
  var Control_Comonad_Cofree = $PS["Control.Comonad.Cofree"];
  var Control_Comonad_Cofree_Class = $PS["Control.Comonad.Cofree.Class"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Plus = $PS["Control.Plus"];
  var ConvertableOptions = $PS["ConvertableOptions"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var FRP_Behavior = $PS["FRP.Behavior"];
  var FRP_Event = $PS["FRP.Event"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions_Graph = $PS["WAGS.Control.Functions.Graph"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Patch = $PS["WAGS.Patch"];
  var WAGS_Run = $PS["WAGS.Run"];                
  var StartAudio = (function () {
      function StartAudio() {

      };
      StartAudio.value = new StartAudio();
      return StartAudio;
  })();
  var StopAudio = (function () {
      function StopAudio() {

      };
      StopAudio.value = new StopAudio();
      return StopAudio;
  })();
  var Freqz = (function () {
      function Freqz(value0) {
          this.value0 = value0;
      };
      Freqz.create = function (value0) {
          return new Freqz(value0);
      };
      return Freqz;
  })();         
  var rotate = function (v) {
      var arr = Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.value1)([ v.value0 ]);
      return new Data_NonEmpty.NonEmpty(Data_Maybe.fromMaybe(v.value0)(Data_Array.head(arr)), Data_Maybe.fromMaybe([  ])(Data_Array.tail(arr)));
  };
  var render = function (v) {
      return Halogen_HTML_Elements.div_(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Elements.h1_([ Halogen_HTML_Core.text("Skip machine") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v1) {
          return StartAudio.value;
      }) ])([ Halogen_HTML_Core.text("Start audio") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v1) {
          return StopAudio.value;
      }) ])([ Halogen_HTML_Core.text("Stop audio") ]) ])(Data_Functor.map(Data_Functor.functorArray)(function (freq) {
          return Halogen_HTML_Elements.p([  ])([ Halogen_HTML_Core.text(freq) ]);
      })(v.freqz)));
  };
  var order = new Data_NonEmpty.NonEmpty(0, [ 9, 11, 4, 1, 12, 7, 6, 15, 8, 13, 10, 2, 5, 3, 14 ]);
  var mxordr = Data_Foldable.foldl(Data_NonEmpty.foldableNonEmpty(Data_Foldable.foldableArray))(Data_Ord.max(Data_Ord.ordInt))(0)(order);
  var myChange = function (dictAudioInterpret) {
      return function (v) {
          return function (fcf) {
              var actualized = fcf(v.time);
              var hd = Control_Comonad.extract(Control_Comonad_Cofree.comonadCofree(Data_Functor.functorFn))(actualized);
              return Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(Data_Maybe.maybe(Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(Data_Unit.unit))(function (v1) {
                  return WAGS_Change.ichange(dictAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                      reflectSymbol: function () {
                          return "speaker";
                      }
                  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeSpeaker())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                      reflectSymbol: function () {
                          return "buf";
                      }
                  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changePlayBuf({
                      reflectSymbol: function () {
                          return "buf";
                      }
                  })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLNil))))(WAGS_Create_Optionals.speaker({
                      buf: WAGS_Create_Optionals.playBuf(WAGS_Create_Optionals.playBufCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertPlayBufOnOff)()()()({
                          reflectSymbol: function () {
                              return "onOff";
                          }
                      }))(WAGS_Create_Optionals.convertPlayBufAPBufferOffset)()()()({
                          reflectSymbol: function () {
                              return "bufferOffset";
                          }
                      })))(ConvertableOptions.defaultsRecord()())))({
                          onOff: WAGS_Graph_Parameter["_offOn"],
                          bufferOffset: (WAGS_Interpret.bufferDuration(v.world.hamlet) * Data_Int.toNumber(v1)) / Data_Int.toNumber(mxordr)
                      })(v.world.hamlet)
                  }));
              })(hd))(Control_Comonad_Cofree_Class.unwrapCofree(Control_Comonad_Cofree_Class.comonadCofreeCofree(Data_Functor.functorFn))(actualized));
          };
      };
  };
  var initialState = function (v) {
      return {
          unsubscribe: Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit),
          audioCtx: Data_Maybe.Nothing.value,
          freqz: [  ]
      };
  };
  var hnea = function (v) {
      return v.value0;
  };
  var easingAlgorithm = (function () {
      var fOf = function (initialTime) {
          return Control_Comonad_Cofree.mkCofree(initialTime)(function (adj) {
              return fOf(Data_Ord.max(Data_Ord.ordInt)(20)(initialTime - adj | 0));
          });
      };
      return fOf(20);
  })();
  var cf = function (nea) {
      return function (len) {
          var maxnea = Data_Foldable.foldl(Data_NonEmpty.foldableNonEmpty(Data_Foldable.foldableArray))(Data_Ord.max(Data_Ord.ordInt))(0)(nea) + 1 | 0;
          var section = len / Data_Int.toNumber(maxnea);
          var f = function (ct) {
              return function (x) {
                  return function (n) {
                      var hit = n + 4.0e-2 > x;
                      return Control_Comonad_Cofree.mkCofree((function () {
                          if (hit) {
                              return new Data_Maybe.Just(hnea(ct));
                          };
                          return Data_Maybe.Nothing.value;
                      })())(f((function () {
                          if (hit) {
                              return rotate(ct);
                          };
                          return ct;
                      })())((function () {
                          if (hit) {
                              return x + section;
                          };
                          return x;
                      })()));
                  };
              };
          };
          return f(nea)(0.0);
      };
  };
  var piece = WAGS_Control_Functions_Graph.istart()(Data_Monoid.monoidUnit)(WAGS_Interpret.mixedAudioInterpret)(function (v) {
      return Control_Apply_Indexed.iapplySecond(WAGS_Control_Indexed.ixApplyIxWAG)(WAGS_Patch.ipatch(WAGS_Patch.patchAll()()()(WAGS_Patch.getSubgraphsAll()(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLNil))))(WAGS_Patch.getTumultsAll()(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLNil))))()(WAGS_Patch.toGraphEffectsMakeSpeaker(WAGS_Patch.toGraphEffectsMakePlayBuf({
          reflectSymbol: function () {
              return "buf";
          }
      })(WAGS_Patch.toGraphEffectsConnectXToY({
          reflectSymbol: function () {
              return "buf";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })(WAGS_Patch.toGraphEffectsUnit)))))(WAGS_Interpret.mixedAudioInterpret)(WAGS_Patch.getSubgraphsAll()(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLOther(WAGS_Patch.getSubgraphsRLNil))))(WAGS_Patch.getTumultsAll()(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLOther(WAGS_Patch.getTumultsRLNil))))({
          microphone: Control_Plus.empty(Data_Maybe.plusMaybe),
          mediaElement: Control_Plus.empty(Data_Maybe.plusMaybe),
          subgraphs: {},
          tumults: {}
      }))(myChange(WAGS_Interpret.mixedAudioInterpret)(v)(cf(order)(WAGS_Interpret.bufferDuration(v.world.hamlet))));
  })(WAGS_Control_Functions_Graph.iloop(Data_Monoid.monoidUnit)()(WAGS_Interpret.mixedAudioInterpret)(myChange(WAGS_Interpret.mixedAudioInterpret)));
  var handleAction = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof StartAudio) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.context))(function (audioCtx) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.makeFFIAudioSnapshot(audioCtx)))(function (ffiAudio) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(WAGS_Interpret.decodeAudioDataFromUri(audioCtx)("https://freesound.org/data/previews/50/50843_489520-hq.mp3")))(function (hamlet) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(FRP_Event.subscribe(WAGS_Run.run()(WAGS_Run.analyserRefsNil)(WAGS_Run.workWithAnalysersNil)(WAGS_Run.getAnalysersNil)(Data_Monoid.monoidUnit)(Control_Applicative.pure(FRP_Event.applicativeEvent)(Data_Unit.unit))(Control_Applicative.pure(FRP_Behavior.applicativeABehavior(FRP_Event.functorEvent))({
                                  hamlet: hamlet
                              }))({
                                  easingAlgorithm: easingAlgorithm
                              })(ffiAudio)(piece))(function (v1) {
                                  return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                              })))(function (unsubscribe) {
                                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $40 = {};
                                      for (var $41 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $41)) {
                                              $40[$41] = v1[$41];
                                          };
                                      };
                                      $40.unsubscribe = unsubscribe;
                                      $40.audioCtx = new Data_Maybe.Just(audioCtx);
                                      return $40;
                                  });
                              });
                          });
                      });
                  });
              };
              if (v instanceof Freqz) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $43 = {};
                      for (var $44 in v1) {
                          if ({}.hasOwnProperty.call(v1, $44)) {
                              $43[$44] = v1[$44];
                          };
                      };
                      $43.freqz = v.value0;
                      return $43;
                  });
              };
              if (v instanceof StopAudio) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(v1.unsubscribe))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v1.audioCtx)((function () {
                              var $53 = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()));
                              return function ($54) {
                                  return $53(WAGS_Interpret.close($54));
                              };
                          })()))(function () {
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                  var $48 = {};
                                  for (var $49 in v2) {
                                      if ({}.hasOwnProperty.call(v2, $49)) {
                                          $48[$49] = v2[$49];
                                      };
                                  };
                                  $48.unsubscribe = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                                  $48.audioCtx = Data_Maybe.Nothing.value;
                                  return $48;
                              });
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at WAGS.Example.SkipMachine (line 147, column 16 - line 167, column 64): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render,
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictMonadAff.MonadEffect0())(dictMonadAff),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: Halogen_Component.defaultEval.receive,
                  initialize: Halogen_Component.defaultEval.initialize,
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.Subgraph"] = $PS["WAGS.Example.Subgraph"] || {};
  var exports = $PS["WAGS.Example.Subgraph"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Comonad_Cofree = $PS["Control.Comonad.Cofree"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var ConvertableOptions = $PS["ConvertableOptions"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Hashable = $PS["Data.Hashable"];
  var Data_Int = $PS["Data.Int"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Variant_Maybe = $PS["Data.Variant.Maybe"];
  var Effect = $PS["Effect"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var FRP_Behavior = $PS["FRP.Behavior"];
  var FRP_Event = $PS["FRP.Event"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions_Graph = $PS["WAGS.Control.Functions.Graph"];
  var WAGS_Control_Functions_Subgraph = $PS["WAGS.Control.Functions.Subgraph"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Run = $PS["WAGS.Run"];
  var WAGS_Util = $PS["WAGS.Util"];
  var StartAudio = (function () {
      function StartAudio() {

      };
      StartAudio.value = new StartAudio();
      return StartAudio;
  })();
  var StopAudio = (function () {
      function StopAudio() {

      };
      StopAudio.value = new StopAudio();
      return StopAudio;
  })();                                                                                                                            
  var subPiece1 = function (dictAudioInterpret) {
      return function (i) {
          return WAGS_Control_Functions_Subgraph.loopUsingScene(Data_Monoid.monoidUnit)(dictAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
              reflectSymbol: function () {
                  return "gnn";
              }
          })()()(WAGS_ConstructEdges.constructEdgesNormVal()()(WAGS_Util.autoIncrementingInsertUnit)(WAGS_Util.natToSymD0)()()({
              reflectSymbol: function () {
                  return "Input_D0";
              }
          })()())()()(WAGS_Create.createGain({
              reflectSymbol: function () {
                  return "gnn";
              }
          })()())()(WAGS_Create.createStepRLCons({
              reflectSymbol: function () {
                  return "Input_D0";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createInput({
              reflectSymbol: function () {
                  return "gnn_Input_D0";
              }
          })({
              reflectSymbol: function () {
                  return "beep";
              }
          })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
              reflectSymbol: function () {
                  return "gnn_Input_D0";
              }
          })({
              reflectSymbol: function () {
                  return "gnn";
              }
          })()()({
              reflectSymbol: function () {
                  return "TInput";
              }
          })({
              reflectSymbol: function () {
                  return "TGain";
              }
          })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "gnn";
              }
          })()()(WAGS_ConstructEdges.constructEdgesNormVal()()(WAGS_Util.autoIncrementingInsertUnit)(WAGS_Util.natToSymD0)()()({
              reflectSymbol: function () {
                  return "Input_D0";
              }
          })()())()()(WAGS_Change.changeGain({
              reflectSymbol: function () {
                  return "gnn";
              }
          })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "Input_D0";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeInput({
              reflectSymbol: function () {
                  return "gnn_Input_D0";
              }
          })(WAGS_Graph_Parameter.justMM)())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLNil))))()(function (v) {
              return function (v1) {
                  return {
                      control: Data_Unit.unit,
                      scene: {
                          gnn: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)((function () {
                              var $25 = v >= Data_Int.toNumber(i * 2 | 0) + 1.0 && v < Data_Int.toNumber(i * 2 | 0) + 1.2;
                              if ($25) {
                                  return 0.1;
                              };
                              return 0.0;
                          })())(WAGS_Create_Optionals.input({
                              reflectSymbol: function () {
                                  return "beep";
                              }
                          })(Type_Proxy["Proxy"].value))
                      }
                  };
              };
          })(Data_Monoid.mempty(Data_Monoid.monoidFn(Data_Monoid.monoidUnit)));
      };
  };
  var subPiece0 = function (dictAudioInterpret) {
      return function (i) {
          return function (atar) {
              return WAGS_Control_Functions_Subgraph.loopUsingScene(Data_Monoid.monoidUnit)(dictAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                  reflectSymbol: function () {
                      return "buffy";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createPlayBuf({
                  reflectSymbol: function () {
                      return "buffy";
                  }
              })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))))(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                  reflectSymbol: function () {
                      return "buffy";
                  }
              })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changePlayBuf({
                  reflectSymbol: function () {
                      return "buffy";
                  }
              })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil))))()(function (v) {
                  return function (v1) {
                      return {
                          control: Data_Unit.unit,
                          scene: {
                              buffy: WAGS_Create_Optionals.playBuf(WAGS_Create_Optionals.playBufCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertPlayBufOnOff)()()()({
                                  reflectSymbol: function () {
                                      return "onOff";
                                  }
                              })))(ConvertableOptions.defaultsRecord()())))({
                                  onOff: (function () {
                                      var $27 = v < Data_Int.toNumber(i * 2 | 0) + 1.0;
                                      if ($27) {
                                          return WAGS_Graph_Parameter["_off"];
                                      };
                                      return WAGS_Graph_Parameter["_on"];
                                  })()
                              })(atar)
                          }
                      };
                  };
              })(Data_Monoid.mempty(Data_Monoid.monoidFn(Data_Monoid.monoidUnit)));
          };
      };
  };
  var render = function (v) {
      return Halogen_HTML_Elements.div_(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Elements.h1_([ Halogen_HTML_Core.text("Subgraph test") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v1) {
          return StartAudio.value;
      }) ])([ Halogen_HTML_Core.text("Start audio") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v1) {
          return StopAudio.value;
      }) ])([ Halogen_HTML_Core.text("Stop audio") ]) ])(Data_Functor.map(Data_Functor.functorArray)(function (freq) {
          return Halogen_HTML_Elements.p([  ])([ Halogen_HTML_Core.text(freq) ]);
      })(v.freqz)));
  };
  var piece = WAGS_Control_Functions_Graph.loopUsingScene(Data_Monoid.monoidUnit)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
      reflectSymbol: function () {
          return "speaker";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSpeaker()())()(WAGS_Create.createStepRLCons({
      reflectSymbol: function () {
          return "gn";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
      reflectSymbol: function () {
          return "gn";
      }
  })()())()(WAGS_Create.createStepRLConsB({
      reflectSymbol: function () {
          return "sg";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLConsB({
      reflectSymbol: function () {
          return "sg2";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()()(WAGS_Create.createStepRLCons({
      reflectSymbol: function () {
          return "beep";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
      reflectSymbol: function () {
          return "beep";
      }
  })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil)(WAGS_Create.createSubgraph({
      reflectSymbol: function () {
          return "sg2";
      }
  })({
      reflectSymbol: function () {
          return "gnn";
      }
  })()()))(WAGS_Create.createSubgraph({
      reflectSymbol: function () {
          return "sg";
      }
  })({
      reflectSymbol: function () {
          return "buffy";
      }
  })()()))(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
      reflectSymbol: function () {
          return "gn";
      }
  })({
      reflectSymbol: function () {
          return "speaker";
      }
  })()()({
      reflectSymbol: function () {
          return "TGain";
      }
  })({
      reflectSymbol: function () {
          return "TSpeaker";
      }
  })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
      reflectSymbol: function () {
          return "sg";
      }
  })({
      reflectSymbol: function () {
          return "gn";
      }
  })()()({
      reflectSymbol: function () {
          return "TSubgraph";
      }
  })({
      reflectSymbol: function () {
          return "TGain";
      }
  })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
      reflectSymbol: function () {
          return "sg2";
      }
  })({
      reflectSymbol: function () {
          return "gn";
      }
  })()()({
      reflectSymbol: function () {
          return "TSubgraph";
      }
  })({
      reflectSymbol: function () {
          return "TGain";
      }
  })()()()()())(WAGS_Create.connectEdgesToNodeNil)))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
      reflectSymbol: function () {
          return "beep";
      }
  })({
      reflectSymbol: function () {
          return "sg2";
      }
  })()()({
      reflectSymbol: function () {
          return "TSinOsc";
      }
  })({
      reflectSymbol: function () {
          return "TSubgraph";
      }
  })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil)))(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
      reflectSymbol: function () {
          return "speaker";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeSpeaker())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
      reflectSymbol: function () {
          return "gn";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeGain({
      reflectSymbol: function () {
          return "gn";
      }
  })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
      reflectSymbol: function () {
          return "sg";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeSubgraph0({
      reflectSymbol: function () {
          return "sg";
      }
  })({
      reflectSymbol: function () {
          return "buffy";
      }
  })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
      reflectSymbol: function () {
          return "sg2";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeSubgraph0({
      reflectSymbol: function () {
          return "sg2";
      }
  })({
      reflectSymbol: function () {
          return "gnn";
      }
  })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
      reflectSymbol: function () {
          return "beep";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeSinOsc({
      reflectSymbol: function () {
          return "beep";
      }
  })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLNil))))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLNil))))()(function (v) {
      return function (v1) {
          return {
              control: Data_Unit.unit,
              scene: WAGS_Create_Optionals.speaker((function () {
                  var envs = Data_Map_Internal.fromFoldable(Data_Ord.ordInt)(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(function (i) {
                      return new Data_Tuple.Tuple(i, Data_Variant_Maybe.just(v.time));
                  })(Data_Array.range(0)(40)));
                  return {
                      gn: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0)({
                          sg: WAGS_Create_Optionals.subgraph(Data_Hashable.hashableInt)({
                              reflectSymbol: function () {
                                  return "buffy";
                              }
                          })(envs)(function (dictAudioInterpret) {
                              return Data_Function.flip(subPiece0(dictAudioInterpret))(v.world.atar);
                          })({}),
                          sg2: WAGS_Create_Optionals.subgraph(Data_Hashable.hashableInt)({
                              reflectSymbol: function () {
                                  return "gnn";
                              }
                          })(envs)(function (dictAudioInterpret) {
                              return subPiece1(dictAudioInterpret);
                          })({
                              beep: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(440.0)
                          })
                      })
                  };
              })())
          };
      };
  })(Data_Monoid.mempty(Data_Monoid.monoidFn(Data_Monoid.monoidUnit)));
  var initialState = function (v) {
      return {
          unsubscribe: Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit),
          audioCtx: Data_Maybe.Nothing.value,
          freqz: [  ]
      };
  };
  var easingAlgorithm = (function () {
      var fOf = function (initialTime) {
          return Control_Comonad_Cofree.mkCofree(initialTime)(function (adj) {
              return fOf(Data_Ord.max(Data_Ord.ordInt)(20)(initialTime - adj | 0));
          });
      };
      return fOf(20);
  })();
  var handleAction = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof StartAudio) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.context))(function (audioCtx) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.makeFFIAudioSnapshot(audioCtx)))(function (ffiAudio) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(WAGS_Interpret.decodeAudioDataFromUri(audioCtx)("https://freesound.org/data/previews/100/100981_1234256-lq.mp3")))(function (atar) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(FRP_Event.subscribe(WAGS_Run.run()(WAGS_Run.analyserRefsNil)(WAGS_Run.workWithAnalysersNil)(WAGS_Run.getAnalysersNil)(Data_Monoid.monoidUnit)(Control_Applicative.pure(FRP_Event.applicativeEvent)(Data_Unit.unit))(Control_Applicative.pure(FRP_Behavior.applicativeABehavior(FRP_Event.functorEvent))({
                                  atar: atar
                              }))({
                                  easingAlgorithm: easingAlgorithm
                              })(ffiAudio)(piece))(function (v1) {
                                  return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                              })))(function (unsubscribe) {
                                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $32 = {};
                                      for (var $33 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $33)) {
                                              $32[$33] = v1[$33];
                                          };
                                      };
                                      $32.unsubscribe = unsubscribe;
                                      $32.audioCtx = new Data_Maybe.Just(audioCtx);
                                      return $32;
                                  });
                              });
                          });
                      });
                  });
              };
              if (v instanceof StopAudio) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(v1.unsubscribe))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v1.audioCtx)((function () {
                              var $41 = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()));
                              return function ($42) {
                                  return $41(WAGS_Interpret.close($42));
                              };
                          })()))(function () {
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                  var $36 = {};
                                  for (var $37 in v2) {
                                      if ({}.hasOwnProperty.call(v2, $37)) {
                                          $36[$37] = v2[$37];
                                      };
                                  };
                                  $36.unsubscribe = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                                  $36.audioCtx = Data_Maybe.Nothing.value;
                                  return $36;
                              });
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at WAGS.Example.Subgraph (line 138, column 16 - line 156, column 64): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render,
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictMonadAff.MonadEffect0())(dictMonadAff),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: Halogen_Component.defaultEval.receive,
                  initialize: Halogen_Component.defaultEval.initialize,
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.Tumult"] = $PS["WAGS.Example.Tumult"] || {};
  var exports = $PS["WAGS.Example.Tumult"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Comonad_Cofree = $PS["Control.Comonad.Cofree"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var ConvertableOptions = $PS["ConvertableOptions"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Hashable = $PS["Data.Hashable"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Typelevel_Num_Ops = $PS["Data.Typelevel.Num.Ops"];
  var Data_Typelevel_Num_Sets = $PS["Data.Typelevel.Num.Sets"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Variant_Maybe = $PS["Data.Variant.Maybe"];
  var Data_Vec = $PS["Data.Vec"];
  var Effect = $PS["Effect"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var FRP_Behavior = $PS["FRP.Behavior"];
  var FRP_Event = $PS["FRP.Event"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var $$Math = $PS["Math"];
  var Type_Proxy = $PS["Type.Proxy"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions_Graph = $PS["WAGS.Control.Functions.Graph"];
  var WAGS_Control_Functions_Subgraph = $PS["WAGS.Control.Functions.Subgraph"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Run = $PS["WAGS.Run"];
  var WAGS_Tumult_Make = $PS["WAGS.Tumult.Make"];
  var WAGS_Util = $PS["WAGS.Util"];
  var StartAudio = (function () {
      function StartAudio() {

      };
      StartAudio.value = new StartAudio();
      return StartAudio;
  })();
  var StopAudio = (function () {
      function StopAudio() {

      };
      StopAudio.value = new StopAudio();
      return StopAudio;
  })();                                                                                          
  var render = function (v) {
      return Halogen_HTML_Elements.div_(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Elements.h1_([ Halogen_HTML_Core.text("Tumult test") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v1) {
          return StartAudio.value;
      }) ])([ Halogen_HTML_Core.text("Start audio") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v1) {
          return StopAudio.value;
      }) ])([ Halogen_HTML_Core.text("Stop audio") ]) ])(Data_Functor.map(Data_Functor.functorArray)(function (freq) {
          return Halogen_HTML_Elements.p([  ])([ Halogen_HTML_Core.text(freq) ]);
      })(v.freqz)));
  };
  var initialState = function (v) {
      return {
          unsubscribe: Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit),
          audioCtx: Data_Maybe.Nothing.value,
          freqz: [  ]
      };
  };
  var globalFF = WAGS_Graph_Parameter.ff(WAGS_Graph_Parameter.lensTimeAudioParameter)(6.0e-2);
  var subPiece1 = function (dictAudioInterpret) {
      return function (v) {
          return WAGS_Control_Functions_Subgraph.loopUsingScene(Data_Monoid.monoidUnit)(dictAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLConsC({
              reflectSymbol: function () {
                  return "gnn";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()()(WAGS_Create.createStepRLCons({
              reflectSymbol: function () {
                  return "shruti";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createInput({
              reflectSymbol: function () {
                  return "shruti";
              }
          })({
              reflectSymbol: function () {
                  return "beep";
              }
          })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil)(WAGS_Create.createTumult({
              reflectSymbol: function () {
                  return "gnn";
              }
          })({
              reflectSymbol: function () {
                  return "output";
              }
          })(Data_Typelevel_Num_Sets.posD1)()()))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
              reflectSymbol: function () {
                  return "shruti";
              }
          })({
              reflectSymbol: function () {
                  return "gnn";
              }
          })()()({
              reflectSymbol: function () {
                  return "TInput";
              }
          })({
              reflectSymbol: function () {
                  return "TTumult";
              }
          })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "gnn";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeTumult({
              reflectSymbol: function () {
                  return "gnn";
              }
          })({
              reflectSymbol: function () {
                  return "output";
              }
          })(Data_Typelevel_Num_Sets.posD1)())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "shruti";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeInput({
              reflectSymbol: function () {
                  return "shruti";
              }
          })(WAGS_Graph_Parameter.justMM)())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLNil))))()(function (v1) {
              return function (v2) {
                  return {
                      control: Data_Unit.unit,
                      scene: {
                          gnn: WAGS_Create_Optionals.tumult(Data_Typelevel_Num_Sets.posD1)((function () {
                              var tmod = $$Math.remainder(v1)(10.0);
                              var sweep = {
                                  freq: globalFF(WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(3000.0 + $$Math.sin($$Math.pi * v1 * 0.2) * 2990.0)),
                                  q: globalFF(WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(1.0))
                              };
                              var tumult = (function () {
                                  if (tmod < 2.0) {
                                      return WAGS_Tumult_Make.tumultuously(Data_Typelevel_Num_Sets.posD1)()(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                                          reflectSymbol: function () {
                                              return "output";
                                          }
                                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createInput({
                                          reflectSymbol: function () {
                                              return "output";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "shruti";
                                          }
                                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))))()()(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD1)()(Data_Typelevel_Num_Ops.divMod10D0D0)()(Data_Typelevel_Num_Ops.divMod10D1D0))({
                                          output: WAGS_Create_Optionals.input({
                                              reflectSymbol: function () {
                                                  return "shruti";
                                              }
                                          })(Type_Proxy["Proxy"].value)
                                      })(Data_Vec.empty));
                                  };
                                  if (tmod < 6.0) {
                                      return WAGS_Tumult_Make.tumultuously(Data_Typelevel_Num_Sets.posD1)()(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                                          reflectSymbol: function () {
                                              return "output";
                                          }
                                      })()()(WAGS_ConstructEdges.constructEdgesNormVal()()(WAGS_Util.autoIncrementingInsertUnit)(WAGS_Util.natToSymD0)()()({
                                          reflectSymbol: function () {
                                              return "Input_D0";
                                          }
                                      })()())()()(WAGS_Create.createHighpass({
                                          reflectSymbol: function () {
                                              return "output";
                                          }
                                      })()())()(WAGS_Create.createStepRLCons({
                                          reflectSymbol: function () {
                                              return "Input_D0";
                                          }
                                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createInput({
                                          reflectSymbol: function () {
                                              return "output_Input_D0";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "shruti";
                                          }
                                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                                          reflectSymbol: function () {
                                              return "output_Input_D0";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "output";
                                          }
                                      })()()({
                                          reflectSymbol: function () {
                                              return "TInput";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "THighpass";
                                          }
                                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))()()(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD1)()(Data_Typelevel_Num_Ops.divMod10D0D0)()(Data_Typelevel_Num_Ops.divMod10D1D0))({
                                          output: WAGS_Create_Optionals.highpass(WAGS_Create_Optionals.highpassCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertHighpassQ(WAGS_Graph_Paramable.paramableAudioParameter))()()()({
                                              reflectSymbol: function () {
                                                  return "q";
                                              }
                                          }))(WAGS_Create_Optionals.convertHighpassFrequency(WAGS_Graph_Paramable.paramableAudioParameter))()()()({
                                              reflectSymbol: function () {
                                                  return "freq";
                                              }
                                          })))(ConvertableOptions.defaultsRecord()())))(sweep)(WAGS_Create_Optionals.input({
                                              reflectSymbol: function () {
                                                  return "shruti";
                                              }
                                          })(Type_Proxy["Proxy"].value))
                                      })(Data_Vec.empty));
                                  };
                                  if (Data_Boolean.otherwise) {
                                      return WAGS_Tumult_Make.tumultuously(Data_Typelevel_Num_Sets.posD1)()(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
                                          reflectSymbol: function () {
                                              return "output";
                                          }
                                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                                          reflectSymbol: function () {
                                              return "output";
                                          }
                                      })()())()(WAGS_Create.createStepRLCons({
                                          reflectSymbol: function () {
                                              return "beep";
                                          }
                                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
                                          reflectSymbol: function () {
                                              return "beep";
                                          }
                                      })()())()(WAGS_Create.createStepRLCons({
                                          reflectSymbol: function () {
                                              return "sosc";
                                          }
                                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
                                          reflectSymbol: function () {
                                              return "sosc";
                                          }
                                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                                          reflectSymbol: function () {
                                              return "bpf";
                                          }
                                      })()()(WAGS_ConstructEdges.constructEdgesNormVal()()(WAGS_Util.autoIncrementingInsertUnit)(WAGS_Util.natToSymD0)()()({
                                          reflectSymbol: function () {
                                              return "Input_D0";
                                          }
                                      })()())()()(WAGS_Create.createBandpass({
                                          reflectSymbol: function () {
                                              return "bpf";
                                          }
                                      })()())()(WAGS_Create.createStepRLCons({
                                          reflectSymbol: function () {
                                              return "Input_D0";
                                          }
                                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createInput({
                                          reflectSymbol: function () {
                                              return "bpf_Input_D0";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "shruti";
                                          }
                                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
                                          reflectSymbol: function () {
                                              return "hpf";
                                          }
                                      })()()(WAGS_ConstructEdges.constructEdgesNormVal()()(WAGS_Util.autoIncrementingInsertUnit)(WAGS_Util.natToSymD0)()()({
                                          reflectSymbol: function () {
                                              return "Input_D0";
                                          }
                                      })()())()()(WAGS_Create.createBandpass({
                                          reflectSymbol: function () {
                                              return "hpf";
                                          }
                                      })()())()(WAGS_Create.createStepRLCons({
                                          reflectSymbol: function () {
                                              return "Input_D0";
                                          }
                                      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createInput({
                                          reflectSymbol: function () {
                                              return "hpf_Input_D0";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "shruti";
                                          }
                                      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                                          reflectSymbol: function () {
                                              return "beep";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "output";
                                          }
                                      })()()({
                                          reflectSymbol: function () {
                                              return "TGain";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "TGain";
                                          }
                                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                                          reflectSymbol: function () {
                                              return "bpf";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "output";
                                          }
                                      })()()({
                                          reflectSymbol: function () {
                                              return "TBandpass";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "TGain";
                                          }
                                      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                                          reflectSymbol: function () {
                                              return "hpf";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "output";
                                          }
                                      })()()({
                                          reflectSymbol: function () {
                                              return "TBandpass";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "TGain";
                                          }
                                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                                          reflectSymbol: function () {
                                              return "sosc";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "beep";
                                          }
                                      })()()({
                                          reflectSymbol: function () {
                                              return "TSinOsc";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "TGain";
                                          }
                                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                                          reflectSymbol: function () {
                                              return "bpf_Input_D0";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "bpf";
                                          }
                                      })()()({
                                          reflectSymbol: function () {
                                              return "TInput";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "TBandpass";
                                          }
                                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
                                          reflectSymbol: function () {
                                              return "hpf_Input_D0";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "hpf";
                                          }
                                      })()()({
                                          reflectSymbol: function () {
                                              return "TInput";
                                          }
                                      })({
                                          reflectSymbol: function () {
                                              return "TBandpass";
                                          }
                                      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(WAGS_Create.connectAfterCreateNil))))()()(Data_Vec.cons(Data_Typelevel_Num_Ops.typelevelSucc(Data_Typelevel_Num_Sets.posD1)()(Data_Typelevel_Num_Ops.divMod10D0D0)()(Data_Typelevel_Num_Ops.divMod10D1D0))({
                                          output: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0)({
                                              hpf: WAGS_Create_Optionals.bandpass(WAGS_Create_Optionals.bandpassCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertBandpassQ(WAGS_Graph_Paramable.paramableAudioParameter))()()()({
                                                  reflectSymbol: function () {
                                                      return "q";
                                                  }
                                              }))(WAGS_Create_Optionals.convertBandpassFrequency(WAGS_Graph_Paramable.paramableAudioParameter))()()()({
                                                  reflectSymbol: function () {
                                                      return "freq";
                                                  }
                                              })))(ConvertableOptions.defaultsRecord()())))(sweep)(WAGS_Create_Optionals.input({
                                                  reflectSymbol: function () {
                                                      return "shruti";
                                                  }
                                              })(Type_Proxy["Proxy"].value)),
                                              bpf: WAGS_Create_Optionals.bandpass(WAGS_Create_Optionals.bandpassCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertBandpassFrequency(WAGS_Graph_Paramable.paramableNumber))()()()({
                                                  reflectSymbol: function () {
                                                      return "freq";
                                                  }
                                              })))(ConvertableOptions.defaultsRecord()())))({
                                                  freq: 200.0
                                              })(WAGS_Create_Optionals.input({
                                                  reflectSymbol: function () {
                                                      return "shruti";
                                                  }
                                              })(Type_Proxy["Proxy"].value)),
                                              beep: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)($$Math.sin(v1 * $$Math.pi * 10.0) * 0.2 + 0.1)({
                                                  sosc: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor2(WAGS_Graph_Paramable.paramableNumber))(440.0)
                                              })
                                          })
                                      })(Data_Vec.empty));
                                  };
                                  throw new Error("Failed pattern match at WAGS.Example.Tumult (line 59, column 15 - line 69, column 22): " + [  ]);
                              })();
                              return tumult;
                          })())({
                              shruti: WAGS_Create_Optionals.input({
                                  reflectSymbol: function () {
                                      return "beep";
                                  }
                              })(Type_Proxy["Proxy"].value)
                          })
                      }
                  };
              };
          })(Data_Monoid.mempty(Data_Monoid.monoidFn(Data_Monoid.monoidUnit)));
      };
  };
  var piece = WAGS_Control_Functions_Graph.loopUsingScene(Data_Monoid.monoidUnit)(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
      reflectSymbol: function () {
          return "speaker";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSpeaker()())()(WAGS_Create.createStepRLCons({
      reflectSymbol: function () {
          return "gn";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
      reflectSymbol: function () {
          return "gn";
      }
  })()())()(WAGS_Create.createStepRLConsB({
      reflectSymbol: function () {
          return "sg2";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()()(WAGS_Create.createStepRLCons({
      reflectSymbol: function () {
          return "beep";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createLoopBuf({
      reflectSymbol: function () {
          return "beep";
      }
  })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil)(WAGS_Create.createSubgraph({
      reflectSymbol: function () {
          return "sg2";
      }
  })({
      reflectSymbol: function () {
          return "gnn";
      }
  })()()))(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
      reflectSymbol: function () {
          return "gn";
      }
  })({
      reflectSymbol: function () {
          return "speaker";
      }
  })()()({
      reflectSymbol: function () {
          return "TGain";
      }
  })({
      reflectSymbol: function () {
          return "TSpeaker";
      }
  })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
      reflectSymbol: function () {
          return "sg2";
      }
  })({
      reflectSymbol: function () {
          return "gn";
      }
  })()()({
      reflectSymbol: function () {
          return "TSubgraph";
      }
  })({
      reflectSymbol: function () {
          return "TGain";
      }
  })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
      reflectSymbol: function () {
          return "beep";
      }
  })({
      reflectSymbol: function () {
          return "sg2";
      }
  })()()({
      reflectSymbol: function () {
          return "TLoopBuf";
      }
  })({
      reflectSymbol: function () {
          return "TSubgraph";
      }
  })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
      reflectSymbol: function () {
          return "speaker";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeSpeaker())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
      reflectSymbol: function () {
          return "gn";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeGain({
      reflectSymbol: function () {
          return "gn";
      }
  })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
      reflectSymbol: function () {
          return "sg2";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeSubgraph0({
      reflectSymbol: function () {
          return "sg2";
      }
  })({
      reflectSymbol: function () {
          return "gnn";
      }
  })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
      reflectSymbol: function () {
          return "beep";
      }
  })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeLoopBuf({
      reflectSymbol: function () {
          return "beep";
      }
  })())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLNil))))()(function (v) {
      return function (v1) {
          return {
              control: Data_Unit.unit,
              scene: WAGS_Create_Optionals.speaker({
                  gn: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0)({
                      sg2: WAGS_Create_Optionals.subgraph(Data_Hashable.hashableInt)({
                          reflectSymbol: function () {
                              return "gnn";
                          }
                      })(Data_Map_Internal.singleton(0)(Data_Variant_Maybe.just(v.time)))(function (dictAudioInterpret) {
                          return subPiece1(dictAudioInterpret);
                      })({
                          beep: WAGS_Create_Optionals.loopBuf(WAGS_Create_Optionals.loopBufCtor2)(v.world.shruti)
                      })
                  })
              })
          };
      };
  })(Data_Monoid.mempty(Data_Monoid.monoidFn(Data_Monoid.monoidUnit)));
  var easingAlgorithm = (function () {
      var fOf = function (initialTime) {
          return Control_Comonad_Cofree.mkCofree(initialTime)(function (adj) {
              return fOf(Data_Ord.max(Data_Ord.ordInt)(20)(initialTime - adj | 0));
          });
      };
      return fOf(20);
  })();
  var handleAction = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof StartAudio) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.context))(function (audioCtx) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.makeFFIAudioSnapshot(audioCtx)))(function (ffiAudio) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(WAGS_Interpret.decodeAudioDataFromUri(audioCtx)("https://freesound.org/data/previews/513/513742_153257-hq.mp3")))(function (shruti) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(FRP_Event.subscribe(WAGS_Run.run()(WAGS_Run.analyserRefsNil)(WAGS_Run.workWithAnalysersNil)(WAGS_Run.getAnalysersNil)(Data_Monoid.monoidUnit)(Control_Applicative.pure(FRP_Event.applicativeEvent)(Data_Unit.unit))(Control_Applicative.pure(FRP_Behavior.applicativeABehavior(FRP_Event.functorEvent))({
                                  shruti: shruti
                              }))({
                                  easingAlgorithm: easingAlgorithm
                              })(ffiAudio)(piece))(function (v1) {
                                  return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                              })))(function (unsubscribe) {
                                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $26 = {};
                                      for (var $27 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $27)) {
                                              $26[$27] = v1[$27];
                                          };
                                      };
                                      $26.unsubscribe = unsubscribe;
                                      $26.audioCtx = new Data_Maybe.Just(audioCtx);
                                      return $26;
                                  });
                              });
                          });
                      });
                  });
              };
              if (v instanceof StopAudio) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(v1.unsubscribe))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v1.audioCtx)((function () {
                              var $35 = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()));
                              return function ($36) {
                                  return $35(WAGS_Interpret.close($36));
                              };
                          })()))(function () {
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                  var $30 = {};
                                  for (var $31 in v2) {
                                      if ({}.hasOwnProperty.call(v2, $31)) {
                                          $30[$31] = v2[$31];
                                      };
                                  };
                                  $30.unsubscribe = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                                  $30.audioCtx = Data_Maybe.Nothing.value;
                                  return $30;
                              });
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at WAGS.Example.Tumult (line 145, column 16 - line 163, column 64): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render,
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictMonadAff.MonadEffect0())(dictMonadAff),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: Halogen_Component.defaultEval.receive,
                  initialize: Halogen_Component.defaultEval.initialize,
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.WTK.RenderingEnv"] = $PS["WAGS.Example.WTK.RenderingEnv"] || {};
  var exports = $PS["WAGS.Example.WTK.RenderingEnv"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Set = $PS["Data.Set"];
  var Data_Tuple = $PS["Data.Tuple"];
  var FRP_Event_MIDI = $PS["FRP.Event.MIDI"];
  var $$Math = $PS["Math"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Math = $PS["WAGS.Math"];                
  var midiEventsToOnsets = (function () {
      var go = function ($copy_accOn) {
          return function ($copy_accOff) {
              return function ($copy_v) {
                  var $tco_var_accOn = $copy_accOn;
                  var $tco_var_accOff = $copy_accOff;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(accOn, accOff, v) {
                      if (v instanceof Data_List_Types.Nil) {
                          $tco_done = true;
                          return new Data_Tuple.Tuple(accOn, accOff);
                      };
                      if (v instanceof Data_List_Types.Cons && v.value0 instanceof FRP_Event_MIDI.NoteOn) {
                          $tco_var_accOn = new Data_List_Types.Cons(v.value0.value1, accOn);
                          $tco_var_accOff = accOff;
                          $copy_v = v.value1;
                          return;
                      };
                      if (v instanceof Data_List_Types.Cons && v.value0 instanceof FRP_Event_MIDI.NoteOff) {
                          $tco_var_accOn = accOn;
                          $tco_var_accOff = new Data_List_Types.Cons(v.value0.value1, accOff);
                          $copy_v = v.value1;
                          return;
                      };
                      if (v instanceof Data_List_Types.Cons) {
                          $tco_var_accOn = accOn;
                          $tco_var_accOff = accOff;
                          $copy_v = v.value1;
                          return;
                      };
                      throw new Error("Failed pattern match at WAGS.Example.WTK.RenderingEnv (line 56, column 3 - line 56, column 40): " + [ accOn.constructor.name, accOff.constructor.name, v.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_accOn, $tco_var_accOff, $copy_v);
                  };
                  return $tco_result;
              };
          };
      };
      return go(Data_List_Types.Nil.value)(Data_List_Types.Nil.value);
  })();
  var keyToCps = function (i) {
      return 440.0 * $$Math.pow(2.0)((Data_Int.toNumber(i) - 69.0) / 12.0);
  };
  var keyStart = function (cps) {
      return {
          gain: 0.0,
          onOff: WAGS_Graph_Parameter["_on"],
          freq: cps
      };
  };
  var keyEnd = function (cps) {
      return {
          gain: 0.0,
          onOff: WAGS_Graph_Parameter["_off"],
          freq: cps
      };
  };
  var keyDur = 1.6;
  var dampen = function (currentTime) {
      return function (offTime) {
          if (currentTime < offTime) {
              return 1.0;
          };
          if (currentTime >= offTime + 0.2) {
              return 0.0;
          };
          if (Data_Boolean.otherwise) {
              return WAGS_Math.calcSlope(offTime)(1.0)(offTime + 0.2)(0.0)(currentTime);
          };
          throw new Error("Failed pattern match at WAGS.Example.WTK.RenderingEnv (line 22, column 1 - line 22, column 37): " + [ currentTime.constructor.name, offTime.constructor.name ]);
      };
  };
  var asdr = function (n) {
      if (n <= 0.0) {
          return 0.0;
      };
      if (n < 0.25) {
          return WAGS_Math.calcSlope(0.0)(0.0)(0.25)(1.0e-2)(n);
      };
      if (n < 0.5) {
          return WAGS_Math.calcSlope(0.25)(1.0e-2)(0.5)(5.0e-3)(n);
      };
      if (n < keyDur) {
          return WAGS_Math.calcSlope(0.5)(5.0e-3)(keyDur)(0.0)(n);
      };
      if (Data_Boolean.otherwise) {
          return 0.0;
      };
      throw new Error("Failed pattern match at WAGS.Example.WTK.RenderingEnv (line 28, column 1 - line 28, column 25): " + [ n.constructor.name ]);
  };
  var keySustain = function (initialTime) {
      return function (cps) {
          return function (currentTime) {
              return {
                  gain: asdr(currentTime - initialTime),
                  onOff: WAGS_Graph_Parameter["_on"],
                  freq: cps
              };
          };
      };
  };
  var keySustainOff = function (initialTime) {
      return function (cps) {
          return function (offTime) {
              return function (currentTime) {
                  return {
                      gain: asdr(currentTime - initialTime) * dampen(currentTime)(offTime),
                      onOff: WAGS_Graph_Parameter["_on"],
                      freq: cps
                  };
              };
          };
      };
  };
  var makeRenderingEnv = function (trigger) {
      return function (time) {
          return function (availableKeys) {
              return function (currentKeys) {
                  var v = midiEventsToOnsets(Data_Maybe.maybe(Data_List_Types.Nil.value)(Data_Functor.map(Data_List_Types.functorList)(function (v1) {
                      return v1.value.event;
                  }))(trigger));
                  var onsets = Data_List.zipWith(function (i) {
                      return function (k) {
                          var cps = keyToCps(i);
                          return {
                              sustainU: keySustain(time)(cps),
                              startU: keyStart(cps),
                              endU: keyEnd(cps),
                              startT: time,
                              cps: cps,
                              keyDuration: keyDur,
                              i: i,
                              k: k
                          };
                      };
                  })(v.value0)(availableKeys);
                  var notesOff = Data_Set.fromFoldable(Data_List_Types.foldableList)(Data_Ord.ordInt)(v.value1);
                  var newCurrentKeys = Data_Functor.map(Data_List_Types.functorList)(function (rec) {
                      var $26 = Data_Set.member(Data_Ord.ordInt)(rec.i)(notesOff);
                      if ($26) {
                          return {
                              keyDuration: (time - rec.startT) + 0.2,
                              sustainU: keySustainOff(rec.startT)(rec.cps)(time),
                              cps: rec.cps,
                              i: rec.i,
                              startT: rec.startT,
                              endU: rec.endU,
                              k: rec.k,
                              startU: rec.startU
                          };
                      };
                      return rec;
                  })(currentKeys);
                  var newAvailableKeys = Data_List.drop(Data_List.length(onsets))(availableKeys);
                  return {
                      notesOff: notesOff,
                      onsets: onsets,
                      newCurrentKeys: newCurrentKeys,
                      newAvailableKeys: newAvailableKeys,
                      futureCurrentKeys: Data_Semigroup.append(Data_List_Types.semigroupList)(Data_List.filter(function (v1) {
                          return time - v1.startT <= v1.keyDuration;
                      })(newCurrentKeys))(onsets),
                      futureAvailableKeys: Data_Semigroup.append(Data_List_Types.semigroupList)(newAvailableKeys)(Data_Functor.map(Data_List_Types.functorList)(function (v1) {
                          return v1.k;
                      })(Data_List.filter(function (v1) {
                          return time - v1.startT > v1.keyDuration;
                      })(newCurrentKeys)))
                  };
              };
          };
      };
  };
  exports["makeRenderingEnv"] = makeRenderingEnv;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.WTK.Types"] = $PS["WAGS.Example.WTK.Types"] || {};
  var exports = $PS["WAGS.Example.WTK.Types"];
  var ConvertableOptions = $PS["ConvertableOptions"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];                
  var K0 = (function () {
      function K0() {

      };
      K0.value = new K0();
      return K0;
  })();
  var K1 = (function () {
      function K1() {

      };
      K1.value = new K1();
      return K1;
  })();
  var K2 = (function () {
      function K2() {

      };
      K2.value = new K2();
      return K2;
  })();
  var K3 = (function () {
      function K3() {

      };
      K3.value = new K3();
      return K3;
  })();
  var K4 = (function () {
      function K4() {

      };
      K4.value = new K4();
      return K4;
  })();
  var K5 = (function () {
      function K5() {

      };
      K5.value = new K5();
      return K5;
  })();
  var K6 = (function () {
      function K6() {

      };
      K6.value = new K6();
      return K6;
  })();
  var K7 = (function () {
      function K7() {

      };
      K7.value = new K7();
      return K7;
  })();
  var K8 = (function () {
      function K8() {

      };
      K8.value = new K8();
      return K8;
  })();
  var K9 = (function () {
      function K9() {

      };
      K9.value = new K9();
      return K9;
  })();
  var fullKeyboard = WAGS_Create_Optionals.speaker({
      mix: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(1.0)({
          k0: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(0.0)({
              osc0: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertSinOscOnOff)()()()({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              }))(WAGS_Create_Optionals.convertSinOscFrequency(WAGS_Graph_Paramable.paramableNumber))()()()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })))(ConvertableOptions.defaultsRecord()())))({
                  onOff: WAGS_Graph_Parameter["_off"],
                  freq: 440.0
              })
          }),
          k1: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(0.0)({
              osc1: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertSinOscOnOff)()()()({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              }))(WAGS_Create_Optionals.convertSinOscFrequency(WAGS_Graph_Paramable.paramableNumber))()()()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })))(ConvertableOptions.defaultsRecord()())))({
                  onOff: WAGS_Graph_Parameter["_off"],
                  freq: 440.0
              })
          }),
          k2: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(0.0)({
              osc2: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertSinOscOnOff)()()()({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              }))(WAGS_Create_Optionals.convertSinOscFrequency(WAGS_Graph_Paramable.paramableNumber))()()()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })))(ConvertableOptions.defaultsRecord()())))({
                  onOff: WAGS_Graph_Parameter["_off"],
                  freq: 440.0
              })
          }),
          k3: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(0.0)({
              osc3: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertSinOscOnOff)()()()({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              }))(WAGS_Create_Optionals.convertSinOscFrequency(WAGS_Graph_Paramable.paramableNumber))()()()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })))(ConvertableOptions.defaultsRecord()())))({
                  onOff: WAGS_Graph_Parameter["_off"],
                  freq: 440.0
              })
          }),
          k4: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(0.0)({
              osc4: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertSinOscOnOff)()()()({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              }))(WAGS_Create_Optionals.convertSinOscFrequency(WAGS_Graph_Paramable.paramableNumber))()()()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })))(ConvertableOptions.defaultsRecord()())))({
                  onOff: WAGS_Graph_Parameter["_off"],
                  freq: 440.0
              })
          }),
          k5: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(0.0)({
              osc5: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertSinOscOnOff)()()()({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              }))(WAGS_Create_Optionals.convertSinOscFrequency(WAGS_Graph_Paramable.paramableNumber))()()()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })))(ConvertableOptions.defaultsRecord()())))({
                  onOff: WAGS_Graph_Parameter["_off"],
                  freq: 440.0
              })
          }),
          k6: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(0.0)({
              osc6: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertSinOscOnOff)()()()({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              }))(WAGS_Create_Optionals.convertSinOscFrequency(WAGS_Graph_Paramable.paramableNumber))()()()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })))(ConvertableOptions.defaultsRecord()())))({
                  onOff: WAGS_Graph_Parameter["_off"],
                  freq: 440.0
              })
          }),
          k7: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(0.0)({
              osc7: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertSinOscOnOff)()()()({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              }))(WAGS_Create_Optionals.convertSinOscFrequency(WAGS_Graph_Paramable.paramableNumber))()()()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })))(ConvertableOptions.defaultsRecord()())))({
                  onOff: WAGS_Graph_Parameter["_off"],
                  freq: 440.0
              })
          }),
          k8: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(0.0)({
              osc8: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertSinOscOnOff)()()()({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              }))(WAGS_Create_Optionals.convertSinOscFrequency(WAGS_Graph_Paramable.paramableNumber))()()()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })))(ConvertableOptions.defaultsRecord()())))({
                  onOff: WAGS_Graph_Parameter["_off"],
                  freq: 440.0
              })
          }),
          k9: WAGS_Create_Optionals.gain(WAGS_Graph_Paramable.paramableNumber)(0.0)({
              osc9: WAGS_Create_Optionals.sinOsc(WAGS_Create_Optionals.sinOscCtor1(ConvertableOptions.convertOptionsWithDefaultsRecord(ConvertableOptions.convertOptionsRecord()(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsCons(ConvertableOptions.convertRecordOptionsNil)(WAGS_Create_Optionals.convertSinOscOnOff)()()()({
                  reflectSymbol: function () {
                      return "onOff";
                  }
              }))(WAGS_Create_Optionals.convertSinOscFrequency(WAGS_Graph_Paramable.paramableNumber))()()()({
                  reflectSymbol: function () {
                      return "freq";
                  }
              })))(ConvertableOptions.defaultsRecord()())))({
                  onOff: WAGS_Graph_Parameter["_off"],
                  freq: 440.0
              })
          })
      })
  });
  exports["K0"] = K0;
  exports["K1"] = K1;
  exports["K2"] = K2;
  exports["K3"] = K3;
  exports["K4"] = K4;
  exports["K5"] = K5;
  exports["K6"] = K6;
  exports["K7"] = K7;
  exports["K8"] = K8;
  exports["K9"] = K9;
  exports["fullKeyboard"] = fullKeyboard;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.WTK.TLP"] = $PS["WAGS.Example.WTK.TLP"] || {};
  var exports = $PS["WAGS.Example.WTK.TLP"];
  var Control_Applicative_Indexed = $PS["Control.Applicative.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Control_Monad_Indexed_Qualified = $PS["Control.Monad.Indexed.Qualified"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Unit = $PS["Data.Unit"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions_Graph = $PS["WAGS.Control.Functions.Graph"];
  var WAGS_Control_Indexed = $PS["WAGS.Control.Indexed"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Example_WTK_Types = $PS["WAGS.Example.WTK.Types"];
  var WAGS_Graph_AudioUnit = $PS["WAGS.Graph.AudioUnit"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];                
  var playKeys = function (dictMonoid) {
      return function (dictAudioInterpret) {
          return function (v) {
              return function (v1) {
                  return function (v2) {
                      if (v1 instanceof Data_List_Types.Nil && v2 instanceof Data_List_Types.Nil) {
                          return Control_Applicative_Indexed.ipure(WAGS_Control_Indexed.ixApplicativeIxWAG)(Data_Unit.unit);
                      };
                      if (v1 instanceof Data_List_Types.Nil && v2 instanceof Data_List_Types.Cons) {
                          if (v2.value0.k instanceof WAGS_Example_WTK_Types.K0) {
                              var v3 = (function () {
                                  var $24 = v.currentTime - v2.value0.startT > v2.value0.keyDuration;
                                  if ($24) {
                                      return v2.value0.endU;
                                  };
                                  return v2.value0.sustainU(v.currentTime);
                              })();
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(dictAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "k0";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                                  reflectSymbol: function () {
                                      return "k0";
                                  }
                              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "osc0";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "freq";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc0";
                                  }
                              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                                  reflectSymbol: function () {
                                      return "osc0";
                                  }
                              })()()()))(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "onOff";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc0";
                                  }
                              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                                  reflectSymbol: function () {
                                      return "osc0";
                                  }
                              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                                  k0: v3.gain,
                                  osc0: {
                                      onOff: v3.onOff,
                                      freq: v3.freq
                                  }
                              }))(function () {
                                  return playKeys(dictMonoid)(dictAudioInterpret)(v)(Data_List_Types.Nil.value)(v2.value1);
                              });
                          };
                          if (v2.value0.k instanceof WAGS_Example_WTK_Types.K1) {
                              var v3 = (function () {
                                  var $29 = v.currentTime - v2.value0.startT > v2.value0.keyDuration;
                                  if ($29) {
                                      return v2.value0.endU;
                                  };
                                  return v2.value0.sustainU(v.currentTime);
                              })();
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(dictAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "k1";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                                  reflectSymbol: function () {
                                      return "k1";
                                  }
                              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "osc1";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "freq";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc1";
                                  }
                              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                                  reflectSymbol: function () {
                                      return "osc1";
                                  }
                              })()()()))(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "onOff";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc1";
                                  }
                              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                                  reflectSymbol: function () {
                                      return "osc1";
                                  }
                              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                                  k1: v3.gain,
                                  osc1: {
                                      onOff: v3.onOff,
                                      freq: v3.freq
                                  }
                              }))(function () {
                                  return playKeys(dictMonoid)(dictAudioInterpret)(v)(Data_List_Types.Nil.value)(v2.value1);
                              });
                          };
                          if (v2.value0.k instanceof WAGS_Example_WTK_Types.K2) {
                              var v3 = (function () {
                                  var $34 = v.currentTime - v2.value0.startT > v2.value0.keyDuration;
                                  if ($34) {
                                      return v2.value0.endU;
                                  };
                                  return v2.value0.sustainU(v.currentTime);
                              })();
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(dictAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "k2";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                                  reflectSymbol: function () {
                                      return "k2";
                                  }
                              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "osc2";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "freq";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc2";
                                  }
                              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                                  reflectSymbol: function () {
                                      return "osc2";
                                  }
                              })()()()))(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "onOff";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc2";
                                  }
                              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                                  reflectSymbol: function () {
                                      return "osc2";
                                  }
                              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                                  k2: v3.gain,
                                  osc2: {
                                      onOff: v3.onOff,
                                      freq: v3.freq
                                  }
                              }))(function () {
                                  return playKeys(dictMonoid)(dictAudioInterpret)(v)(Data_List_Types.Nil.value)(v2.value1);
                              });
                          };
                          if (v2.value0.k instanceof WAGS_Example_WTK_Types.K3) {
                              var v3 = (function () {
                                  var $39 = v.currentTime - v2.value0.startT > v2.value0.keyDuration;
                                  if ($39) {
                                      return v2.value0.endU;
                                  };
                                  return v2.value0.sustainU(v.currentTime);
                              })();
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(dictAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "k3";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                                  reflectSymbol: function () {
                                      return "k3";
                                  }
                              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "osc3";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "freq";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc3";
                                  }
                              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                                  reflectSymbol: function () {
                                      return "osc3";
                                  }
                              })()()()))(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "onOff";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc3";
                                  }
                              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                                  reflectSymbol: function () {
                                      return "osc3";
                                  }
                              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                                  k3: v3.gain,
                                  osc3: {
                                      onOff: v3.onOff,
                                      freq: v3.freq
                                  }
                              }))(function () {
                                  return playKeys(dictMonoid)(dictAudioInterpret)(v)(Data_List_Types.Nil.value)(v2.value1);
                              });
                          };
                          if (v2.value0.k instanceof WAGS_Example_WTK_Types.K4) {
                              var v3 = (function () {
                                  var $44 = v.currentTime - v2.value0.startT > v2.value0.keyDuration;
                                  if ($44) {
                                      return v2.value0.endU;
                                  };
                                  return v2.value0.sustainU(v.currentTime);
                              })();
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(dictAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "k4";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                                  reflectSymbol: function () {
                                      return "k4";
                                  }
                              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "osc4";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "freq";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc4";
                                  }
                              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                                  reflectSymbol: function () {
                                      return "osc4";
                                  }
                              })()()()))(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "onOff";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc4";
                                  }
                              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                                  reflectSymbol: function () {
                                      return "osc4";
                                  }
                              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                                  k4: v3.gain,
                                  osc4: {
                                      onOff: v3.onOff,
                                      freq: v3.freq
                                  }
                              }))(function () {
                                  return playKeys(dictMonoid)(dictAudioInterpret)(v)(Data_List_Types.Nil.value)(v2.value1);
                              });
                          };
                          if (v2.value0.k instanceof WAGS_Example_WTK_Types.K5) {
                              var v3 = (function () {
                                  var $49 = v.currentTime - v2.value0.startT > v2.value0.keyDuration;
                                  if ($49) {
                                      return v2.value0.endU;
                                  };
                                  return v2.value0.sustainU(v.currentTime);
                              })();
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(dictAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "k5";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                                  reflectSymbol: function () {
                                      return "k5";
                                  }
                              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "osc5";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "freq";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc5";
                                  }
                              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                                  reflectSymbol: function () {
                                      return "osc5";
                                  }
                              })()()()))(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "onOff";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc5";
                                  }
                              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                                  reflectSymbol: function () {
                                      return "osc5";
                                  }
                              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                                  k5: v3.gain,
                                  osc5: {
                                      onOff: v3.onOff,
                                      freq: v3.freq
                                  }
                              }))(function () {
                                  return playKeys(dictMonoid)(dictAudioInterpret)(v)(Data_List_Types.Nil.value)(v2.value1);
                              });
                          };
                          if (v2.value0.k instanceof WAGS_Example_WTK_Types.K6) {
                              var v3 = (function () {
                                  var $54 = v.currentTime - v2.value0.startT > v2.value0.keyDuration;
                                  if ($54) {
                                      return v2.value0.endU;
                                  };
                                  return v2.value0.sustainU(v.currentTime);
                              })();
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(dictAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "k6";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                                  reflectSymbol: function () {
                                      return "k6";
                                  }
                              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "osc6";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "freq";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc6";
                                  }
                              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                                  reflectSymbol: function () {
                                      return "osc6";
                                  }
                              })()()()))(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "onOff";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc6";
                                  }
                              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                                  reflectSymbol: function () {
                                      return "osc6";
                                  }
                              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                                  k6: v3.gain,
                                  osc6: {
                                      onOff: v3.onOff,
                                      freq: v3.freq
                                  }
                              }))(function () {
                                  return playKeys(dictMonoid)(dictAudioInterpret)(v)(Data_List_Types.Nil.value)(v2.value1);
                              });
                          };
                          if (v2.value0.k instanceof WAGS_Example_WTK_Types.K7) {
                              var v3 = (function () {
                                  var $59 = v.currentTime - v2.value0.startT > v2.value0.keyDuration;
                                  if ($59) {
                                      return v2.value0.endU;
                                  };
                                  return v2.value0.sustainU(v.currentTime);
                              })();
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(dictAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "k7";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                                  reflectSymbol: function () {
                                      return "k7";
                                  }
                              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "osc7";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "freq";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc7";
                                  }
                              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                                  reflectSymbol: function () {
                                      return "osc7";
                                  }
                              })()()()))(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "onOff";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc7";
                                  }
                              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                                  reflectSymbol: function () {
                                      return "osc7";
                                  }
                              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                                  k7: v3.gain,
                                  osc7: {
                                      onOff: v3.onOff,
                                      freq: v3.freq
                                  }
                              }))(function () {
                                  return playKeys(dictMonoid)(dictAudioInterpret)(v)(Data_List_Types.Nil.value)(v2.value1);
                              });
                          };
                          if (v2.value0.k instanceof WAGS_Example_WTK_Types.K8) {
                              var v3 = (function () {
                                  var $64 = v.currentTime - v2.value0.startT > v2.value0.keyDuration;
                                  if ($64) {
                                      return v2.value0.endU;
                                  };
                                  return v2.value0.sustainU(v.currentTime);
                              })();
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(dictAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "k8";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                                  reflectSymbol: function () {
                                      return "k8";
                                  }
                              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "osc8";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "freq";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc8";
                                  }
                              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                                  reflectSymbol: function () {
                                      return "osc8";
                                  }
                              })()()()))(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "onOff";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc8";
                                  }
                              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                                  reflectSymbol: function () {
                                      return "osc8";
                                  }
                              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                                  k8: v3.gain,
                                  osc8: {
                                      onOff: v3.onOff,
                                      freq: v3.freq
                                  }
                              }))(function () {
                                  return playKeys(dictMonoid)(dictAudioInterpret)(v)(Data_List_Types.Nil.value)(v2.value1);
                              });
                          };
                          if (v2.value0.k instanceof WAGS_Example_WTK_Types.K9) {
                              var v3 = (function () {
                                  var $69 = v.currentTime - v2.value0.startT > v2.value0.keyDuration;
                                  if ($69) {
                                      return v2.value0.endU;
                                  };
                                  return v2.value0.sustainU(v.currentTime);
                              })();
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(dictAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "k9";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                                  reflectSymbol: function () {
                                      return "k9";
                                  }
                              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "osc9";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "freq";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc9";
                                  }
                              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                                  reflectSymbol: function () {
                                      return "osc9";
                                  }
                              })()()()))(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "onOff";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc9";
                                  }
                              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                                  reflectSymbol: function () {
                                      return "osc9";
                                  }
                              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                                  k9: v3.gain,
                                  osc9: {
                                      onOff: v3.onOff,
                                      freq: v3.freq
                                  }
                              }))(function () {
                                  return playKeys(dictMonoid)(dictAudioInterpret)(v)(Data_List_Types.Nil.value)(v2.value1);
                              });
                          };
                          throw new Error("Failed pattern match at WAGS.Example.WTK.TLP (line 30, column 44 - line 80, column 23): " + [ v2.value0.k.constructor.name ]);
                      };
                      if (v1 instanceof Data_List_Types.Cons) {
                          if (v1.value0.k instanceof WAGS_Example_WTK_Types.K0) {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(dictAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "k0";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                                  reflectSymbol: function () {
                                      return "k0";
                                  }
                              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "osc0";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "freq";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc0";
                                  }
                              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                                  reflectSymbol: function () {
                                      return "osc0";
                                  }
                              })()()()))(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "onOff";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc0";
                                  }
                              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                                  reflectSymbol: function () {
                                      return "osc0";
                                  }
                              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                                  k0: v1.value0.startU.gain,
                                  osc0: {
                                      onOff: v1.value0.startU.onOff,
                                      freq: v1.value0.startU.freq
                                  }
                              }))(function () {
                                  return playKeys(dictMonoid)(dictAudioInterpret)(v)(v1.value1)(v2);
                              });
                          };
                          if (v1.value0.k instanceof WAGS_Example_WTK_Types.K1) {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(dictAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "k1";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                                  reflectSymbol: function () {
                                      return "k1";
                                  }
                              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "osc1";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "freq";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc1";
                                  }
                              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                                  reflectSymbol: function () {
                                      return "osc1";
                                  }
                              })()()()))(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "onOff";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc1";
                                  }
                              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                                  reflectSymbol: function () {
                                      return "osc1";
                                  }
                              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                                  k1: v1.value0.startU.gain,
                                  osc1: {
                                      onOff: v1.value0.startU.onOff,
                                      freq: v1.value0.startU.freq
                                  }
                              }))(function () {
                                  return playKeys(dictMonoid)(dictAudioInterpret)(v)(v1.value1)(v2);
                              });
                          };
                          if (v1.value0.k instanceof WAGS_Example_WTK_Types.K2) {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(dictAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "k2";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                                  reflectSymbol: function () {
                                      return "k2";
                                  }
                              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "osc2";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "freq";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc2";
                                  }
                              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                                  reflectSymbol: function () {
                                      return "osc2";
                                  }
                              })()()()))(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "onOff";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc2";
                                  }
                              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                                  reflectSymbol: function () {
                                      return "osc2";
                                  }
                              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                                  k2: v1.value0.startU.gain,
                                  osc2: {
                                      onOff: v1.value0.startU.onOff,
                                      freq: v1.value0.startU.freq
                                  }
                              }))(function () {
                                  return playKeys(dictMonoid)(dictAudioInterpret)(v)(v1.value1)(v2);
                              });
                          };
                          if (v1.value0.k instanceof WAGS_Example_WTK_Types.K3) {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(dictAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "k3";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                                  reflectSymbol: function () {
                                      return "k3";
                                  }
                              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "osc3";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "freq";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc3";
                                  }
                              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                                  reflectSymbol: function () {
                                      return "osc3";
                                  }
                              })()()()))(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "onOff";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc3";
                                  }
                              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                                  reflectSymbol: function () {
                                      return "osc3";
                                  }
                              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                                  k3: v1.value0.startU.gain,
                                  osc3: {
                                      onOff: v1.value0.startU.onOff,
                                      freq: v1.value0.startU.freq
                                  }
                              }))(function () {
                                  return playKeys(dictMonoid)(dictAudioInterpret)(v)(v1.value1)(v2);
                              });
                          };
                          if (v1.value0.k instanceof WAGS_Example_WTK_Types.K4) {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(dictAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "k4";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                                  reflectSymbol: function () {
                                      return "k4";
                                  }
                              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "osc4";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "freq";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc4";
                                  }
                              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                                  reflectSymbol: function () {
                                      return "osc4";
                                  }
                              })()()()))(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "onOff";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc4";
                                  }
                              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                                  reflectSymbol: function () {
                                      return "osc4";
                                  }
                              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                                  k4: v1.value0.startU.gain,
                                  osc4: {
                                      onOff: v1.value0.startU.onOff,
                                      freq: v1.value0.startU.freq
                                  }
                              }))(function () {
                                  return playKeys(dictMonoid)(dictAudioInterpret)(v)(v1.value1)(v2);
                              });
                          };
                          if (v1.value0.k instanceof WAGS_Example_WTK_Types.K5) {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(dictAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "k5";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                                  reflectSymbol: function () {
                                      return "k5";
                                  }
                              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "osc5";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "freq";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc5";
                                  }
                              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                                  reflectSymbol: function () {
                                      return "osc5";
                                  }
                              })()()()))(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "onOff";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc5";
                                  }
                              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                                  reflectSymbol: function () {
                                      return "osc5";
                                  }
                              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                                  k5: v1.value0.startU.gain,
                                  osc5: {
                                      onOff: v1.value0.startU.onOff,
                                      freq: v1.value0.startU.freq
                                  }
                              }))(function () {
                                  return playKeys(dictMonoid)(dictAudioInterpret)(v)(v1.value1)(v2);
                              });
                          };
                          if (v1.value0.k instanceof WAGS_Example_WTK_Types.K6) {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(dictAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "k6";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                                  reflectSymbol: function () {
                                      return "k6";
                                  }
                              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "osc6";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "freq";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc6";
                                  }
                              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                                  reflectSymbol: function () {
                                      return "osc6";
                                  }
                              })()()()))(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "onOff";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc6";
                                  }
                              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                                  reflectSymbol: function () {
                                      return "osc6";
                                  }
                              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                                  k6: v1.value0.startU.gain,
                                  osc6: {
                                      onOff: v1.value0.startU.onOff,
                                      freq: v1.value0.startU.freq
                                  }
                              }))(function () {
                                  return playKeys(dictMonoid)(dictAudioInterpret)(v)(v1.value1)(v2);
                              });
                          };
                          if (v1.value0.k instanceof WAGS_Example_WTK_Types.K7) {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(dictAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "k7";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                                  reflectSymbol: function () {
                                      return "k7";
                                  }
                              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "osc7";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "freq";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc7";
                                  }
                              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                                  reflectSymbol: function () {
                                      return "osc7";
                                  }
                              })()()()))(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "onOff";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc7";
                                  }
                              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                                  reflectSymbol: function () {
                                      return "osc7";
                                  }
                              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                                  k7: v1.value0.startU.gain,
                                  osc7: {
                                      onOff: v1.value0.startU.onOff,
                                      freq: v1.value0.startU.freq
                                  }
                              }))(function () {
                                  return playKeys(dictMonoid)(dictAudioInterpret)(v)(v1.value1)(v2);
                              });
                          };
                          if (v1.value0.k instanceof WAGS_Example_WTK_Types.K8) {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(dictAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "k8";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                                  reflectSymbol: function () {
                                      return "k8";
                                  }
                              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "osc8";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "freq";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc8";
                                  }
                              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                                  reflectSymbol: function () {
                                      return "osc8";
                                  }
                              })()()()))(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "onOff";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc8";
                                  }
                              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                                  reflectSymbol: function () {
                                      return "osc8";
                                  }
                              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                                  k8: v1.value0.startU.gain,
                                  osc8: {
                                      onOff: v1.value0.startU.onOff,
                                      freq: v1.value0.startU.freq
                                  }
                              }))(function () {
                                  return playKeys(dictMonoid)(dictAudioInterpret)(v)(v1.value1)(v2);
                              });
                          };
                          if (v1.value0.k instanceof WAGS_Example_WTK_Types.K9) {
                              return Control_Monad_Indexed_Qualified.discard(WAGS_Control_Indexed.ixBindIxWAG)(Control_Bind_Indexed.ixDiscardUnit)(WAGS_Change.ichange(dictAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "k9";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeNumber(WAGS_Change.changeAudioParameter()()(WAGS_Graph_AudioUnit.monoidTGain)(WAGS_Change.oneShotChangeGain)(WAGS_Change.changeXGain({
                                  reflectSymbol: function () {
                                      return "k9";
                                  }
                              })())))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLCons({
                                  reflectSymbol: function () {
                                      return "osc9";
                                  }
                              })()()(WAGS_ConstructEdges.constructEdgesRest)()()(WAGS_Change.changeRec()()(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "freq";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc9";
                                  }
                              })()(WAGS_Change.canBeChangedFreqN(WAGS_Change.canBeChangedFreq({
                                  reflectSymbol: function () {
                                      return "osc9";
                                  }
                              })()()()))(WAGS_Change["change''Cons"]({
                                  reflectSymbol: function () {
                                      return "onOff";
                                  }
                              })({
                                  reflectSymbol: function () {
                                      return "osc9";
                                  }
                              })()(WAGS_Change.canBeChangedOnOffSimple(WAGS_Change.canBeChangedAudioOnOff({
                                  reflectSymbol: function () {
                                      return "osc9";
                                  }
                              })()()()))(WAGS_Change["change''Nil"]))))(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))))({
                                  k9: v1.value0.startU.gain,
                                  osc9: {
                                      onOff: v1.value0.startU.onOff,
                                      freq: v1.value0.startU.freq
                                  }
                              }))(function () {
                                  return playKeys(dictMonoid)(dictAudioInterpret)(v)(v1.value1)(v2);
                              });
                          };
                          throw new Error("Failed pattern match at WAGS.Example.WTK.TLP (line 82, column 39 - line 132, column 34): " + [ v1.value0.k.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at WAGS.Example.WTK.TLP (line 18, column 1 - line 27, column 60): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
                  };
              };
          };
      };
  };
  var createFrame = function (v) {
      return Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSpeaker()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "mix";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "mix";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "k0";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "k0";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "osc0";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "osc0";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "k1";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "k1";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "osc1";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "osc1";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "k2";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "k2";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "osc2";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "osc2";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "k3";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "k3";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "osc3";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "osc3";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "k4";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "k4";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "osc4";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "osc4";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "k5";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "k5";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "osc5";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "osc5";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "k6";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "k6";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "osc6";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "osc6";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "k7";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "k7";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "osc7";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "osc7";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "k8";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "k8";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "osc8";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "osc8";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "k9";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createGain({
          reflectSymbol: function () {
              return "k9";
          }
      })()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "osc9";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSinOsc({
          reflectSymbol: function () {
              return "osc9";
          }
      })()())()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil)))))))))))(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "mix";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "k0";
          }
      })({
          reflectSymbol: function () {
              return "mix";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "k1";
          }
      })({
          reflectSymbol: function () {
              return "mix";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "k2";
          }
      })({
          reflectSymbol: function () {
              return "mix";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "k3";
          }
      })({
          reflectSymbol: function () {
              return "mix";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "k4";
          }
      })({
          reflectSymbol: function () {
              return "mix";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "k5";
          }
      })({
          reflectSymbol: function () {
              return "mix";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "k6";
          }
      })({
          reflectSymbol: function () {
              return "mix";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "k7";
          }
      })({
          reflectSymbol: function () {
              return "mix";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "k8";
          }
      })({
          reflectSymbol: function () {
              return "mix";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "k9";
          }
      })({
          reflectSymbol: function () {
              return "mix";
          }
      })()()({
          reflectSymbol: function () {
              return "TGain";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil)))))))))))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "osc0";
          }
      })({
          reflectSymbol: function () {
              return "k0";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "osc1";
          }
      })({
          reflectSymbol: function () {
              return "k1";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "osc2";
          }
      })({
          reflectSymbol: function () {
              return "k2";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "osc3";
          }
      })({
          reflectSymbol: function () {
              return "k3";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "osc4";
          }
      })({
          reflectSymbol: function () {
              return "k4";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "osc5";
          }
      })({
          reflectSymbol: function () {
              return "k5";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "osc6";
          }
      })({
          reflectSymbol: function () {
              return "k6";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "osc7";
          }
      })({
          reflectSymbol: function () {
              return "k7";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "osc8";
          }
      })({
          reflectSymbol: function () {
              return "k8";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "osc9";
          }
      })({
          reflectSymbol: function () {
              return "k9";
          }
      })()()({
          reflectSymbol: function () {
              return "TSinOsc";
          }
      })({
          reflectSymbol: function () {
              return "TGain";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil)))))))))))(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(WAGS_Example_WTK_Types.fullKeyboard))({
          currentKeys: Data_List_Types.Nil.value,
          availableKeys: new Data_List_Types.Cons(WAGS_Example_WTK_Types.K0.value, new Data_List_Types.Cons(WAGS_Example_WTK_Types.K1.value, new Data_List_Types.Cons(WAGS_Example_WTK_Types.K2.value, new Data_List_Types.Cons(WAGS_Example_WTK_Types.K3.value, new Data_List_Types.Cons(WAGS_Example_WTK_Types.K4.value, new Data_List_Types.Cons(WAGS_Example_WTK_Types.K5.value, new Data_List_Types.Cons(WAGS_Example_WTK_Types.K6.value, new Data_List_Types.Cons(WAGS_Example_WTK_Types.K7.value, new Data_List_Types.Cons(WAGS_Example_WTK_Types.K8.value, new Data_List_Types.Cons(WAGS_Example_WTK_Types.K9.value, Data_List_Types.Nil.value))))))))))
      });
  };
  var piece = function (v) {
      return WAGS_Control_Functions_Graph.istart()(Data_Monoid.monoidUnit)(WAGS_Interpret.mixedAudioInterpret)(createFrame)(WAGS_Control_Functions_Graph.iloop(Data_Monoid.monoidUnit)()(WAGS_Interpret.mixedAudioInterpret)(function (v1) {
          return function (v2) {
              var v3 = v.makeRenderingEnv(v1.trigger)(v1.time)(v2.availableKeys)(v2.currentKeys);
              return Data_Functor.voidLeft(WAGS_Control_Indexed.functorIxWAG)(playKeys(Data_Monoid.monoidUnit)(WAGS_Interpret.mixedAudioInterpret)({
                  currentTime: v1.time,
                  notesOff: v3.notesOff
              })(v3.onsets)(v3.newCurrentKeys))({
                  currentKeys: v3.futureCurrentKeys,
                  availableKeys: v3.futureAvailableKeys
              });
          };
      }));
  };
  exports["piece"] = piece;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.WTK"] = $PS["WAGS.Example.WTK"] || {};
  var exports = $PS["WAGS.Example.WTK"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Comonad_Cofree = $PS["Control.Comonad.Cofree"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Promise = $PS["Control.Promise"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var FRP_Behavior = $PS["FRP.Behavior"];
  var FRP_Event = $PS["FRP.Event"];
  var FRP_Event_MIDI = $PS["FRP.Event.MIDI"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var WAGS_Example_WTK_RenderingEnv = $PS["WAGS.Example.WTK.RenderingEnv"];
  var WAGS_Example_WTK_TLP = $PS["WAGS.Example.WTK.TLP"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Run = $PS["WAGS.Run"];                
  var StartAudio = (function () {
      function StartAudio() {

      };
      StartAudio.value = new StartAudio();
      return StartAudio;
  })();
  var StopAudio = (function () {
      function StopAudio() {

      };
      StopAudio.value = new StopAudio();
      return StopAudio;
  })();
  var render = function (s) {
      var ui = [ Halogen_HTML_Elements.h1_([ Halogen_HTML_Core.text("The Well-Typed Klavier") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v) {
          return StartAudio.value;
      }) ])([ Halogen_HTML_Core.text("Start audio") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v) {
          return StopAudio.value;
      }) ])([ Halogen_HTML_Core.text("Stop audio") ]) ];
      var showDevices = function (d) {
          var manufacturer = (function () {
              var $13 = d.manufacturer === "";
              if ($13) {
                  return "";
              };
              return d.manufacturer + ": ";
          })();
          return manufacturer + d.name;
      };
      var dev = (function () {
          if (s.devices instanceof Data_List_Types.Nil) {
              return [  ];
          };
          return [ Halogen_HTML_Elements.h4_([ Halogen_HTML_Core.text("Available input devices") ]), Halogen_HTML_Elements.ul_(Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Functor.map(Data_List_Types.functorList)(function ($25) {
              return Halogen_HTML_Elements.li_(Data_Array.singleton(Halogen_HTML_Core.text(showDevices($25))));
          })(s.devices))) ];
      })();
      return Halogen_HTML_Elements.div_(Data_Semigroup.append(Data_Semigroup.semigroupArray)(ui)(dev));
  };
  var initialState = function (v) {
      return {
          unsubscribe: Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit),
          audioCtx: Data_Maybe.Nothing.value,
          devices: Data_List_Types.Nil.value
      };
  };
  var easingAlgorithm = (function () {
      var fOf = function (initialTime) {
          return Control_Comonad_Cofree.mkCofree(initialTime)(function (adj) {
              return fOf(Data_Ord.max(Data_Ord.ordInt)(10)(initialTime - adj | 0));
          });
      };
      return fOf(20);
  })();
  var handleAction = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof StartAudio) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Control_Promise.toAffE(FRP_Event_MIDI.midiAccess)))(function (midAcc) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(FRP_Event_MIDI.midiInputDevices(midAcc)))(function (midDev) {
                          var trigger = Control_Alt.alt(FRP_Event.altEvent)(WAGS_Run.bufferToList(5)(FRP_Event_MIDI.midi(midAcc)))(Control_Applicative.pure(FRP_Event.applicativeEvent)(Data_List_Types.Nil.value));
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.context))(function (audioCtx) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.makeFFIAudioSnapshot(audioCtx)))(function (ffiAudio) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(FRP_Event.subscribe(WAGS_Run.run()(WAGS_Run.analyserRefsNil)(WAGS_Run.workWithAnalysersNil)(WAGS_Run.getAnalysersNil)(Data_Monoid.monoidUnit)(trigger)(Control_Applicative.pure(FRP_Behavior.applicativeABehavior(FRP_Event.functorEvent))(Data_Unit.unit))({
                                      easingAlgorithm: easingAlgorithm
                                  })(ffiAudio)(WAGS_Example_WTK_TLP.piece({
                                      makeRenderingEnv: WAGS_Example_WTK_RenderingEnv.makeRenderingEnv
                                  })))(function (v1) {
                                      return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                                  })))(function (unsubscribe) {
                                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                          var $16 = {};
                                          for (var $17 in v1) {
                                              if ({}.hasOwnProperty.call(v1, $17)) {
                                                  $16[$17] = v1[$17];
                                              };
                                          };
                                          $16.unsubscribe = unsubscribe;
                                          $16.audioCtx = new Data_Maybe.Just(audioCtx);
                                          $16.devices = midDev;
                                          return $16;
                                      });
                                  });
                              });
                          });
                      });
                  });
              };
              if (v instanceof StopAudio) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(v1.unsubscribe))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v1.audioCtx)((function () {
                              var $26 = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()));
                              return function ($27) {
                                  return $26(WAGS_Interpret.close($27));
                              };
                          })()))(function () {
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                  var $20 = {};
                                  for (var $21 in v2) {
                                      if ({}.hasOwnProperty.call(v2, $21)) {
                                          $20[$21] = v2[$21];
                                      };
                                  };
                                  $20.unsubscribe = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                                  $20.audioCtx = Data_Maybe.Nothing.value;
                                  $20.devices = Data_List_Types.Nil.value;
                                  return $20;
                              });
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at WAGS.Example.WTK (line 88, column 16 - line 113, column 79): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render,
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictMonadAff.MonadEffect0())(dictMonadAff),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: Halogen_Component.defaultEval.receive,
                  initialize: Halogen_Component.defaultEval.initialize,
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Graph.Worklet"] = $PS["WAGS.Graph.Worklet"] || {};
  var exports = $PS["WAGS.Graph.Worklet"];
  var AudioWorkletNodeRequest = (function () {
      function AudioWorkletNodeRequest() {

      };
      AudioWorkletNodeRequest.value = new AudioWorkletNodeRequest();
      return AudioWorkletNodeRequest;
  })();
  exports["AudioWorkletNodeRequest"] = AudioWorkletNodeRequest;
})(PS);
(function(exports) {
  "use strict";                                            

  exports.blobImpl = function (args) {
    return function (mediaType) {
      return new Blob(args, {type: mediaType});
    };
  };
})(PS["Web.File.Blob"] = PS["Web.File.Blob"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Web.File.Blob"] = $PS["Web.File.Blob"] || {};
  var exports = $PS["Web.File.Blob"];
  var $foreign = $PS["Web.File.Blob"];
  var fromArray = function (args) {
      return function (opts) {
          return $foreign.blobImpl(args)(opts);
      };
  };
  exports["fromArray"] = fromArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.WhiteNoise"] = $PS["WAGS.Example.WhiteNoise"] || {};
  var exports = $PS["WAGS.Example.WhiteNoise"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Comonad_Cofree = $PS["Control.Comonad.Cofree"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_MediaType_Common = $PS["Data.MediaType.Common"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Typelevel_Num_Reps = $PS["Data.Typelevel.Num.Reps"];
  var Data_Typelevel_Num_Sets = $PS["Data.Typelevel.Num.Sets"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var FRP_Behavior = $PS["FRP.Behavior"];
  var FRP_Event = $PS["FRP.Event"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var $$Math = $PS["Math"];
  var Simple_JSON = $PS["Simple.JSON"];
  var WAGS_Change = $PS["WAGS.Change"];
  var WAGS_Connect = $PS["WAGS.Connect"];
  var WAGS_ConstructEdges = $PS["WAGS.ConstructEdges"];
  var WAGS_Control_Functions_Graph = $PS["WAGS.Control.Functions.Graph"];
  var WAGS_Create = $PS["WAGS.Create"];
  var WAGS_Create_Optionals = $PS["WAGS.Create.Optionals"];
  var WAGS_Graph_Paramable = $PS["WAGS.Graph.Paramable"];
  var WAGS_Graph_Parameter = $PS["WAGS.Graph.Parameter"];
  var WAGS_Graph_Worklet = $PS["WAGS.Graph.Worklet"];
  var WAGS_Interpret = $PS["WAGS.Interpret"];
  var WAGS_Run = $PS["WAGS.Run"];
  var WAGS_Util = $PS["WAGS.Util"];
  var Web_File_Blob = $PS["Web.File.Blob"];
  var Web_File_Url = $PS["Web.File.Url"];                
  var StartAudio = (function () {
      function StartAudio() {

      };
      StartAudio.value = new StartAudio();
      return StartAudio;
  })();
  var StopAudio = (function () {
      function StopAudio() {

      };
      StopAudio.value = new StopAudio();
      return StopAudio;
  })();
  var scene = function (wnr) {
      return function (time) {
          return WAGS_Create_Optionals.speaker({
              whiteNoise: WAGS_Create_Optionals.audioWorkletNode({
                  reflectSymbol: function () {
                      return "white-noise-processor";
                  }
              })(Data_Typelevel_Num_Sets.natD0)(Data_Typelevel_Num_Sets.posD1)(WAGS_Util.validateOutputChannelCountD1(Data_Typelevel_Num_Sets.posD1))()(Simple_JSON.recordWriteForeign()(Simple_JSON.nilWriteForeignFields))(wnr)({
                  numberOfInputs: Data_Typelevel_Num_Reps.d0,
                  numberOfOutputs: Data_Typelevel_Num_Reps.d1,
                  outputChannelCount: Data_Typelevel_Num_Reps.d1,
                  parameterData: {
                      customGain: (function () {
                          var $17 = time < 0.33;
                          if ($17) {
                              return WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(0.0);
                          };
                          return WAGS_Graph_Parameter.ff(WAGS_Graph_Parameter.lensTimeAudioParameter)(6.0e-2)(WAGS_Graph_Paramable.paramize(WAGS_Graph_Paramable.paramableNumber)(2.0e-2 - $$Math.cos($$Math.pi * (time - 0.33) * 0.2) * 1.0e-2));
                      })()
                  },
                  processorOptions: {}
              })({})
          });
      };
  };
  var initialState = function (v) {
      return {
          unsubscribe: Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit),
          audioCtx: Data_Maybe.Nothing.value
      };
  };
  var easingAlgorithm = (function () {
      var fOf = function (initialTime) {
          return Control_Comonad_Cofree.mkCofree(initialTime)(function (adj) {
              return fOf(Data_Ord.max(Data_Ord.ordInt)(20)(initialTime - adj | 0));
          });
      };
      return fOf(20);
  })();
  var createFrame = function (v) {
      return WAGS_Create.icreate(WAGS_Interpret.mixedAudioInterpret)(WAGS_Create.createAll(WAGS_Create.createInternalAll()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createSpeaker()())()(WAGS_Create.createStepRLCons({
          reflectSymbol: function () {
              return "whiteNoise";
          }
      })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Create.createAudioWorkletNode({
          reflectSymbol: function () {
              return "whiteNoise";
          }
      })({
          reflectSymbol: function () {
              return "white-noise-processor";
          }
      })()()()(WAGS_Create.createParametersCons({
          reflectSymbol: function () {
              return "customGain";
          }
      })()(WAGS_Create.createParametersNil))(Data_Monoid.monoidRecord()(Data_Monoid.monoidRecordNil))(Data_Typelevel_Num_Sets.natD0)(Data_Typelevel_Num_Sets.posD1)(WAGS_Util.validateOutputChannelCountD1(Data_Typelevel_Num_Sets.posD1))(Simple_JSON.recordWriteForeign()(Simple_JSON.nilWriteForeignFields)))()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil))(WAGS_Create.createStepRLNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeCons(WAGS_Connect.connectInstance({
          reflectSymbol: function () {
              return "whiteNoise";
          }
      })({
          reflectSymbol: function () {
              return "speaker";
          }
      })()()({
          reflectSymbol: function () {
              return "TAudioWorkletNode_white-noise-processor";
          }
      })({
          reflectSymbol: function () {
              return "TSpeaker";
          }
      })()()()()())(WAGS_Create.connectEdgesToNodeNil))(WAGS_Create.connectAfterCreateCons()()()()()()(WAGS_Create.connectEdgesToNodeNil)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil))(WAGS_Create.connectAfterCreateNil))))(scene(v.world.noiseUnit)(v.time));
  };
  var piece = WAGS_Control_Functions_Graph.istart()(Data_Monoid.monoidUnit)(WAGS_Interpret.mixedAudioInterpret)(createFrame)(WAGS_Control_Functions_Graph.iloop(Data_Monoid.monoidUnit)()(WAGS_Interpret.mixedAudioInterpret)(function (v) {
      return function (v1) {
          return WAGS_Change.ichange(WAGS_Interpret.mixedAudioInterpret)(WAGS_Change.changeAll(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "speaker";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeSpeaker())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLCons({
              reflectSymbol: function () {
                  return "whiteNoise";
              }
          })()()(WAGS_ConstructEdges.constructEdgesTuple)()()(WAGS_Change.changeAudioWorkletNode({
              reflectSymbol: function () {
                  return "whiteNoise";
              }
          })()(WAGS_Change.interpretParametersCons({
              reflectSymbol: function () {
                  return "customGain";
              }
          })()()(WAGS_Change.interpretParametersNil))())(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(WAGS_Change.changeRLNil)))(WAGS_Change.changeRLNil))))(scene(v.world.noiseUnit)(v.time));
      };
  }));
  var handleAction = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof StartAudio) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(handleAction(dictMonadAff.MonadEffect0())(dictMonadAff)(StopAudio.value))(function () {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(WAGS_Interpret.context))(function (audioCtx) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Web_File_Url.createObjectURL(Web_File_Blob.fromArray([ "// white-noise-processor.js\x0aclass WhiteNoiseProcessor extends AudioWorkletProcessor {\x0a  static get parameterDescriptors () {\x0a    return [{\x0a      name: 'customGain',\x0a      defaultValue: 1,\x0a      minValue: 0,\x0a      maxValue: 1,\x0a      automationRate: 'a-rate'\x0a    }]\x0a  }\x0a\x0a  process (inputs, outputs, parameters) {\x0a    const output = outputs[0]\x0a    output.forEach(channel => {\x0a      for (let i = 0; i < channel.length; i++) {\x0a        channel[i] = (Math.random() * 2 - 1) *\x0a          (parameters['customGain'].length > 1 ? parameters['customGain'][i] : parameters['customGain'][0])\x0a        // note: a parameter contains an array of 128 values (one value for each of 128 samples),\x0a        // however it may contain a single value which is to be used for all 128 samples\x0a        // if no automation is scheduled for the moment.\x0a      }\x0a    })\x0a    return true\x0a  }\x0a}\x0a\x0aregisterProcessor('white-noise-processor', WhiteNoiseProcessor)" ])(Data_MediaType_Common.applicationJavascript))))(function (objUrl) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(WAGS_Interpret.audioWorkletAddModule({
                                  reflectSymbol: function () {
                                      return "white-noise-processor";
                                  }
                              })(Data_Typelevel_Num_Sets.natD0)(Data_Typelevel_Num_Sets.posD1)(WAGS_Util.validateOutputChannelCountD1(Data_Typelevel_Num_Sets.posD1))()(Simple_JSON.recordWriteForeign()(Simple_JSON.nilWriteForeignFields))(audioCtx)(objUrl)(WAGS_Graph_Worklet.AudioWorkletNodeRequest.value)))(function (noiseUnit) {
                                  return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(function __do() {
                                      var ffiAudio = WAGS_Interpret.makeFFIAudioSnapshot(audioCtx)();
                                      var unsubscribe = FRP_Event.subscribe(WAGS_Run.run()(WAGS_Run.analyserRefsNil)(WAGS_Run.workWithAnalysersNil)(WAGS_Run.getAnalysersNil)(Data_Monoid.monoidUnit)(Control_Applicative.pure(FRP_Event.applicativeEvent)(Data_Unit.unit))(Control_Applicative.pure(FRP_Behavior.applicativeABehavior(FRP_Event.functorEvent))({
                                          noiseUnit: noiseUnit
                                      }))({
                                          easingAlgorithm: easingAlgorithm
                                      })(ffiAudio)(piece))(function (v1) {
                                          return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                                      })();
                                      return {
                                          unsubscribe: unsubscribe,
                                          audioCtx: audioCtx
                                      };
                                  });
                              });
                          });
                      }))(function (v1) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                              var $28 = {};
                              for (var $29 in v2) {
                                  if ({}.hasOwnProperty.call(v2, $29)) {
                                      $28[$29] = v2[$29];
                                  };
                              };
                              $28.unsubscribe = v1.unsubscribe;
                              $28.audioCtx = new Data_Maybe.Just(v1.audioCtx);
                              return $28;
                          });
                      });
                  });
              };
              if (v instanceof StopAudio) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(function __do() {
                          v1.unsubscribe();
                          return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v1.audioCtx)(WAGS_Interpret.close)();
                      }))(function () {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                              var $34 = {};
                              for (var $35 in v2) {
                                  if ({}.hasOwnProperty.call(v2, $35)) {
                                      $34[$35] = v2[$35];
                                  };
                              };
                              $34.unsubscribe = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                              $34.audioCtx = Data_Maybe.Nothing.value;
                              return $34;
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at WAGS.Example.WhiteNoise (line 149, column 16 - line 201, column 64): " + [ v.constructor.name ]);
          };
      };
  };
  var buttonStyle = Halogen_HTML_Properties.style("padding: 3px; margin: 5px");
  var render = Data_Function["const"](Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.h1_([ Halogen_HTML_Core.text("n0iseeeeeeeee") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v) {
      return StartAudio.value;
  }), buttonStyle ])([ Halogen_HTML_Core.text("Play") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(function (v) {
      return StopAudio.value;
  }), buttonStyle ])([ Halogen_HTML_Core.text("Stop") ]) ]));
  var component = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render,
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictMonadAff.MonadEffect0())(dictMonadAff),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: Halogen_Component.defaultEval.receive,
                  initialize: Halogen_Component.defaultEval.initialize,
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WAGS.Example.Storybook"] = $PS["WAGS.Example.Storybook"] || {};
  var exports = $PS["WAGS.Example.Storybook"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Halogen_Aff_Util = $PS["Halogen.Aff.Util"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Storybook = $PS["Halogen.Storybook"];
  var Halogen_Storybook_Proxy = $PS["Halogen.Storybook.Proxy"];
  var WAGS_Example_AtariSpeaks = $PS["WAGS.Example.AtariSpeaks"];
  var WAGS_Example_DrumMachine = $PS["WAGS.Example.DrumMachine"];
  var WAGS_Example_HelloWorld = $PS["WAGS.Example.HelloWorld"];
  var WAGS_Example_KitchenSink = $PS["WAGS.Example.KitchenSink"];
  var WAGS_Example_Makenna = $PS["WAGS.Example.Makenna"];
  var WAGS_Example_NoLoop = $PS["WAGS.Example.NoLoop"];
  var WAGS_Example_SMC2022 = $PS["WAGS.Example.SMC2022"];
  var WAGS_Example_SkipMachine = $PS["WAGS.Example.SkipMachine"];
  var WAGS_Example_Subgraph = $PS["WAGS.Example.Subgraph"];
  var WAGS_Example_Tumult = $PS["WAGS.Example.Tumult"];
  var WAGS_Example_WTK = $PS["WAGS.Example.WTK"];
  var WAGS_Example_WhiteNoise = $PS["WAGS.Example.WhiteNoise"];                
  var stories = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return function (dictMonadThrow) {
              return Foreign_Object.fromFoldable(Data_Foldable.foldableArray)([ Data_Tuple.Tuple.create("atari speaks")(Halogen_Storybook_Proxy.proxy(WAGS_Example_AtariSpeaks.component(dictMonadAff.MonadEffect0())(dictMonadAff))), Data_Tuple.Tuple.create("drum machine")(Halogen_Storybook_Proxy.proxy(WAGS_Example_DrumMachine.component(dictMonadAff.MonadEffect0())(dictMonadAff))), Data_Tuple.Tuple.create("hello world")(Halogen_Storybook_Proxy.proxy(WAGS_Example_HelloWorld.component(dictMonadAff.MonadEffect0())(dictMonadAff))), Data_Tuple.Tuple.create("kitchen sink")(Halogen_Storybook_Proxy.proxy(WAGS_Example_KitchenSink.component(dictMonadThrow)(dictMonadAff.MonadEffect0())(dictMonadAff))), Data_Tuple.Tuple.create("happy birthday")(Halogen_Storybook_Proxy.proxy(WAGS_Example_Makenna.component(dictMonadAff.MonadEffect0())(dictMonadAff))), Data_Tuple.Tuple.create("no loop")(Halogen_Storybook_Proxy.proxy(WAGS_Example_NoLoop.component(dictMonadAff.MonadEffect0())(dictMonadAff))), Data_Tuple.Tuple.create("skip machine")(Halogen_Storybook_Proxy.proxy(WAGS_Example_SkipMachine.component(dictMonadAff.MonadEffect0())(dictMonadAff))), Data_Tuple.Tuple.create("smc2022")(Halogen_Storybook_Proxy.proxy(WAGS_Example_SMC2022.component(dictMonadAff.MonadEffect0())(dictMonadAff))), Data_Tuple.Tuple.create("subgraph")(Halogen_Storybook_Proxy.proxy(WAGS_Example_Subgraph.component(dictMonadAff.MonadEffect0())(dictMonadAff))), Data_Tuple.Tuple.create("tumult")(Halogen_Storybook_Proxy.proxy(WAGS_Example_Tumult.component(dictMonadAff.MonadEffect0())(dictMonadAff))), Data_Tuple.Tuple.create("white noise")(Halogen_Storybook_Proxy.proxy(WAGS_Example_WhiteNoise.component(dictMonadAff.MonadEffect0())(dictMonadAff))), Data_Tuple.Tuple.create("wtk")(Halogen_Storybook_Proxy.proxy(WAGS_Example_WTK.component(dictMonadAff.MonadEffect0())(dictMonadAff))) ]);
          };
      };
  };
  var main = Halogen_Aff_Util.runHalogenAff(Control_Bind.bind(Effect_Aff.bindAff)(Halogen_Aff_Util.awaitBody)(Halogen_Storybook.runStorybook({
      stories: stories(Effect_Aff.monadEffectAff)(Effect_Aff_Class.monadAffAff)(Effect_Aff.monadThrowAff),
      logo: new Data_Maybe.Just(Halogen_HTML_Core.text("Wags acceptance tests"))
  })));
  exports["stories"] = stories;
  exports["main"] = main;
})(PS);
PS["WAGS.Example.Storybook"].main();